global ptr c init with 2097152 x i32 zeros
global ptr dst init with 2097152 x i32 zeros
global ptr w init with 2097152 x i32 zeros
global ptr temp init with 2097152 x i32 zeros
immutable global ptr maxlen init with i32 2097152
void mem_move(ptr src, ptr dst, i32 n) {
entry43:
  br bb %while.cond
while.cond:
  i.phi = phi [bb %entry43, i32 0, bb %while.body, i32 %61]
  51 = icmp slt i32 %i.phi, i32 %n
  br i1 %51, bb %while.body, bb %while.exit
while.body:
  234 = shl i32 %i.phi, i32 2
  55 = ptradd ptr %dst, i32 %234
  58 = ptradd ptr %src, i32 %234
  58.load = load i32 from ptr %58
  store i32 %58.load to ptr %55
  61 = add i32 %i.phi, i32 1
  br bb %while.cond
while.exit:
  ret 
}

external i32 getint()

external i32 getch()

external void putint(i32 )

void floyd(ptr w, ptr dst, i32 n) {
entry62:
  br bb %while.cond65
while.cond65:
  k.phi219 = phi [bb %entry62, i32 0, bb %while.exit75, i32 %94]
  70 = icmp slt i32 %k.phi219, i32 %n
  br i1 %70, bb %while.body66, bb %while.exit67
while.body66:
  br bb %while.cond73
while.exit67:
  br bb %while.cond95
while.cond73:
  i72.phi = phi [bb %while.body66, i32 0, bb %while.body74.split, i32 %92]
  78 = icmp slt i32 %i72.phi, i32 %n
  br i1 %78, bb %while.body74, bb %while.exit75
while.body74:
  82 = mul i32 %i72.phi, i32 %n
  84 = add i32 %82, i32 %k.phi219
  236 = shl i32 %84, i32 2
  86 = ptradd ptr @temp, i32 %236
  5377 = icmp slt i32 %i72.phi, i32 0
  br i1 %5377, bb %getvalue.select.then, bb %getvalue.select.else
while.body74.split:
  90.ret = phi [bb %getvalue.then, i32 -1, bb %getvalue.if.exit, i32 %41.load410]
  store i32 %90.ret to ptr %86
  92 = add i32 %i72.phi, i32 1
  br bb %while.cond73
while.exit75:
  94 = add i32 %k.phi219, i32 1
  br bb %while.cond65
while.cond95:
  select126.phi230 = phi [bb %while.exit67, i1 ub, bb %while.exit105, i1 %select126.phi229]
  j.phi224 = phi [bb %while.exit67, i32 ub, bb %while.exit105, i32 %j.phi223]
  k.phi = phi [bb %while.exit67, i32 0, bb %while.exit105, i32 %200]
  100 = icmp slt i32 %k.phi, i32 %n
  br i1 %100, bb %while.body96, bb %while.exit97
while.body96:
  br bb %while.cond103
while.exit97:
  203 = mul i32 %n, i32 %n
  br bb %mem_move.while.cond
while.cond103:
  select126.phi229 = phi [bb %while.body96, i1 %select126.phi230, bb %while.exit113, i1 %select126.phi228]
  i102.phi = phi [bb %while.body96, i32 0, bb %while.exit113, i32 %198]
  j.phi223 = phi [bb %while.body96, i32 %j.phi224, bb %while.exit113, i32 %j.phi]
  108 = icmp slt i32 %i102.phi, i32 %n
  br i1 %108, bb %while.body104, bb %while.exit105
while.body104:
  br bb %while.cond111
while.exit105:
  200 = add i32 %k.phi, i32 1
  br bb %while.cond95
while.cond111:
  select126.phi228 = phi [bb %while.body104, i1 %select126.phi229, bb %if.exit134, i1 %select126.phi]
  j.phi = phi [bb %while.body104, i32 0, bb %if.exit134, i32 %196]
  116 = icmp slt i32 %j.phi, i32 %n
  br i1 %116, bb %while.body112, bb %while.exit113
while.body112:
  5415 = icmp slt i32 %i102.phi, i32 0
  br i1 %5415, bb %getvalue.select.then417, bb %getvalue.select.else419
while.body112.split:
  121.ret = phi [bb %getvalue.then441, i32 -1, bb %getvalue.if.exit443, i32 %41.load448]
  122 = icmp sge i32 %121.ret, i32 0
  br i1 %122, bb %select.then123, bb %select.else124
while.exit113:
  198 = add i32 %i102.phi, i32 1
  br bb %while.cond103
select.then123:
  5453 = icmp slt i32 %k.phi, i32 0
  br i1 %5453, bb %getvalue.select.then455, bb %getvalue.select.else457
select.then123.split:
  130.ret = phi [bb %getvalue.then479, i32 -1, bb %getvalue.if.exit481, i32 %41.load486]
  131 = icmp sge i32 %130.ret, i32 0
  br bb %select.exit125
select.else124:
  br bb %select.exit125
select.exit125:
  select126.phi = phi [bb %select.else124, i1 0, bb %select.then123.split, i1 %131]
  br i1 %select126.phi, bb %then133, bb %if.exit134
then133:
  br i1 %5415, bb %getvalue.select.then493, bb %getvalue.select.else495
then133.split:
  138.ret = phi [bb %getvalue.then517, i32 -1, bb %getvalue.if.exit519, i32 %41.load524]
  139 = icmp slt i32 %138.ret, i32 0
  br i1 %139, bb %then140, bb %else
if.exit134:
  196 = add i32 %j.phi, i32 1
  br bb %while.cond111
then140:
  145 = mul i32 %i102.phi, i32 %n
  147 = add i32 %145, i32 %j.phi
  237 = shl i32 %147, i32 2
  149 = ptradd ptr @temp, i32 %237
  5529 = icmp slt i32 %k.phi, i32 0
  br i1 %5529, bb %getvalue.select.then531, bb %getvalue.select.else533
then140.split:
  157.ret = phi [bb %getvalue.then555, i32 -1, bb %getvalue.if.exit557, i32 %41.load562]
  158 = add i32 %121.ret, i32 %157.ret
  store i32 %158 to ptr %149
  br bb %if.exit134
else:
  161 = mul i32 %i102.phi, i32 %n
  163 = add i32 %161, i32 %j.phi
  238 = shl i32 %163, i32 2
  165 = ptradd ptr @temp, i32 %238
  165.load = load i32 from ptr %165
  5567 = icmp slt i32 %k.phi, i32 0
  br i1 %5567, bb %getvalue.select.then569, bb %getvalue.select.else571
else.split:
  174.ret = phi [bb %getvalue.then593, i32 -1, bb %getvalue.if.exit595, i32 %41.load600]
  175 = add i32 %121.ret, i32 %174.ret
  176 = icmp sgt i32 %165.load, i32 %175
  br i1 %176, bb %then177, bb %if.exit134
then177:
  store i32 %175 to ptr %165
  br bb %if.exit134
mem_move.while.cond:
  i.phi245 = phi [bb %while.exit97, i32 0, bb %mem_move.while.body, i32 %61254]
  51246 = icmp slt i32 %i.phi245, i32 %203
  br i1 %51246, bb %mem_move.while.body, bb %mem_move.while.exit
mem_move.while.body:
  234249 = shl i32 %i.phi245, i32 2
  55250 = ptradd ptr %dst, i32 %234249
  58251 = ptradd ptr @temp, i32 %234249
  58.load252 = load i32 from ptr %58251
  store i32 %58.load252 to ptr %55250
  61254 = add i32 %i.phi245, i32 1
  br bb %mem_move.while.cond
mem_move.while.exit:
  ret 
getvalue.select.then:
  br bb %getvalue.select.exit
getvalue.select.else:
  12382 = icmp sge i32 %i72.phi, i32 %n
  br bb %getvalue.select.exit
getvalue.select.exit:
  select.phi385 = phi [bb %getvalue.select.else, i1 %12382, bb %getvalue.select.then, i1 -1]
  br i1 %select.phi385, bb %getvalue.select.then15, bb %getvalue.select.else16
getvalue.select.then15:
  br bb %getvalue.select.exit17
getvalue.select.else16:
  20390 = icmp slt i32 %k.phi219, i32 0
  br bb %getvalue.select.exit17
getvalue.select.exit17:
  select18.phi393 = phi [bb %getvalue.select.else16, i1 %20390, bb %getvalue.select.then15, i1 -1]
  br i1 %select18.phi393, bb %getvalue.select.then23, bb %getvalue.select.else24
getvalue.select.then23:
  br bb %getvalue.select.exit25
getvalue.select.else24:
  29398 = icmp sge i32 %k.phi219, i32 %n
  br bb %getvalue.select.exit25
getvalue.select.exit25:
  select26.phi401 = phi [bb %getvalue.select.else24, i1 %29398, bb %getvalue.select.then23, i1 -1]
  br i1 %select26.phi401, bb %getvalue.then, bb %getvalue.if.exit
getvalue.then:
  br bb %while.body74.split
getvalue.if.exit:
  41409 = ptradd ptr %w, i32 %236
  41.load410 = load i32 from ptr %41409
  br bb %while.body74.split
getvalue.select.then417:
  br bb %getvalue.select.exit422
getvalue.select.else419:
  12420 = icmp sge i32 %i102.phi, i32 %n
  br bb %getvalue.select.exit422
getvalue.select.exit422:
  select.phi423 = phi [bb %getvalue.select.else419, i1 %12420, bb %getvalue.select.then417, i1 -1]
  br i1 %select.phi423, bb %getvalue.select.then15425, bb %getvalue.select.else16427
getvalue.select.then15425:
  br bb %getvalue.select.exit17430
getvalue.select.else16427:
  20428 = icmp slt i32 %k.phi, i32 0
  br bb %getvalue.select.exit17430
getvalue.select.exit17430:
  select18.phi431 = phi [bb %getvalue.select.else16427, i1 %20428, bb %getvalue.select.then15425, i1 -1]
  br i1 %select18.phi431, bb %getvalue.select.then23433, bb %getvalue.select.else24435
getvalue.select.then23433:
  br bb %getvalue.select.exit25438
getvalue.select.else24435:
  29436 = icmp sge i32 %k.phi, i32 %n
  br bb %getvalue.select.exit25438
getvalue.select.exit25438:
  select26.phi439 = phi [bb %getvalue.select.else24435, i1 %29436, bb %getvalue.select.then23433, i1 -1]
  br i1 %select26.phi439, bb %getvalue.then441, bb %getvalue.if.exit443
getvalue.then441:
  br bb %while.body112.split
getvalue.if.exit443:
  37444 = mul i32 %i102.phi, i32 %n
  39445 = add i32 %37444, i32 %k.phi
  240446 = shl i32 %39445, i32 2
  41447 = ptradd ptr @temp, i32 %240446
  41.load448 = load i32 from ptr %41447
  br bb %while.body112.split
getvalue.select.then455:
  br bb %getvalue.select.exit460
getvalue.select.else457:
  12458 = icmp sge i32 %k.phi, i32 %n
  br bb %getvalue.select.exit460
getvalue.select.exit460:
  select.phi461 = phi [bb %getvalue.select.else457, i1 %12458, bb %getvalue.select.then455, i1 -1]
  br i1 %select.phi461, bb %getvalue.select.then15463, bb %getvalue.select.else16465
getvalue.select.then15463:
  br bb %getvalue.select.exit17468
getvalue.select.else16465:
  20466 = icmp slt i32 %j.phi, i32 0
  br bb %getvalue.select.exit17468
getvalue.select.exit17468:
  select18.phi469 = phi [bb %getvalue.select.else16465, i1 %20466, bb %getvalue.select.then15463, i1 -1]
  br i1 %select18.phi469, bb %getvalue.select.then23471, bb %getvalue.select.else24473
getvalue.select.then23471:
  br bb %getvalue.select.exit25476
getvalue.select.else24473:
  29474 = icmp sge i32 %j.phi, i32 %n
  br bb %getvalue.select.exit25476
getvalue.select.exit25476:
  select26.phi477 = phi [bb %getvalue.select.else24473, i1 %29474, bb %getvalue.select.then23471, i1 -1]
  br i1 %select26.phi477, bb %getvalue.then479, bb %getvalue.if.exit481
getvalue.then479:
  br bb %select.then123.split
getvalue.if.exit481:
  37482 = mul i32 %k.phi, i32 %n
  39483 = add i32 %37482, i32 %j.phi
  240484 = shl i32 %39483, i32 2
  41485 = ptradd ptr @temp, i32 %240484
  41.load486 = load i32 from ptr %41485
  br bb %select.then123.split
getvalue.select.then493:
  br bb %getvalue.select.exit498
getvalue.select.else495:
  12496 = icmp sge i32 %i102.phi, i32 %n
  br bb %getvalue.select.exit498
getvalue.select.exit498:
  select.phi499 = phi [bb %getvalue.select.else495, i1 %12496, bb %getvalue.select.then493, i1 -1]
  br i1 %select.phi499, bb %getvalue.select.then15501, bb %getvalue.select.else16503
getvalue.select.then15501:
  br bb %getvalue.select.exit17506
getvalue.select.else16503:
  20504 = icmp slt i32 %j.phi, i32 0
  br bb %getvalue.select.exit17506
getvalue.select.exit17506:
  select18.phi507 = phi [bb %getvalue.select.else16503, i1 %20504, bb %getvalue.select.then15501, i1 -1]
  br i1 %select18.phi507, bb %getvalue.select.then23509, bb %getvalue.select.else24511
getvalue.select.then23509:
  br bb %getvalue.select.exit25514
getvalue.select.else24511:
  29512 = icmp sge i32 %j.phi, i32 %n
  br bb %getvalue.select.exit25514
getvalue.select.exit25514:
  select26.phi515 = phi [bb %getvalue.select.else24511, i1 %29512, bb %getvalue.select.then23509, i1 -1]
  br i1 %select26.phi515, bb %getvalue.then517, bb %getvalue.if.exit519
getvalue.then517:
  br bb %then133.split
getvalue.if.exit519:
  37520 = mul i32 %i102.phi, i32 %n
  39521 = add i32 %37520, i32 %j.phi
  240522 = shl i32 %39521, i32 2
  41523 = ptradd ptr @temp, i32 %240522
  41.load524 = load i32 from ptr %41523
  br bb %then133.split
getvalue.select.then531:
  br bb %getvalue.select.exit536
getvalue.select.else533:
  12534 = icmp sge i32 %k.phi, i32 %n
  br bb %getvalue.select.exit536
getvalue.select.exit536:
  select.phi537 = phi [bb %getvalue.select.else533, i1 %12534, bb %getvalue.select.then531, i1 -1]
  br i1 %select.phi537, bb %getvalue.select.then15539, bb %getvalue.select.else16541
getvalue.select.then15539:
  br bb %getvalue.select.exit17544
getvalue.select.else16541:
  20542 = icmp slt i32 %j.phi, i32 0
  br bb %getvalue.select.exit17544
getvalue.select.exit17544:
  select18.phi545 = phi [bb %getvalue.select.else16541, i1 %20542, bb %getvalue.select.then15539, i1 -1]
  br i1 %select18.phi545, bb %getvalue.select.then23547, bb %getvalue.select.else24549
getvalue.select.then23547:
  br bb %getvalue.select.exit25552
getvalue.select.else24549:
  29550 = icmp sge i32 %j.phi, i32 %n
  br bb %getvalue.select.exit25552
getvalue.select.exit25552:
  select26.phi553 = phi [bb %getvalue.select.else24549, i1 %29550, bb %getvalue.select.then23547, i1 -1]
  br i1 %select26.phi553, bb %getvalue.then555, bb %getvalue.if.exit557
getvalue.then555:
  br bb %then140.split
getvalue.if.exit557:
  37558 = mul i32 %k.phi, i32 %n
  39559 = add i32 %37558, i32 %j.phi
  240560 = shl i32 %39559, i32 2
  41561 = ptradd ptr @temp, i32 %240560
  41.load562 = load i32 from ptr %41561
  br bb %then140.split
getvalue.select.then569:
  br bb %getvalue.select.exit574
getvalue.select.else571:
  12572 = icmp sge i32 %k.phi, i32 %n
  br bb %getvalue.select.exit574
getvalue.select.exit574:
  select.phi575 = phi [bb %getvalue.select.else571, i1 %12572, bb %getvalue.select.then569, i1 -1]
  br i1 %select.phi575, bb %getvalue.select.then15577, bb %getvalue.select.else16579
getvalue.select.then15577:
  br bb %getvalue.select.exit17582
getvalue.select.else16579:
  20580 = icmp slt i32 %j.phi, i32 0
  br bb %getvalue.select.exit17582
getvalue.select.exit17582:
  select18.phi583 = phi [bb %getvalue.select.else16579, i1 %20580, bb %getvalue.select.then15577, i1 -1]
  br i1 %select18.phi583, bb %getvalue.select.then23585, bb %getvalue.select.else24587
getvalue.select.then23585:
  br bb %getvalue.select.exit25590
getvalue.select.else24587:
  29588 = icmp sge i32 %j.phi, i32 %n
  br bb %getvalue.select.exit25590
getvalue.select.exit25590:
  select26.phi591 = phi [bb %getvalue.select.else24587, i1 %29588, bb %getvalue.select.then23585, i1 -1]
  br i1 %select26.phi591, bb %getvalue.then593, bb %getvalue.if.exit595
getvalue.then593:
  br bb %else.split
getvalue.if.exit595:
  37596 = mul i32 %k.phi, i32 %n
  39597 = add i32 %37596, i32 %j.phi
  240598 = shl i32 %39597, i32 2
  41599 = ptradd ptr @temp, i32 %240598
  41.load600 = load i32 from ptr %41599
  br bb %else.split
}

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry205:
  207 = call i32 getint()
  208 = call i32 getarray(ptr @w)
  call void _sysy_starttime(i32 62)
  br bb %floyd.while.cond65
floyd.while.cond65:
  k.phi219262 = phi [bb %entry205, i32 0, bb %floyd.while.exit75, i32 %94283]
  70263 = icmp slt i32 %k.phi219262, i32 %207
  br i1 %70263, bb %floyd.while.body66, bb %floyd.while.exit67
floyd.while.body66:
  br bb %floyd.while.cond73
floyd.while.exit67:
  br bb %floyd.while.cond95
floyd.while.cond73:
  i72.phi270 = phi [bb %floyd.while.body66, i32 0, bb %floyd.while.body74.split, i32 %92280]
  78271 = icmp slt i32 %i72.phi270, i32 %207
  br i1 %78271, bb %floyd.while.body74, bb %floyd.while.exit75
floyd.while.body74:
  82274 = mul i32 %i72.phi270, i32 %207
  84275 = add i32 %82274, i32 %k.phi219262
  236276 = shl i32 %84275, i32 2
  86277 = ptradd ptr @temp, i32 %236276
  5605 = icmp slt i32 %i72.phi270, i32 0
  br i1 %5605, bb %getvalue.select.then607, bb %getvalue.select.else609
floyd.while.body74.split:
  90278.ret = phi [bb %getvalue.then631, i32 -1, bb %getvalue.if.exit633, i32 %41.load638]
  store i32 %90278.ret to ptr %86277
  92280 = add i32 %i72.phi270, i32 1
  br bb %floyd.while.cond73
floyd.while.exit75:
  94283 = add i32 %k.phi219262, i32 1
  br bb %floyd.while.cond65
floyd.while.cond95:
  select126.phi230286 = phi [bb %floyd.while.exit67, i1 ub, bb %floyd.while.exit105, i1 %select126.phi229299]
  j.phi224287 = phi [bb %floyd.while.exit67, i32 ub, bb %floyd.while.exit105, i32 %j.phi223301]
  k.phi288 = phi [bb %floyd.while.exit67, i32 0, bb %floyd.while.exit105, i32 %200307]
  100289 = icmp slt i32 %k.phi288, i32 %207
  br i1 %100289, bb %floyd.while.body96, bb %floyd.while.exit97
floyd.while.body96:
  br bb %floyd.while.cond103
floyd.while.exit97:
  203294 = mul i32 %207, i32 %207
  br bb %floyd.mem_move.while.cond
floyd.while.cond103:
  select126.phi229299 = phi [bb %floyd.while.body96, i1 %select126.phi230286, bb %floyd.while.exit113, i1 %select126.phi228310]
  i102.phi300 = phi [bb %floyd.while.body96, i32 0, bb %floyd.while.exit113, i32 %198319]
  j.phi223301 = phi [bb %floyd.while.body96, i32 %j.phi224287, bb %floyd.while.exit113, i32 %j.phi311]
  108302 = icmp slt i32 %i102.phi300, i32 %207
  br i1 %108302, bb %floyd.while.body104, bb %floyd.while.exit105
floyd.while.body104:
  br bb %floyd.while.cond111
floyd.while.exit105:
  200307 = add i32 %k.phi288, i32 1
  br bb %floyd.while.cond95
floyd.while.cond111:
  select126.phi228310 = phi [bb %floyd.while.body104, i1 %select126.phi229299, bb %floyd.if.exit134, i1 %select126.phi328]
  j.phi311 = phi [bb %floyd.while.body104, i32 0, bb %floyd.if.exit134, i32 %196335]
  116312 = icmp slt i32 %j.phi311, i32 %207
  br i1 %116312, bb %floyd.while.body112, bb %floyd.while.exit113
floyd.while.body112:
  5643 = icmp slt i32 %i102.phi300, i32 0
  br i1 %5643, bb %getvalue.select.then645, bb %getvalue.select.else647
floyd.while.body112.split:
  121315.ret = phi [bb %getvalue.then669, i32 -1, bb %getvalue.if.exit671, i32 %41.load676]
  122316 = icmp sge i32 %121315.ret, i32 0
  br i1 %122316, bb %floyd.select.then123, bb %floyd.select.else124
floyd.while.exit113:
  198319 = add i32 %i102.phi300, i32 1
  br bb %floyd.while.cond103
floyd.select.then123:
  5681 = icmp slt i32 %k.phi288, i32 0
  br i1 %5681, bb %getvalue.select.then683, bb %getvalue.select.else685
floyd.select.then123.split:
  130322.ret = phi [bb %getvalue.then707, i32 -1, bb %getvalue.if.exit709, i32 %41.load714]
  131323 = icmp sge i32 %130322.ret, i32 0
  br bb %floyd.select.exit125
floyd.select.else124:
  br bb %floyd.select.exit125
floyd.select.exit125:
  select126.phi328 = phi [bb %floyd.select.else124, i1 0, bb %floyd.select.then123.split, i1 %131323]
  br i1 %select126.phi328, bb %floyd.then133, bb %floyd.if.exit134
floyd.then133:
  br i1 %5643, bb %getvalue.select.then721, bb %getvalue.select.else723
floyd.then133.split:
  138331.ret = phi [bb %getvalue.then745, i32 -1, bb %getvalue.if.exit747, i32 %41.load752]
  139332 = icmp slt i32 %138331.ret, i32 0
  br i1 %139332, bb %floyd.then140, bb %floyd.else
floyd.if.exit134:
  196335 = add i32 %j.phi311, i32 1
  br bb %floyd.while.cond111
floyd.then140:
  145338 = mul i32 %i102.phi300, i32 %207
  147339 = add i32 %145338, i32 %j.phi311
  237340 = shl i32 %147339, i32 2
  149341 = ptradd ptr @temp, i32 %237340
  5757 = icmp slt i32 %k.phi288, i32 0
  br i1 %5757, bb %getvalue.select.then759, bb %getvalue.select.else761
floyd.then140.split:
  157342.ret = phi [bb %getvalue.then783, i32 -1, bb %getvalue.if.exit785, i32 %41.load790]
  158343 = add i32 %121315.ret, i32 %157342.ret
  store i32 %158343 to ptr %149341
  br bb %floyd.if.exit134
floyd.else:
  161347 = mul i32 %i102.phi300, i32 %207
  163348 = add i32 %161347, i32 %j.phi311
  238349 = shl i32 %163348, i32 2
  165350 = ptradd ptr @temp, i32 %238349
  165.load351 = load i32 from ptr %165350
  5795 = icmp slt i32 %k.phi288, i32 0
  br i1 %5795, bb %getvalue.select.then797, bb %getvalue.select.else799
floyd.else.split:
  174352.ret = phi [bb %getvalue.then821, i32 -1, bb %getvalue.if.exit823, i32 %41.load828]
  175353 = add i32 %121315.ret, i32 %174352.ret
  176354 = icmp sgt i32 %165.load351, i32 %175353
  br i1 %176354, bb %floyd.then177, bb %floyd.if.exit134
floyd.then177:
  store i32 %175353 to ptr %165350
  br bb %floyd.if.exit134
floyd.mem_move.while.cond:
  i.phi245362 = phi [bb %floyd.while.exit97, i32 0, bb %floyd.mem_move.while.body, i32 %61254371]
  51246363 = icmp slt i32 %i.phi245362, i32 %203294
  br i1 %51246363, bb %floyd.mem_move.while.body, bb %floyd.mem_move.while.exit
floyd.mem_move.while.body:
  234249366 = shl i32 %i.phi245362, i32 2
  55250367 = ptradd ptr @dst, i32 %234249366
  58251368 = ptradd ptr @temp, i32 %234249366
  58.load252369 = load i32 from ptr %58251368
  store i32 %58.load252369 to ptr %55250367
  61254371 = add i32 %i.phi245362, i32 1
  br bb %floyd.mem_move.while.cond
floyd.mem_move.while.exit:
  call void _sysy_stoptime(i32 64)
  call void putarray(i32 %203294, ptr @dst)
  ret i32 0
getvalue.select.then607:
  br bb %getvalue.select.exit612
getvalue.select.else609:
  12610 = icmp sge i32 %i72.phi270, i32 %207
  br bb %getvalue.select.exit612
getvalue.select.exit612:
  select.phi613 = phi [bb %getvalue.select.else609, i1 %12610, bb %getvalue.select.then607, i1 -1]
  br i1 %select.phi613, bb %getvalue.select.then15615, bb %getvalue.select.else16617
getvalue.select.then15615:
  br bb %getvalue.select.exit17620
getvalue.select.else16617:
  20618 = icmp slt i32 %k.phi219262, i32 0
  br bb %getvalue.select.exit17620
getvalue.select.exit17620:
  select18.phi621 = phi [bb %getvalue.select.else16617, i1 %20618, bb %getvalue.select.then15615, i1 -1]
  br i1 %select18.phi621, bb %getvalue.select.then23623, bb %getvalue.select.else24625
getvalue.select.then23623:
  br bb %getvalue.select.exit25628
getvalue.select.else24625:
  29626 = icmp sge i32 %k.phi219262, i32 %207
  br bb %getvalue.select.exit25628
getvalue.select.exit25628:
  select26.phi629 = phi [bb %getvalue.select.else24625, i1 %29626, bb %getvalue.select.then23623, i1 -1]
  br i1 %select26.phi629, bb %getvalue.then631, bb %getvalue.if.exit633
getvalue.then631:
  br bb %floyd.while.body74.split
getvalue.if.exit633:
  41637 = ptradd ptr @w, i32 %236276
  41.load638 = load i32 from ptr %41637
  br bb %floyd.while.body74.split
getvalue.select.then645:
  br bb %getvalue.select.exit650
getvalue.select.else647:
  12648 = icmp sge i32 %i102.phi300, i32 %207
  br bb %getvalue.select.exit650
getvalue.select.exit650:
  select.phi651 = phi [bb %getvalue.select.else647, i1 %12648, bb %getvalue.select.then645, i1 -1]
  br i1 %select.phi651, bb %getvalue.select.then15653, bb %getvalue.select.else16655
getvalue.select.then15653:
  br bb %getvalue.select.exit17658
getvalue.select.else16655:
  20656 = icmp slt i32 %k.phi288, i32 0
  br bb %getvalue.select.exit17658
getvalue.select.exit17658:
  select18.phi659 = phi [bb %getvalue.select.else16655, i1 %20656, bb %getvalue.select.then15653, i1 -1]
  br i1 %select18.phi659, bb %getvalue.select.then23661, bb %getvalue.select.else24663
getvalue.select.then23661:
  br bb %getvalue.select.exit25666
getvalue.select.else24663:
  29664 = icmp sge i32 %k.phi288, i32 %207
  br bb %getvalue.select.exit25666
getvalue.select.exit25666:
  select26.phi667 = phi [bb %getvalue.select.else24663, i1 %29664, bb %getvalue.select.then23661, i1 -1]
  br i1 %select26.phi667, bb %getvalue.then669, bb %getvalue.if.exit671
getvalue.then669:
  br bb %floyd.while.body112.split
getvalue.if.exit671:
  37672 = mul i32 %i102.phi300, i32 %207
  39673 = add i32 %37672, i32 %k.phi288
  240674 = shl i32 %39673, i32 2
  41675 = ptradd ptr @temp, i32 %240674
  41.load676 = load i32 from ptr %41675
  br bb %floyd.while.body112.split
getvalue.select.then683:
  br bb %getvalue.select.exit688
getvalue.select.else685:
  12686 = icmp sge i32 %k.phi288, i32 %207
  br bb %getvalue.select.exit688
getvalue.select.exit688:
  select.phi689 = phi [bb %getvalue.select.else685, i1 %12686, bb %getvalue.select.then683, i1 -1]
  br i1 %select.phi689, bb %getvalue.select.then15691, bb %getvalue.select.else16693
getvalue.select.then15691:
  br bb %getvalue.select.exit17696
getvalue.select.else16693:
  20694 = icmp slt i32 %j.phi311, i32 0
  br bb %getvalue.select.exit17696
getvalue.select.exit17696:
  select18.phi697 = phi [bb %getvalue.select.else16693, i1 %20694, bb %getvalue.select.then15691, i1 -1]
  br i1 %select18.phi697, bb %getvalue.select.then23699, bb %getvalue.select.else24701
getvalue.select.then23699:
  br bb %getvalue.select.exit25704
getvalue.select.else24701:
  29702 = icmp sge i32 %j.phi311, i32 %207
  br bb %getvalue.select.exit25704
getvalue.select.exit25704:
  select26.phi705 = phi [bb %getvalue.select.else24701, i1 %29702, bb %getvalue.select.then23699, i1 -1]
  br i1 %select26.phi705, bb %getvalue.then707, bb %getvalue.if.exit709
getvalue.then707:
  br bb %floyd.select.then123.split
getvalue.if.exit709:
  37710 = mul i32 %k.phi288, i32 %207
  39711 = add i32 %37710, i32 %j.phi311
  240712 = shl i32 %39711, i32 2
  41713 = ptradd ptr @temp, i32 %240712
  41.load714 = load i32 from ptr %41713
  br bb %floyd.select.then123.split
getvalue.select.then721:
  br bb %getvalue.select.exit726
getvalue.select.else723:
  12724 = icmp sge i32 %i102.phi300, i32 %207
  br bb %getvalue.select.exit726
getvalue.select.exit726:
  select.phi727 = phi [bb %getvalue.select.else723, i1 %12724, bb %getvalue.select.then721, i1 -1]
  br i1 %select.phi727, bb %getvalue.select.then15729, bb %getvalue.select.else16731
getvalue.select.then15729:
  br bb %getvalue.select.exit17734
getvalue.select.else16731:
  20732 = icmp slt i32 %j.phi311, i32 0
  br bb %getvalue.select.exit17734
getvalue.select.exit17734:
  select18.phi735 = phi [bb %getvalue.select.else16731, i1 %20732, bb %getvalue.select.then15729, i1 -1]
  br i1 %select18.phi735, bb %getvalue.select.then23737, bb %getvalue.select.else24739
getvalue.select.then23737:
  br bb %getvalue.select.exit25742
getvalue.select.else24739:
  29740 = icmp sge i32 %j.phi311, i32 %207
  br bb %getvalue.select.exit25742
getvalue.select.exit25742:
  select26.phi743 = phi [bb %getvalue.select.else24739, i1 %29740, bb %getvalue.select.then23737, i1 -1]
  br i1 %select26.phi743, bb %getvalue.then745, bb %getvalue.if.exit747
getvalue.then745:
  br bb %floyd.then133.split
getvalue.if.exit747:
  37748 = mul i32 %i102.phi300, i32 %207
  39749 = add i32 %37748, i32 %j.phi311
  240750 = shl i32 %39749, i32 2
  41751 = ptradd ptr @temp, i32 %240750
  41.load752 = load i32 from ptr %41751
  br bb %floyd.then133.split
getvalue.select.then759:
  br bb %getvalue.select.exit764
getvalue.select.else761:
  12762 = icmp sge i32 %k.phi288, i32 %207
  br bb %getvalue.select.exit764
getvalue.select.exit764:
  select.phi765 = phi [bb %getvalue.select.else761, i1 %12762, bb %getvalue.select.then759, i1 -1]
  br i1 %select.phi765, bb %getvalue.select.then15767, bb %getvalue.select.else16769
getvalue.select.then15767:
  br bb %getvalue.select.exit17772
getvalue.select.else16769:
  20770 = icmp slt i32 %j.phi311, i32 0
  br bb %getvalue.select.exit17772
getvalue.select.exit17772:
  select18.phi773 = phi [bb %getvalue.select.else16769, i1 %20770, bb %getvalue.select.then15767, i1 -1]
  br i1 %select18.phi773, bb %getvalue.select.then23775, bb %getvalue.select.else24777
getvalue.select.then23775:
  br bb %getvalue.select.exit25780
getvalue.select.else24777:
  29778 = icmp sge i32 %j.phi311, i32 %207
  br bb %getvalue.select.exit25780
getvalue.select.exit25780:
  select26.phi781 = phi [bb %getvalue.select.else24777, i1 %29778, bb %getvalue.select.then23775, i1 -1]
  br i1 %select26.phi781, bb %getvalue.then783, bb %getvalue.if.exit785
getvalue.then783:
  br bb %floyd.then140.split
getvalue.if.exit785:
  37786 = mul i32 %k.phi288, i32 %207
  39787 = add i32 %37786, i32 %j.phi311
  240788 = shl i32 %39787, i32 2
  41789 = ptradd ptr @temp, i32 %240788
  41.load790 = load i32 from ptr %41789
  br bb %floyd.then140.split
getvalue.select.then797:
  br bb %getvalue.select.exit802
getvalue.select.else799:
  12800 = icmp sge i32 %k.phi288, i32 %207
  br bb %getvalue.select.exit802
getvalue.select.exit802:
  select.phi803 = phi [bb %getvalue.select.else799, i1 %12800, bb %getvalue.select.then797, i1 -1]
  br i1 %select.phi803, bb %getvalue.select.then15805, bb %getvalue.select.else16807
getvalue.select.then15805:
  br bb %getvalue.select.exit17810
getvalue.select.else16807:
  20808 = icmp slt i32 %j.phi311, i32 0
  br bb %getvalue.select.exit17810
getvalue.select.exit17810:
  select18.phi811 = phi [bb %getvalue.select.else16807, i1 %20808, bb %getvalue.select.then15805, i1 -1]
  br i1 %select18.phi811, bb %getvalue.select.then23813, bb %getvalue.select.else24815
getvalue.select.then23813:
  br bb %getvalue.select.exit25818
getvalue.select.else24815:
  29816 = icmp sge i32 %j.phi311, i32 %207
  br bb %getvalue.select.exit25818
getvalue.select.exit25818:
  select26.phi819 = phi [bb %getvalue.select.else24815, i1 %29816, bb %getvalue.select.then23813, i1 -1]
  br i1 %select26.phi819, bb %getvalue.then821, bb %getvalue.if.exit823
getvalue.then821:
  br bb %floyd.else.split
getvalue.if.exit823:
  37824 = mul i32 %k.phi288, i32 %207
  39825 = add i32 %37824, i32 %j.phi311
  240826 = shl i32 %39825, i32 2
  41827 = ptradd ptr @temp, i32 %240826
  41.load828 = load i32 from ptr %41827
  br bb %floyd.else.split
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

pure i32 getvalue(ptr a, i32 n, i32 i, i32 j) {
entry:
  5 = icmp slt i32 %i, i32 0
  br i1 %5, bb %select.then, bb %select.else
select.then:
  br bb %select.exit
select.else:
  12 = icmp sge i32 %i, i32 %n
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 %12, bb %select.then, i1 -1]
  br i1 %select.phi, bb %select.then15, bb %select.else16
select.then15:
  br bb %select.exit17
select.else16:
  20 = icmp slt i32 %j, i32 0
  br bb %select.exit17
select.exit17:
  select18.phi = phi [bb %select.else16, i1 %20, bb %select.then15, i1 -1]
  br i1 %select18.phi, bb %select.then23, bb %select.else24
select.then23:
  br bb %select.exit25
select.else24:
  29 = icmp sge i32 %j, i32 %n
  br bb %select.exit25
select.exit25:
  select26.phi = phi [bb %select.else24, i1 %29, bb %select.then23, i1 -1]
  br i1 %select26.phi, bb %then, bb %if.exit
then:
  ret i32 -1
if.exit:
  37 = mul i32 %i, i32 %n
  39 = add i32 %37, i32 %j
  240 = shl i32 %39, i32 2
  41 = ptradd ptr %a, i32 %240
  41.load = load i32 from ptr %41
  ret i32 %41.load
}


