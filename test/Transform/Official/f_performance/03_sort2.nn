global ptr ans init with i32 0
internal global ptr a init with 30000010 x i32 zeros
external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry351:  pred()
  353 = call i32 getarray(ptr @a)
  call void _sysy_starttime(i32 90)
  call void radixSort(i32 8, ptr @a, i32 0, i32 %353)
  363474 = icmp slt i32 0, i32 %353
  br i1 %363474, bb %while.body359_preheader, bb %while.exit360
while.body359_preheader:  pred(entry351)
  br bb %while.body359
while.body359:  pred(while.body359, while.body359_preheader)
  i357.phi475 = phi [bb %while.body359, i32 %379, bb %while.body359_preheader, i32 0]
  ans.load366 = load i32 from ptr @ans
  408 = shl i32 %i357.phi475, i32 2
  370 = ptradd ptr @a, i32 %408
  370.load = load i32 from ptr %370
  409 = add i32 %i357.phi475, i32 2
  374 = srem i32 %370.load, i32 %409
  375 = mul i32 %i357.phi475, i32 %374
  376 = add i32 %ans.load366, i32 %375
  store i32 %376 to ptr @ans
  379 = add i32 %i357.phi475, i32 1
  363 = icmp slt i32 %379, i32 %353
  br i1 %363, bb %while.body359, bb %while.exit360
while.exit360:  pred(while.body359, entry351)
  ans.load380 = load i32 from ptr @ans
  381 = icmp slt i32 %ans.load380, i32 0
  br i1 %381, bb %then382, bb %if.exit383
then382:  pred(while.exit360)
  ans.load385 = load i32 from ptr @ans
  386 = sub i32 0, i32 %ans.load385
  store i32 %386 to ptr @ans
  br bb %if.exit383
if.exit383:  pred(while.exit360, then382)
  call void _sysy_stoptime(i32 102)
  ans.load388 = load i32 from ptr @ans
  call void putint(i32 %ans.load388)
  call void putch(i32 10)
  ret i32 0
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

internal void radixSort(i32 bitround, ptr a, i32 l, i32 r) {
entry50:  pred()
  %cnt = stack 64
  %tail = stack 64
  %head = stack 64
  arr.index56 = ptradd ptr %head, i32 4
  arr.index57 = ptradd ptr %head, i32 8
  arr.index58 = ptradd ptr %head, i32 12
  arr.index59 = ptradd ptr %head, i32 16
  arr.index60 = ptradd ptr %head, i32 20
  arr.index61 = ptradd ptr %head, i32 24
  arr.index62 = ptradd ptr %head, i32 28
  arr.index63 = ptradd ptr %head, i32 32
  arr.index64 = ptradd ptr %head, i32 36
  arr.index65 = ptradd ptr %head, i32 40
  arr.index66 = ptradd ptr %head, i32 44
  arr.index67 = ptradd ptr %head, i32 48
  arr.index68 = ptradd ptr %head, i32 52
  arr.index69 = ptradd ptr %head, i32 56
  arr.index70 = ptradd ptr %head, i32 60
  arr.index73 = ptradd ptr %tail, i32 4
  arr.index74 = ptradd ptr %tail, i32 8
  arr.index75 = ptradd ptr %tail, i32 12
  arr.index76 = ptradd ptr %tail, i32 16
  arr.index77 = ptradd ptr %tail, i32 20
  arr.index78 = ptradd ptr %tail, i32 24
  arr.index79 = ptradd ptr %tail, i32 28
  arr.index80 = ptradd ptr %tail, i32 32
  arr.index81 = ptradd ptr %tail, i32 36
  arr.index82 = ptradd ptr %tail, i32 40
  arr.index83 = ptradd ptr %tail, i32 44
  arr.index84 = ptradd ptr %tail, i32 48
  arr.index85 = ptradd ptr %tail, i32 52
  arr.index86 = ptradd ptr %tail, i32 56
  arr.index87 = ptradd ptr %tail, i32 60
  store i32 0 to ptr %cnt
  arr.index90 = ptradd ptr %cnt, i32 4
  store i32 0 to ptr %arr.index90
  arr.index91 = ptradd ptr %cnt, i32 8
  store i32 0 to ptr %arr.index91
  arr.index92 = ptradd ptr %cnt, i32 12
  store i32 0 to ptr %arr.index92
  arr.index93 = ptradd ptr %cnt, i32 16
  store i32 0 to ptr %arr.index93
  arr.index94 = ptradd ptr %cnt, i32 20
  store i32 0 to ptr %arr.index94
  arr.index95 = ptradd ptr %cnt, i32 24
  store i32 0 to ptr %arr.index95
  arr.index96 = ptradd ptr %cnt, i32 28
  store i32 0 to ptr %arr.index96
  arr.index97 = ptradd ptr %cnt, i32 32
  store i32 0 to ptr %arr.index97
  arr.index98 = ptradd ptr %cnt, i32 36
  store i32 0 to ptr %arr.index98
  arr.index99 = ptradd ptr %cnt, i32 40
  store i32 0 to ptr %arr.index99
  arr.index100 = ptradd ptr %cnt, i32 44
  store i32 0 to ptr %arr.index100
  arr.index101 = ptradd ptr %cnt, i32 48
  store i32 0 to ptr %arr.index101
  arr.index102 = ptradd ptr %cnt, i32 52
  store i32 0 to ptr %arr.index102
  arr.index103 = ptradd ptr %cnt, i32 56
  store i32 0 to ptr %arr.index103
  arr.index104 = ptradd ptr %cnt, i32 60
  store i32 0 to ptr %arr.index104
  107 = icmp eq i32 %bitround, i32 -1
  br i1 %107, bb %select.then, bb %select.else
select.then:  pred(entry50)
  br bb %select.exit
select.else:  pred(entry50)
  113 = add i32 %l, i32 1
  115 = icmp sge i32 %113, i32 %r
  br bb %select.exit
select.exit:  pred(select.then, select.else)
  select.phi = phi [bb %select.else, i1 %115, bb %select.then, i1 -1]
  br i1 %select.phi, bb %then118, bb %if.exit119
then118:  pred(select.exit)
  ret 
if.exit119:  pred(select.exit)
  127504 = icmp slt i32 %l, i32 %r
  br i1 %127504, bb %while.body123_preheader, bb %while.exit124
while.body123_preheader:  pred(if.exit119)
  38448476 = icmp slt i32 0, i32 %bitround
  br bb %while.body123
while.body123:  pred(getNumPos.while.exit35, while.body123_preheader)
  i120.phi397505 = phi [bb %getNumPos.while.exit35, i32 %150, bb %while.body123_preheader, i32 %l]
  410 = shl i32 %i120.phi397505, i32 2
  131 = ptradd ptr %a, i32 %410
  131.load = load i32 from ptr %131
  br i1 %38448476, bb %getNumPos.while.body34_preheader, bb %getNumPos.while.exit35
while.exit124:  pred(getNumPos.while.exit35, if.exit119)
  store i32 %l to ptr %head
  160.load = load i32 from ptr %cnt
  162 = add i32 %l, i32 %160.load
  store i32 %162 to ptr %tail
  store i32 %162 to ptr %arr.index56
  190.load = load i32 from ptr %arr.index90
  192 = add i32 %162, i32 %190.load
  store i32 %192 to ptr %arr.index73
  store i32 %192 to ptr %arr.index57
  190.load945 = load i32 from ptr %arr.index91
  192946 = add i32 %192, i32 %190.load945
  store i32 %192946 to ptr %arr.index74
  store i32 %192946 to ptr %arr.index58
  190.load962 = load i32 from ptr %arr.index92
  192963 = add i32 %192946, i32 %190.load962
  store i32 %192963 to ptr %arr.index75
  store i32 %192963 to ptr %arr.index59
  190.load979 = load i32 from ptr %arr.index93
  192980 = add i32 %192963, i32 %190.load979
  store i32 %192980 to ptr %arr.index76
  store i32 %192980 to ptr %arr.index60
  190.load996 = load i32 from ptr %arr.index94
  192997 = add i32 %192980, i32 %190.load996
  store i32 %192997 to ptr %arr.index77
  store i32 %192997 to ptr %arr.index61
  190.load1013 = load i32 from ptr %arr.index95
  1921014 = add i32 %192997, i32 %190.load1013
  store i32 %1921014 to ptr %arr.index78
  store i32 %1921014 to ptr %arr.index62
  190.load1030 = load i32 from ptr %arr.index96
  1921031 = add i32 %1921014, i32 %190.load1030
  store i32 %1921031 to ptr %arr.index79
  store i32 %1921031 to ptr %arr.index63
  190.load1047 = load i32 from ptr %arr.index97
  1921048 = add i32 %1921031, i32 %190.load1047
  store i32 %1921048 to ptr %arr.index80
  store i32 %1921048 to ptr %arr.index64
  190.load1064 = load i32 from ptr %arr.index98
  1921065 = add i32 %1921048, i32 %190.load1064
  store i32 %1921065 to ptr %arr.index81
  store i32 %1921065 to ptr %arr.index65
  190.load1081 = load i32 from ptr %arr.index99
  1921082 = add i32 %1921065, i32 %190.load1081
  store i32 %1921082 to ptr %arr.index82
  store i32 %1921082 to ptr %arr.index66
  190.load1098 = load i32 from ptr %arr.index100
  1921099 = add i32 %1921082, i32 %190.load1098
  store i32 %1921099 to ptr %arr.index83
  store i32 %1921099 to ptr %arr.index67
  190.load1115 = load i32 from ptr %arr.index101
  1921116 = add i32 %1921099, i32 %190.load1115
  store i32 %1921116 to ptr %arr.index84
  store i32 %1921116 to ptr %arr.index68
  190.load1132 = load i32 from ptr %arr.index102
  1921133 = add i32 %1921116, i32 %190.load1132
  store i32 %1921133 to ptr %arr.index85
  store i32 %1921133 to ptr %arr.index69
  190.load1149 = load i32 from ptr %arr.index103
  1921150 = add i32 %1921133, i32 %190.load1149
  store i32 %1921150 to ptr %arr.index86
  store i32 %1921150 to ptr %arr.index70
  190.load1166 = load i32 from ptr %arr.index104
  1921167 = add i32 %1921150, i32 %190.load1166
  store i32 %1921167 to ptr %arr.index87
  br bb %while.body198
while.body198:  pred(while.exit206, while.exit124)
  i120.phi501 = phi [bb %while.exit206, i32 %288, bb %while.exit124, i32 0]
  t.phi400500 = phi [bb %while.exit206, i32 %t.phi400491, bb %while.exit124, i32 0]
  v.phi403499 = phi [bb %while.exit206, i32 %v.phi403490, bb %while.exit124, i32 0]
  419484 = shl i32 %i120.phi501, i32 2
  209485 = ptradd ptr %head, i32 %419484
  209.load486 = load i32 from ptr %209485
  213487 = ptradd ptr %tail, i32 %419484
  213.load488 = load i32 from ptr %213487
  215489 = icmp slt i32 %209.load486, i32 %213.load488
  br i1 %215489, bb %while.body205_preheader, bb %while.exit206
while.exit199:  pred(while.exit206)
  300.load = load i32 from ptr %cnt
  302 = add i32 %l, i32 %300.load
  338 = sub i32 %bitround, i32 1
  call void radixSort(i32 %338, ptr %a, i32 %l, i32 %302)
  334.load543 = load i32 from ptr %arr.index90
  336544 = add i32 %302, i32 %334.load543
  call void radixSort(i32 %338, ptr %a, i32 %302, i32 %336544)
  334.load570 = load i32 from ptr %arr.index91
  336571 = add i32 %336544, i32 %334.load570
  call void radixSort(i32 %338, ptr %a, i32 %336544, i32 %336571)
  334.load597 = load i32 from ptr %arr.index92
  336598 = add i32 %336571, i32 %334.load597
  call void radixSort(i32 %338, ptr %a, i32 %336571, i32 %336598)
  334.load624 = load i32 from ptr %arr.index93
  336625 = add i32 %336598, i32 %334.load624
  call void radixSort(i32 %338, ptr %a, i32 %336598, i32 %336625)
  334.load651 = load i32 from ptr %arr.index94
  336652 = add i32 %336625, i32 %334.load651
  call void radixSort(i32 %338, ptr %a, i32 %336625, i32 %336652)
  334.load678 = load i32 from ptr %arr.index95
  336679 = add i32 %336652, i32 %334.load678
  call void radixSort(i32 %338, ptr %a, i32 %336652, i32 %336679)
  334.load705 = load i32 from ptr %arr.index96
  336706 = add i32 %336679, i32 %334.load705
  call void radixSort(i32 %338, ptr %a, i32 %336679, i32 %336706)
  334.load732 = load i32 from ptr %arr.index97
  336733 = add i32 %336706, i32 %334.load732
  call void radixSort(i32 %338, ptr %a, i32 %336706, i32 %336733)
  334.load759 = load i32 from ptr %arr.index98
  336760 = add i32 %336733, i32 %334.load759
  call void radixSort(i32 %338, ptr %a, i32 %336733, i32 %336760)
  334.load786 = load i32 from ptr %arr.index99
  336787 = add i32 %336760, i32 %334.load786
  call void radixSort(i32 %338, ptr %a, i32 %336760, i32 %336787)
  334.load813 = load i32 from ptr %arr.index100
  336814 = add i32 %336787, i32 %334.load813
  call void radixSort(i32 %338, ptr %a, i32 %336787, i32 %336814)
  334.load840 = load i32 from ptr %arr.index101
  336841 = add i32 %336814, i32 %334.load840
  call void radixSort(i32 %338, ptr %a, i32 %336814, i32 %336841)
  334.load867 = load i32 from ptr %arr.index102
  336868 = add i32 %336841, i32 %334.load867
  call void radixSort(i32 %338, ptr %a, i32 %336841, i32 %336868)
  334.load894 = load i32 from ptr %arr.index103
  336895 = add i32 %336868, i32 %334.load894
  call void radixSort(i32 %338, ptr %a, i32 %336868, i32 %336895)
  334.load921 = load i32 from ptr %arr.index104
  336922 = add i32 %336895, i32 %334.load921
  call void radixSort(i32 %338, ptr %a, i32 %336895, i32 %336922)
  ret 
while.body205_preheader:  pred(while.body198)
  38464480 = icmp slt i32 0, i32 %bitround
  br bb %while.body205
while.body205:  pred(while.exit227, while.body205_preheader)
  209.load486495 = phi [bb %while.exit227, i32 %209.load, bb %while.body205_preheader, i32 %209.load486]
  t.phi399493 = phi [bb %while.exit227, i32 %t.phi, bb %while.body205_preheader, i32 %t.phi400500]
  422 = shl i32 %209.load486495, i32 2
  223 = ptradd ptr %a, i32 %422
  223.load = load i32 from ptr %223
  br bb %while.cond225
while.exit206:  pred(while.exit227, while.body198)
  t.phi400491 = phi [bb %while.exit227, i32 %t.phi, bb %while.body198, i32 %t.phi400500]
  v.phi403490 = phi [bb %while.exit227, i32 %v.phi, bb %while.body198, i32 %v.phi403499]
  288 = add i32 %i120.phi501, i32 1
  202 = icmp slt i32 %288, i32 16
  br i1 %202, bb %while.body198, bb %while.exit199
while.cond225:  pred(while.body205, while.body226)
  v.phi = phi [bb %while.body205, i32 %223.load, bb %while.body226, i32 %244.load]
  t.phi = phi [bb %while.body205, i32 %t.phi399493, bb %while.body226, i32 %v.phi]
  br i1 %38464480, bb %getNumPos.while.body34466_preheader, bb %getNumPos.while.exit35470
while.body226:  pred(getNumPos.while.exit35470)
  423 = shl i32 %49471, i32 2
  241 = ptradd ptr %head, i32 %423
  241.load = load i32 from ptr %241
  424 = shl i32 %241.load, i32 2
  244 = ptradd ptr %a, i32 %424
  244.load = load i32 from ptr %244
  store i32 %v.phi to ptr %244
  268 = add i32 %241.load, i32 1
  store i32 %268 to ptr %241
  br bb %while.cond225
while.exit227:  pred(getNumPos.while.exit35470)
  271.load = load i32 from ptr %209485
  430 = shl i32 %271.load, i32 2
  274 = ptradd ptr %a, i32 %430
  store i32 %v.phi to ptr %274
  285 = add i32 %271.load, i32 1
  store i32 %285 to ptr %209485
  209.load = load i32 from ptr %209485
  213.load = load i32 from ptr %213487
  215 = icmp slt i32 %209.load, i32 %213.load
  br i1 %215, bb %while.body205, bb %while.exit206
getNumPos.while.body34_preheader:  pred(while.body123)
  br bb %getNumPos.while.body34
getNumPos.while.body34:  pred(getNumPos.while.body34, getNumPos.while.body34_preheader)
  num.stack.phi447479 = phi [bb %getNumPos.while.body34, i32 %43451, bb %getNumPos.while.body34_preheader, i32 %131.load]
  i32.phi446478 = phi [bb %getNumPos.while.body34, i32 %46452, bb %getNumPos.while.body34_preheader, i32 0]
  43451 = sdiv i32 %num.stack.phi447479, i32 16
  46452 = add i32 %i32.phi446478, i32 1
  38448 = icmp slt i32 %46452, i32 %bitround
  br i1 %38448, bb %getNumPos.while.body34, bb %getNumPos.while.exit35
getNumPos.while.exit35:  pred(getNumPos.while.body34, while.body123)
  131.load477 = phi [bb %getNumPos.while.body34, i32 %43451, bb %while.body123, i32 %131.load]
  49455 = srem i32 %131.load477, i32 16
  411 = shl i32 %49455, i32 2
  136 = ptradd ptr %cnt, i32 %411
  145.load = load i32 from ptr %136
  147 = add i32 %145.load, i32 1
  store i32 %147 to ptr %136
  150 = add i32 %i120.phi397505, i32 1
  127 = icmp slt i32 %150, i32 %r
  br i1 %127, bb %while.body123, bb %while.exit124
getNumPos.while.body34466_preheader:  pred(while.cond225)
  br bb %getNumPos.while.body34466
getNumPos.while.body34466:  pred(getNumPos.while.body34466, getNumPos.while.body34466_preheader)
  num.stack.phi463483 = phi [bb %getNumPos.while.body34466, i32 %43467, bb %getNumPos.while.body34466_preheader, i32 %v.phi]
  i32.phi462482 = phi [bb %getNumPos.while.body34466, i32 %46468, bb %getNumPos.while.body34466_preheader, i32 0]
  43467 = sdiv i32 %num.stack.phi463483, i32 16
  46468 = add i32 %i32.phi462482, i32 1
  38464 = icmp slt i32 %46468, i32 %bitround
  br i1 %38464, bb %getNumPos.while.body34466, bb %getNumPos.while.exit35470
getNumPos.while.exit35470:  pred(getNumPos.while.body34466, while.cond225)
  v.phi481 = phi [bb %getNumPos.while.body34466, i32 %43467, bb %while.cond225, i32 %v.phi]
  49471 = srem i32 %v.phi481, i32 16
  232 = icmp ne i32 %49471, i32 %i120.phi501
  br i1 %232, bb %while.body226, bb %while.exit227
}

external void putfarray(i32 , ptr )


