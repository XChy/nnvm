global ptr temp init with float 1.000000
void mult_combin(ptr v, ptr out, i32 n, ptr tmp) {
entry119:
  46250 = si2f i32 0 to float
  br bb %mult1.while.cond47
mult1.while.cond47:
  sum45.phi224253 = phi [bb %entry119, float %46250, bb %mult1.while.exit56, float %sum45.phi263]
  j.phi222254 = phi [bb %entry119, i32 0, bb %mult1.while.exit56, i32 %j.phi264]
  i43.phi255 = phi [bb %entry119, i32 0, bb %mult1.while.exit56, i32 %79281]
  52256 = icmp slt i32 %i43.phi255, i32 %n
  br i1 %52256, bb %mult1.while.body48, bb %mult1.while.exit49
mult1.while.body48:
  br bb %mult1.while.cond54
mult1.while.exit49:
  br bb %mult2.while.cond86
mult1.while.cond54:
  sum45.phi263 = phi [bb %mult1.while.body48, float %sum45.phi224253, bb %mult1.while.body55, float %71274]
  j.phi264 = phi [bb %mult1.while.body48, i32 %j.phi222254, bb %mult1.while.body55, i32 %73275]
  59265 = icmp slt i32 %j.phi264, i32 %n
  br i1 %59265, bb %mult1.while.body55, bb %mult1.while.exit56
mult1.while.body55:
  63268 = mul i32 %j.phi264, i32 4
  64269 = ptradd ptr %v, i32 %63268
  64.load270 = load float from ptr %64269
  5560 = add i32 %i43.phi255, i32 %j.phi264
  9561 = add i32 %5560, i32 1
  10562 = mul i32 %5560, i32 %9561
  11563 = sdiv i32 %10562, i32 2
  13564 = add i32 %11563, i32 %i43.phi255
  14565 = add i32 %13564, i32 1
  69272 = si2f i32 %14565 to float
  70273 = fdiv float %64.load270, float %69272
  71274 = fadd float %sum45.phi263, float %70273
  73275 = add i32 %j.phi264, i32 1
  br bb %mult1.while.cond54
mult1.while.exit56:
  75278 = mul i32 %i43.phi255, i32 4
  76279 = ptradd ptr %tmp, i32 %75278
  store float %sum45.phi263 to ptr %76279
  79281 = add i32 %i43.phi255, i32 1
  br bb %mult1.while.cond47
mult2.while.cond86:
  sum84.phi233438 = phi [bb %mult1.while.exit49, float %46250, bb %mult2.while.exit95, float %sum84.phi448]
  j83.phi231439 = phi [bb %mult1.while.exit49, i32 0, bb %mult2.while.exit95, i32 %j83.phi449]
  i82.phi440 = phi [bb %mult1.while.exit49, i32 0, bb %mult2.while.exit95, i32 %118466]
  91441 = icmp slt i32 %i82.phi440, i32 %n
  br i1 %91441, bb %mult2.while.body87, bb %mult2.while.exit88
mult2.while.body87:
  br bb %mult2.while.cond93
mult2.while.exit88:
  ret 
mult2.while.cond93:
  sum84.phi448 = phi [bb %mult2.while.body87, float %sum84.phi233438, bb %mult2.while.body94, float %110459]
  j83.phi449 = phi [bb %mult2.while.body87, i32 %j83.phi231439, bb %mult2.while.body94, i32 %112460]
  98450 = icmp slt i32 %j83.phi449, i32 %n
  br i1 %98450, bb %mult2.while.body94, bb %mult2.while.exit95
mult2.while.body94:
  102453 = mul i32 %j83.phi449, i32 4
  103454 = ptradd ptr %tmp, i32 %102453
  103.load455 = load float from ptr %103454
  5590 = add i32 %j83.phi449, i32 %i82.phi440
  9591 = add i32 %5590, i32 1
  10592 = mul i32 %5590, i32 %9591
  11593 = sdiv i32 %10592, i32 2
  13594 = add i32 %11593, i32 %j83.phi449
  14595 = add i32 %13594, i32 1
  108457 = si2f i32 %14595 to float
  109458 = fdiv float %103.load455, float %108457
  110459 = fadd float %sum84.phi448, float %109458
  112460 = add i32 %j83.phi449, i32 1
  br bb %mult2.while.cond93
mult2.while.exit95:
  114463 = mul i32 %i82.phi440, i32 4
  115464 = ptradd ptr %out, i32 %114463
  store float %sum84.phi448 to ptr %115464
  118466 = add i32 %i82.phi440, i32 1
  br bb %mult2.while.cond86
}

void mult1(ptr v, ptr out, i32 n) {
entry41:
  46 = si2f i32 0 to float
  br bb %while.cond47
while.cond47:
  sum45.phi224 = phi [bb %entry41, float %46, bb %while.exit56, float %sum45.phi]
  j.phi222 = phi [bb %entry41, i32 0, bb %while.exit56, i32 %j.phi]
  i43.phi = phi [bb %entry41, i32 0, bb %while.exit56, i32 %79]
  52 = icmp slt i32 %i43.phi, i32 %n
  br i1 %52, bb %while.body48, bb %while.exit49
while.body48:
  br bb %while.cond54
while.exit49:
  ret 
while.cond54:
  sum45.phi = phi [bb %while.body48, float %sum45.phi224, bb %while.body55, float %71]
  j.phi = phi [bb %while.body48, i32 %j.phi222, bb %while.body55, i32 %73]
  59 = icmp slt i32 %j.phi, i32 %n
  br i1 %59, bb %while.body55, bb %while.exit56
while.body55:
  63 = mul i32 %j.phi, i32 4
  64 = ptradd ptr %v, i32 %63
  64.load = load float from ptr %64
  5540 = add i32 %i43.phi, i32 %j.phi
  9541 = add i32 %5540, i32 1
  10542 = mul i32 %5540, i32 %9541
  11543 = sdiv i32 %10542, i32 2
  13544 = add i32 %11543, i32 %i43.phi
  14545 = add i32 %13544, i32 1
  69 = si2f i32 %14545 to float
  70 = fdiv float %64.load, float %69
  71 = fadd float %sum45.phi, float %70
  73 = add i32 %j.phi, i32 1
  br bb %while.cond54
while.exit56:
  75 = mul i32 %i43.phi, i32 4
  76 = ptradd ptr %out, i32 %75
  store float %sum45.phi to ptr %76
  79 = add i32 %i43.phi, i32 1
  br bb %while.cond47
}

float my_sqrt(float input) {
entry125:
  br bb %while.cond127
while.cond127:
  temp.load = load float from ptr @temp
  temp.load132 = load float from ptr @temp
  133 = fdiv float %input, float %temp.load132
  134 = fsub float %temp.load, float %133
  135 = fcmp ogt float %134, float 0.000001
  br i1 %135, bb %select.then, bb %select.else
while.body128:
  temp.load150 = load float from ptr @temp
  temp.load152 = load float from ptr @temp
  153 = fdiv float %input, float %temp.load152
  154 = fadd float %temp.load150, float %153
  155 = si2f i32 2 to float
  156 = fdiv float %154, float %155
  store float %156 to ptr @temp
  br bb %while.cond127
while.exit129:
  temp.load157 = load float from ptr @temp
  ret float %temp.load157
select.then:
  br bb %select.exit
select.else:
  temp.load140 = load float from ptr @temp
  temp.load142 = load float from ptr @temp
  143 = fdiv float %input, float %temp.load142
  144 = fsub float %temp.load140, float %143
  145 = fneg float 0.000001
  146 = fcmp olt float %144, float %145
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 %146, bb %select.then, i1 1]
  br i1 %select.phi, bb %while.body128, bb %while.exit129
}

pure float Vectordot(ptr v, ptr u, i32 n) {
entry15:
  19 = si2f i32 0 to float
  br bb %while.cond
while.cond:
  sum.phi = phi [bb %entry15, float %19, bb %while.body, float %37]
  i.phi = phi [bb %entry15, i32 0, bb %while.body, i32 %39]
  25 = icmp slt i32 %i.phi, i32 %n
  br i1 %25, bb %while.body, bb %while.exit
while.body:
  29 = mul i32 %i.phi, i32 4
  30 = ptradd ptr %v, i32 %29
  30.load = load float from ptr %30
  34 = ptradd ptr %u, i32 %29
  34.load = load float from ptr %34
  36 = fmul float %30.load, float %34.load
  37 = fadd float %sum.phi, float %36
  39 = add i32 %i.phi, i32 1
  br bb %while.cond
while.exit:
  ret float %sum.phi
}

external i32 getint()

external i32 getch()

void mult2(ptr v, ptr out, i32 n) {
entry80:
  85 = si2f i32 0 to float
  br bb %while.cond86
while.cond86:
  sum84.phi233 = phi [bb %entry80, float %85, bb %while.exit95, float %sum84.phi]
  j83.phi231 = phi [bb %entry80, i32 0, bb %while.exit95, i32 %j83.phi]
  i82.phi = phi [bb %entry80, i32 0, bb %while.exit95, i32 %118]
  91 = icmp slt i32 %i82.phi, i32 %n
  br i1 %91, bb %while.body87, bb %while.exit88
while.body87:
  br bb %while.cond93
while.exit88:
  ret 
while.cond93:
  sum84.phi = phi [bb %while.body87, float %sum84.phi233, bb %while.body94, float %110]
  j83.phi = phi [bb %while.body87, i32 %j83.phi231, bb %while.body94, i32 %112]
  98 = icmp slt i32 %j83.phi, i32 %n
  br i1 %98, bb %while.body94, bb %while.exit95
while.body94:
  102 = mul i32 %j83.phi, i32 4
  103 = ptradd ptr %v, i32 %102
  103.load = load float from ptr %103
  5550 = add i32 %j83.phi, i32 %i82.phi
  9551 = add i32 %5550, i32 1
  10552 = mul i32 %5550, i32 %9551
  11553 = sdiv i32 %10552, i32 2
  13554 = add i32 %11553, i32 %j83.phi
  14555 = add i32 %13554, i32 1
  108 = si2f i32 %14555 to float
  109 = fdiv float %103.load, float %108
  110 = fadd float %sum84.phi, float %109
  112 = add i32 %j83.phi, i32 1
  br bb %while.cond93
while.exit95:
  114 = mul i32 %i82.phi, i32 4
  115 = ptradd ptr %out, i32 %114
  store float %sum84.phi to ptr %115
  118 = add i32 %i82.phi, i32 1
  br bb %while.cond86
}

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry158:
  %Vectortmp = stack 400000
  %vectorB = stack 400000
  %vectorA = stack 400000
  161 = icmp sle i32 100000, i32 0
  br i1 %161, bb %then, bb %if.exit
then:
  br bb %if.exit
if.exit:
  n.phi = phi [bb %entry158, i32 100000, bb %then, i32 2000]
  call void _sysy_starttime(i32 62)
  br bb %while.cond169
while.cond169:
  i168.phi235 = phi [bb %if.exit, i32 ub, bb %while.body170, i32 %181]
  174 = icmp slt i32 %i168.phi235, i32 %n.phi
  br i1 %174, bb %while.body170, bb %while.exit171
while.body170:
  177 = mul i32 %i168.phi235, i32 4
  178 = ptradd ptr %vectorA, i32 %177
  179 = si2f i32 1 to float
  store float %179 to ptr %178
  181 = add i32 %i168.phi235, i32 1
  br bb %while.cond169
while.exit171:
  br bb %while.cond182
while.cond182:
  i168.phi = phi [bb %while.exit171, i32 0, bb %mult2.while.exit88515, i32 %193]
  186 = icmp slt i32 %i168.phi, i32 1000
  br i1 %186, bb %while.body183, bb %while.exit184
while.body183:
  46285 = si2f i32 0 to float
  br bb %mult1.while.cond47287
while.exit184:
  call void _sysy_stoptime(i32 76)
  19391 = si2f i32 0 to float
  br bb %Vectordot.while.cond
select.then205:
  211 = fneg float 0.000001
  212 = fcmp oge float %203, float %211
  br bb %select.exit207
select.else206:
  br bb %select.exit207
select.exit207:
  select208.phi = phi [bb %select.else206, i1 0, bb %select.then205, i1 %212]
  br i1 %select208.phi, bb %then214, bb %else
then214:
  call void putint(i32 1)
  br bb %if.exit215
if.exit215:
  call void putch(i32 10)
  ret i32 0
else:
  call void putint(i32 0)
  br bb %if.exit215
mult1.while.cond47287:
  sum45.phi224288 = phi [bb %while.body183, float %46285, bb %mult1.while.exit56312, float %sum45.phi298]
  j.phi222289 = phi [bb %while.body183, i32 0, bb %mult1.while.exit56312, i32 %j.phi299]
  i43.phi290 = phi [bb %while.body183, i32 0, bb %mult1.while.exit56312, i32 %79316]
  52291 = icmp slt i32 %i43.phi290, i32 %n.phi
  br i1 %52291, bb %mult1.while.body48293, bb %mult1.while.exit49295
mult1.while.body48293:
  br bb %mult1.while.cond54297
mult1.while.exit49295:
  br bb %mult2.while.cond86472
mult1.while.cond54297:
  sum45.phi298 = phi [bb %mult1.while.body48293, float %sum45.phi224288, bb %mult1.while.body55302, float %71309]
  j.phi299 = phi [bb %mult1.while.body48293, i32 %j.phi222289, bb %mult1.while.body55302, i32 %73310]
  59300 = icmp slt i32 %j.phi299, i32 %n.phi
  br i1 %59300, bb %mult1.while.body55302, bb %mult1.while.exit56312
mult1.while.body55302:
  63303 = mul i32 %j.phi299, i32 4
  64304 = ptradd ptr %vectorA, i32 %63303
  64.load305 = load float from ptr %64304
  5570 = add i32 %i43.phi290, i32 %j.phi299
  9571 = add i32 %5570, i32 1
  10572 = mul i32 %5570, i32 %9571
  11573 = sdiv i32 %10572, i32 2
  13574 = add i32 %11573, i32 %i43.phi290
  14575 = add i32 %13574, i32 1
  69307 = si2f i32 %14575 to float
  70308 = fdiv float %64.load305, float %69307
  71309 = fadd float %sum45.phi298, float %70308
  73310 = add i32 %j.phi299, i32 1
  br bb %mult1.while.cond54297
mult1.while.exit56312:
  75313 = mul i32 %i43.phi290, i32 4
  76314 = ptradd ptr %Vectortmp, i32 %75313
  store float %sum45.phi298 to ptr %76314
  79316 = add i32 %i43.phi290, i32 1
  br bb %mult1.while.cond47287
mult1.while.cond47322:
  sum45.phi224323 = phi [bb %mult2.while.exit88480, float %46285, bb %mult1.while.exit56347, float %sum45.phi333]
  j.phi222324 = phi [bb %mult2.while.exit88480, i32 0, bb %mult1.while.exit56347, i32 %j.phi334]
  i43.phi325 = phi [bb %mult2.while.exit88480, i32 0, bb %mult1.while.exit56347, i32 %79351]
  52326 = icmp slt i32 %i43.phi325, i32 %n.phi
  br i1 %52326, bb %mult1.while.body48328, bb %mult1.while.exit49330
mult1.while.body48328:
  br bb %mult1.while.cond54332
mult1.while.exit49330:
  br bb %mult2.while.cond86507
mult1.while.cond54332:
  sum45.phi333 = phi [bb %mult1.while.body48328, float %sum45.phi224323, bb %mult1.while.body55337, float %71344]
  j.phi334 = phi [bb %mult1.while.body48328, i32 %j.phi222324, bb %mult1.while.body55337, i32 %73345]
  59335 = icmp slt i32 %j.phi334, i32 %n.phi
  br i1 %59335, bb %mult1.while.body55337, bb %mult1.while.exit56347
mult1.while.body55337:
  63338 = mul i32 %j.phi334, i32 4
  64339 = ptradd ptr %vectorB, i32 %63338
  64.load340 = load float from ptr %64339
  5580 = add i32 %i43.phi325, i32 %j.phi334
  9581 = add i32 %5580, i32 1
  10582 = mul i32 %5580, i32 %9581
  11583 = sdiv i32 %10582, i32 2
  13584 = add i32 %11583, i32 %i43.phi325
  14585 = add i32 %13584, i32 1
  69342 = si2f i32 %14585 to float
  70343 = fdiv float %64.load340, float %69342
  71344 = fadd float %sum45.phi333, float %70343
  73345 = add i32 %j.phi334, i32 1
  br bb %mult1.while.cond54332
mult1.while.exit56347:
  75348 = mul i32 %i43.phi325, i32 4
  76349 = ptradd ptr %Vectortmp, i32 %75348
  store float %sum45.phi333 to ptr %76349
  79351 = add i32 %i43.phi325, i32 1
  br bb %mult1.while.cond47322
my_sqrt.while.cond127:
  temp.load357 = load float from ptr @temp
  temp.load132358 = load float from ptr @temp
  133359 = fdiv float %200, float %temp.load132358
  134360 = fsub float %temp.load357, float %133359
  135361 = fcmp ogt float %134360, float 0.000001
  br i1 %135361, bb %my_sqrt.select.then, bb %my_sqrt.select.else
my_sqrt.while.body128:
  temp.load150364 = load float from ptr @temp
  temp.load152365 = load float from ptr @temp
  153366 = fdiv float %200, float %temp.load152365
  154367 = fadd float %temp.load150364, float %153366
  155368 = si2f i32 2 to float
  156369 = fdiv float %154367, float %155368
  store float %156369 to ptr @temp
  br bb %my_sqrt.while.cond127
my_sqrt.while.exit129:
  temp.load157373 = load float from ptr @temp
  203 = fsub float %temp.load157373, float 1.000000
  204 = fcmp ole float %203, float 0.000001
  br i1 %204, bb %select.then205, bb %select.else206
my_sqrt.select.then:
  br bb %my_sqrt.select.exit
my_sqrt.select.else:
  temp.load140378 = load float from ptr @temp
  temp.load142379 = load float from ptr @temp
  143380 = fdiv float %200, float %temp.load142379
  144381 = fsub float %temp.load140378, float %143380
  145382 = fneg float 0.000001
  146383 = fcmp olt float %144381, float %145382
  br bb %my_sqrt.select.exit
my_sqrt.select.exit:
  select.phi386 = phi [bb %my_sqrt.select.else, i1 %146383, bb %my_sqrt.select.then, i1 1]
  br i1 %select.phi386, bb %my_sqrt.while.body128, bb %my_sqrt.while.exit129
Vectordot.while.cond:
  sum.phi394 = phi [bb %while.exit184, float %19391, bb %Vectordot.while.body, float %37405]
  i.phi395 = phi [bb %while.exit184, i32 0, bb %Vectordot.while.body, i32 %39406]
  25396 = icmp slt i32 %i.phi395, i32 %n.phi
  br i1 %25396, bb %Vectordot.while.body, bb %Vectordot.while.exit
Vectordot.while.body:
  29399 = mul i32 %i.phi395, i32 4
  30400 = ptradd ptr %vectorA, i32 %29399
  30.load401 = load float from ptr %30400
  34402 = ptradd ptr %vectorB, i32 %29399
  34.load403 = load float from ptr %34402
  36404 = fmul float %30.load401, float %34.load403
  37405 = fadd float %sum.phi394, float %36404
  39406 = add i32 %i.phi395, i32 1
  br bb %Vectordot.while.cond
Vectordot.while.exit:
  br bb %Vectordot.while.cond415
Vectordot.while.cond415:
  sum.phi416 = phi [bb %Vectordot.while.exit, float %19391, bb %Vectordot.while.body420, float %37427]
  i.phi417 = phi [bb %Vectordot.while.exit, i32 0, bb %Vectordot.while.body420, i32 %39428]
  25418 = icmp slt i32 %i.phi417, i32 %n.phi
  br i1 %25418, bb %Vectordot.while.body420, bb %Vectordot.while.exit430
Vectordot.while.body420:
  29421 = mul i32 %i.phi417, i32 4
  30422 = ptradd ptr %vectorB, i32 %29421
  30.load423 = load float from ptr %30422
  34.load425 = load float from ptr %30422
  36426 = fmul float %30.load423, float %34.load425
  37427 = fadd float %sum.phi416, float %36426
  39428 = add i32 %i.phi417, i32 1
  br bb %Vectordot.while.cond415
Vectordot.while.exit430:
  200 = fdiv float %sum.phi394, float %sum.phi416
  br bb %my_sqrt.while.cond127
mult2.while.cond86472:
  sum84.phi233473 = phi [bb %mult1.while.exit49295, float %46285, bb %mult2.while.exit95497, float %sum84.phi483]
  j83.phi231474 = phi [bb %mult1.while.exit49295, i32 0, bb %mult2.while.exit95497, i32 %j83.phi484]
  i82.phi475 = phi [bb %mult1.while.exit49295, i32 0, bb %mult2.while.exit95497, i32 %118501]
  91476 = icmp slt i32 %i82.phi475, i32 %n.phi
  br i1 %91476, bb %mult2.while.body87478, bb %mult2.while.exit88480
mult2.while.body87478:
  br bb %mult2.while.cond93482
mult2.while.exit88480:
  br bb %mult1.while.cond47322
mult2.while.cond93482:
  sum84.phi483 = phi [bb %mult2.while.body87478, float %sum84.phi233473, bb %mult2.while.body94487, float %110494]
  j83.phi484 = phi [bb %mult2.while.body87478, i32 %j83.phi231474, bb %mult2.while.body94487, i32 %112495]
  98485 = icmp slt i32 %j83.phi484, i32 %n.phi
  br i1 %98485, bb %mult2.while.body94487, bb %mult2.while.exit95497
mult2.while.body94487:
  102488 = mul i32 %j83.phi484, i32 4
  103489 = ptradd ptr %Vectortmp, i32 %102488
  103.load490 = load float from ptr %103489
  5600 = add i32 %j83.phi484, i32 %i82.phi475
  9601 = add i32 %5600, i32 1
  10602 = mul i32 %5600, i32 %9601
  11603 = sdiv i32 %10602, i32 2
  13604 = add i32 %11603, i32 %j83.phi484
  14605 = add i32 %13604, i32 1
  108492 = si2f i32 %14605 to float
  109493 = fdiv float %103.load490, float %108492
  110494 = fadd float %sum84.phi483, float %109493
  112495 = add i32 %j83.phi484, i32 1
  br bb %mult2.while.cond93482
mult2.while.exit95497:
  114498 = mul i32 %i82.phi475, i32 4
  115499 = ptradd ptr %vectorB, i32 %114498
  store float %sum84.phi483 to ptr %115499
  118501 = add i32 %i82.phi475, i32 1
  br bb %mult2.while.cond86472
mult2.while.cond86507:
  sum84.phi233508 = phi [bb %mult1.while.exit49330, float %46285, bb %mult2.while.exit95532, float %sum84.phi518]
  j83.phi231509 = phi [bb %mult1.while.exit49330, i32 0, bb %mult2.while.exit95532, i32 %j83.phi519]
  i82.phi510 = phi [bb %mult1.while.exit49330, i32 0, bb %mult2.while.exit95532, i32 %118536]
  91511 = icmp slt i32 %i82.phi510, i32 %n.phi
  br i1 %91511, bb %mult2.while.body87513, bb %mult2.while.exit88515
mult2.while.body87513:
  br bb %mult2.while.cond93517
mult2.while.exit88515:
  193 = add i32 %i168.phi, i32 1
  br bb %while.cond182
mult2.while.cond93517:
  sum84.phi518 = phi [bb %mult2.while.body87513, float %sum84.phi233508, bb %mult2.while.body94522, float %110529]
  j83.phi519 = phi [bb %mult2.while.body87513, i32 %j83.phi231509, bb %mult2.while.body94522, i32 %112530]
  98520 = icmp slt i32 %j83.phi519, i32 %n.phi
  br i1 %98520, bb %mult2.while.body94522, bb %mult2.while.exit95532
mult2.while.body94522:
  102523 = mul i32 %j83.phi519, i32 4
  103524 = ptradd ptr %Vectortmp, i32 %102523
  103.load525 = load float from ptr %103524
  5610 = add i32 %j83.phi519, i32 %i82.phi510
  9611 = add i32 %5610, i32 1
  10612 = mul i32 %5610, i32 %9611
  11613 = sdiv i32 %10612, i32 2
  13614 = add i32 %11613, i32 %j83.phi519
  14615 = add i32 %13614, i32 1
  108527 = si2f i32 %14615 to float
  109528 = fdiv float %103.load525, float %108527
  110529 = fadd float %sum84.phi518, float %109528
  112530 = add i32 %j83.phi519, i32 1
  br bb %mult2.while.cond93517
mult2.while.exit95532:
  114533 = mul i32 %i82.phi510, i32 4
  115534 = ptradd ptr %vectorA, i32 %114533
  store float %sum84.phi518 to ptr %115534
  118536 = add i32 %i82.phi510, i32 1
  br bb %mult2.while.cond86507
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

pure i32 func(i32 i, i32 j) {
entry:
  5 = add i32 %i, i32 %j
  9 = add i32 %5, i32 1
  10 = mul i32 %5, i32 %9
  11 = sdiv i32 %10, i32 2
  13 = add i32 %11, i32 %i
  14 = add i32 %13, i32 1
  ret i32 %14
}


