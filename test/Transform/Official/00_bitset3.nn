global ptr staticvalue init with i32 0
global ptr a init with 10000 x i32 zeros
global ptr seed init with 3 x i32 [19971231, 19981013, 1000000007]
i32 rand() {
entry178:
  staticvalue.load = load i32 from ptr @staticvalue
  181.load = load i32 from ptr @seed
  183 = mul i32 %staticvalue.load, i32 %181.load
  185 = ptradd ptr @seed, i32 4
  185.load = load i32 from ptr %185
  187 = add i32 %183, i32 %185.load
  store i32 %187 to ptr @staticvalue
  190 = ptradd ptr @seed, i32 8
  190.load = load i32 from ptr %190
  192 = srem i32 %187, i32 %190.load
  store i32 %192 to ptr @staticvalue
  194 = icmp slt i32 %192, i32 0
  br i1 %194, bb %then195, bb %if.exit196
then195:
  198.load = load i32 from ptr %190
  staticvalue.load200 = load i32 from ptr @staticvalue
  201 = add i32 %198.load, i32 %staticvalue.load200
  store i32 %201 to ptr @staticvalue
  br bb %if.exit196
if.exit196:
  staticvalue.load202 = load i32 from ptr @staticvalue
  ret i32 %staticvalue.load202
}

external i32 getint()

i32 set(ptr a, i32 pos, i32 d) {
entry:
  %x = stack 124
  br bb %init.cond
init.cond:
  cnt_ptr.phi = phi [bb %entry, i32 31, bb %init, i32 %cnt.dec]
  9 = icmp ne i32 %cnt_ptr.phi, i32 0
  br i1 %9, bb %init, bb %init.exit
init:
  cnt.dec = sub i32 %cnt_ptr.phi, i32 1
  offset = mul i32 %cnt.dec, i32 4
  arr.index14 = ptradd ptr %x, i32 %offset
  store i32 0 to ptr %arr.index14
  br bb %init.cond
init.exit:
  store i32 1 to ptr %x
  18 = ptradd ptr %x, i32 4
  store i32 2 to ptr %18
  24 = ptradd ptr %x, i32 8
  store i32 4 to ptr %24
  30 = ptradd ptr %x, i32 12
  store i32 8 to ptr %30
  36 = ptradd ptr %x, i32 16
  store i32 16 to ptr %36
  42 = ptradd ptr %x, i32 20
  store i32 32 to ptr %42
  48 = ptradd ptr %x, i32 24
  store i32 64 to ptr %48
  54 = ptradd ptr %x, i32 28
  store i32 128 to ptr %54
  60 = ptradd ptr %x, i32 32
  store i32 256 to ptr %60
  66 = ptradd ptr %x, i32 36
  store i32 512 to ptr %66
  72 = ptradd ptr %x, i32 40
  store i32 1024 to ptr %72
  br bb %while.cond
while.cond:
  i.phi = phi [bb %init.exit, i32 10, bb %while.body, i32 %85]
  82 = icmp slt i32 %i.phi, i32 30
  br i1 %82, bb %while.body, bb %while.exit
while.body:
  85 = add i32 %i.phi, i32 1
  87 = mul i32 %85, i32 4
  88 = ptradd ptr %x, i32 %87
  90 = sub i32 %85, i32 1
  91 = mul i32 %90, i32 4
  92 = ptradd ptr %x, i32 %91
  92.load = load i32 from ptr %92
  94 = mul i32 %92.load, i32 2
  store i32 %94 to ptr %88
  br bb %while.cond
while.exit:
  97 = sdiv i32 %pos, i32 30
  98 = icmp sge i32 %97, i32 10000
  br i1 %98, bb %then, bb %if.exit
then:
  ret i32 0
if.exit:
  103 = mul i32 %97, i32 4
  104 = ptradd ptr %a, i32 %103
  104.load = load i32 from ptr %104
  107 = srem i32 %pos, i32 30
  108 = mul i32 %107, i32 4
  109 = ptradd ptr %x, i32 %108
  109.load = load i32 from ptr %109
  111 = sdiv i32 %104.load, i32 %109.load
  112 = srem i32 %111, i32 2
  114 = icmp ne i32 %112, i32 %d
  br i1 %114, bb %then115, bb %if.exit116
then115:
  120.load = load i32 from ptr %104
  125.load = load i32 from ptr %109
  127 = sdiv i32 %120.load, i32 %125.load
  128 = srem i32 %127, i32 2
  129 = icmp eq i32 %128, i32 0
  br i1 %129, bb %then130, bb %if.exit131
if.exit116:
  v.phi231 = phi [bb %if.exit, i32 0, bb %if.exit155, i32 %v.phi230]
  174.load = load i32 from ptr %104
  177 = add i32 %174.load, i32 %v.phi231
  store i32 %177 to ptr %104
  ret i32 0
then130:
  133 = icmp eq i32 %d, i32 1
  br i1 %133, bb %then134, bb %if.exit135
if.exit131:
  v.phi233 = phi [bb %then115, i32 0, bb %if.exit135, i32 %v.phi232]
  144.load = load i32 from ptr %104
  149.load = load i32 from ptr %109
  151 = sdiv i32 %144.load, i32 %149.load
  152 = srem i32 %151, i32 2
  153 = icmp eq i32 %152, i32 1
  br i1 %153, bb %then154, bb %if.exit155
then134:
  139.load = load i32 from ptr %109
  br bb %if.exit135
if.exit135:
  v.phi232 = phi [bb %then130, i32 0, bb %then134, i32 %139.load]
  br bb %if.exit131
then154:
  157 = icmp eq i32 %d, i32 0
  br i1 %157, bb %then158, bb %if.exit159
if.exit155:
  v.phi230 = phi [bb %if.exit131, i32 %v.phi233, bb %if.exit159, i32 %v.phi]
  br bb %if.exit116
then158:
  164.load = load i32 from ptr %109
  166 = sub i32 %v.phi233, i32 %164.load
  br bb %if.exit159
if.exit159:
  v.phi = phi [bb %then154, i32 %v.phi233, bb %then158, i32 %166]
  br bb %if.exit155
}

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry203:
  %x290 = stack 124
  205 = call i32 getint()
  206 = call i32 getint()
  store i32 %206 to ptr @staticvalue
  call void _sysy_starttime(i32 56)
  br bb %while.cond210
while.cond210:
  n.phi = phi [bb %entry203, i32 %205, bb %while.body211.split.split.split, i32 %217]
  214 = icmp sgt i32 %n.phi, i32 0
  br i1 %214, bb %while.body211, bb %while.exit212
while.body211:
  217 = sub i32 %n.phi, i32 1
  staticvalue.load240 = load i32 from ptr @staticvalue
  181.load241 = load i32 from ptr @seed
  183242 = mul i32 %staticvalue.load240, i32 %181.load241
  185243 = ptradd ptr @seed, i32 4
  185.load244 = load i32 from ptr %185243
  187245 = add i32 %183242, i32 %185.load244
  store i32 %187245 to ptr @staticvalue
  190247 = ptradd ptr @seed, i32 8
  190.load248 = load i32 from ptr %190247
  192249 = srem i32 %187245, i32 %190.load248
  store i32 %192249 to ptr @staticvalue
  194251 = icmp slt i32 %192249, i32 0
  br i1 %194251, bb %rand.then195, bb %rand.if.exit196
while.body211.split:
  218.ret = phi [bb %rand.if.exit196, i32 %staticvalue.load202260]
  219 = srem i32 %218.ret, i32 300000
  staticvalue.load265 = load i32 from ptr @staticvalue
  181.load266 = load i32 from ptr @seed
  183267 = mul i32 %staticvalue.load265, i32 %181.load266
  185.load269 = load i32 from ptr %185243
  187270 = add i32 %183267, i32 %185.load269
  store i32 %187270 to ptr @staticvalue
  190.load273 = load i32 from ptr %190247
  192274 = srem i32 %187270, i32 %190.load273
  store i32 %192274 to ptr @staticvalue
  194276 = icmp slt i32 %192274, i32 0
  br i1 %194276, bb %rand.then195278, bb %rand.if.exit196284
while.body211.split.split:
  220.ret = phi [bb %rand.if.exit196284, i32 %staticvalue.load202285]
  221 = srem i32 %220.ret, i32 2
  br bb %set.entry
while.body211.split.split.split:
  br bb %while.cond210
while.exit212:
  call void _sysy_stoptime(i32 64)
  call void putarray(i32 10000, ptr @a)
  ret i32 0
rand.then195:
  198.load254 = load i32 from ptr %190247
  staticvalue.load200255 = load i32 from ptr @staticvalue
  201256 = add i32 %198.load254, i32 %staticvalue.load200255
  store i32 %201256 to ptr @staticvalue
  br bb %rand.if.exit196
rand.if.exit196:
  staticvalue.load202260 = load i32 from ptr @staticvalue
  br bb %while.body211.split
rand.then195278:
  198.load279 = load i32 from ptr %190247
  staticvalue.load200280 = load i32 from ptr @staticvalue
  201281 = add i32 %198.load279, i32 %staticvalue.load200280
  store i32 %201281 to ptr @staticvalue
  br bb %rand.if.exit196284
rand.if.exit196284:
  staticvalue.load202285 = load i32 from ptr @staticvalue
  br bb %while.body211.split.split
set.entry:
  br bb %set.init.cond
set.init.cond:
  cnt_ptr.phi293 = phi [bb %set.entry, i32 31, bb %set.init, i32 %cnt.dec297]
  9294 = icmp ne i32 %cnt_ptr.phi293, i32 0
  br i1 %9294, bb %set.init, bb %set.init.exit
set.init:
  cnt.dec297 = sub i32 %cnt_ptr.phi293, i32 1
  offset298 = mul i32 %cnt.dec297, i32 4
  arr.index14299 = ptradd ptr %x290, i32 %offset298
  store i32 0 to ptr %arr.index14299
  br bb %set.init.cond
set.init.exit:
  store i32 1 to ptr %x290
  18304 = ptradd ptr %x290, i32 4
  store i32 2 to ptr %18304
  24307 = ptradd ptr %x290, i32 8
  store i32 4 to ptr %24307
  30310 = ptradd ptr %x290, i32 12
  store i32 8 to ptr %30310
  36313 = ptradd ptr %x290, i32 16
  store i32 16 to ptr %36313
  42316 = ptradd ptr %x290, i32 20
  store i32 32 to ptr %42316
  48319 = ptradd ptr %x290, i32 24
  store i32 64 to ptr %48319
  54322 = ptradd ptr %x290, i32 28
  store i32 128 to ptr %54322
  60325 = ptradd ptr %x290, i32 32
  store i32 256 to ptr %60325
  66328 = ptradd ptr %x290, i32 36
  store i32 512 to ptr %66328
  72331 = ptradd ptr %x290, i32 40
  store i32 1024 to ptr %72331
  br bb %set.while.cond
set.while.cond:
  i.phi336 = phi [bb %set.init.exit, i32 10, bb %set.while.body, i32 %85340]
  82337 = icmp slt i32 %i.phi336, i32 30
  br i1 %82337, bb %set.while.body, bb %set.while.exit
set.while.body:
  85340 = add i32 %i.phi336, i32 1
  87341 = mul i32 %85340, i32 4
  88342 = ptradd ptr %x290, i32 %87341
  90343 = sub i32 %85340, i32 1
  91344 = mul i32 %90343, i32 4
  92345 = ptradd ptr %x290, i32 %91344
  92.load346 = load i32 from ptr %92345
  94347 = mul i32 %92.load346, i32 2
  store i32 %94347 to ptr %88342
  br bb %set.while.cond
set.while.exit:
  97351 = sdiv i32 %219, i32 30
  98352 = icmp sge i32 %97351, i32 10000
  br i1 %98352, bb %set.then, bb %set.if.exit
set.then:
  br bb %while.body211.split.split.split
set.if.exit:
  103357 = mul i32 %97351, i32 4
  104358 = ptradd ptr @a, i32 %103357
  104.load359 = load i32 from ptr %104358
  107360 = srem i32 %219, i32 30
  108361 = mul i32 %107360, i32 4
  109362 = ptradd ptr %x290, i32 %108361
  109.load363 = load i32 from ptr %109362
  111364 = sdiv i32 %104.load359, i32 %109.load363
  112365 = srem i32 %111364, i32 2
  114366 = icmp ne i32 %112365, i32 %221
  br i1 %114366, bb %set.then115, bb %set.if.exit116
set.then115:
  120.load369 = load i32 from ptr %104358
  125.load370 = load i32 from ptr %109362
  127371 = sdiv i32 %120.load369, i32 %125.load370
  128372 = srem i32 %127371, i32 2
  129373 = icmp eq i32 %128372, i32 0
  br i1 %129373, bb %set.then130, bb %set.if.exit131
set.if.exit116:
  v.phi231376 = phi [bb %set.if.exit, i32 0, bb %set.if.exit155, i32 %v.phi230402]
  174.load377 = load i32 from ptr %104358
  177378 = add i32 %174.load377, i32 %v.phi231376
  store i32 %177378 to ptr %104358
  br bb %while.body211.split.split.split
set.then130:
  133382 = icmp eq i32 %221, i32 1
  br i1 %133382, bb %set.then134, bb %set.if.exit135
set.if.exit131:
  v.phi233385 = phi [bb %set.then115, i32 0, bb %set.if.exit135, i32 %v.phi232396]
  144.load386 = load i32 from ptr %104358
  149.load387 = load i32 from ptr %109362
  151388 = sdiv i32 %144.load386, i32 %149.load387
  152389 = srem i32 %151388, i32 2
  153390 = icmp eq i32 %152389, i32 1
  br i1 %153390, bb %set.then154, bb %set.if.exit155
set.then134:
  139.load393 = load i32 from ptr %109362
  br bb %set.if.exit135
set.if.exit135:
  v.phi232396 = phi [bb %set.then130, i32 0, bb %set.then134, i32 %139.load393]
  br bb %set.if.exit131
set.then154:
  157399 = icmp eq i32 %221, i32 0
  br i1 %157399, bb %set.then158, bb %set.if.exit159
set.if.exit155:
  v.phi230402 = phi [bb %set.if.exit131, i32 %v.phi233385, bb %set.if.exit159, i32 %v.phi409]
  br bb %set.if.exit116
set.then158:
  164.load405 = load i32 from ptr %109362
  166406 = sub i32 %v.phi233385, i32 %164.load405
  br bb %set.if.exit159
set.if.exit159:
  v.phi409 = phi [bb %set.then154, i32 %v.phi233385, bb %set.then158, i32 %166406]
  br bb %set.if.exit155
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


