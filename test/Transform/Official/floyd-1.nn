global ptr c init with 2097152 x i32 zeros
global ptr dst init with 2097152 x i32 zeros
global ptr w init with 2097152 x i32 zeros
global ptr temp init with 2097152 x i32 zeros
immutable global ptr maxlen init with i32 2097152
void mem_move(ptr src, ptr dst, i32 n) {
entry43:
  br bb %while.cond
while.cond:
  i.phi = phi [bb %entry43, i32 0, bb %while.body, i32 %61]
  51 = icmp slt i32 %i.phi, i32 %n
  br i1 %51, bb %while.body, bb %while.exit
while.body:
  54 = mul i32 %i.phi, i32 4
  55 = ptradd ptr %dst, i32 %54
  58 = ptradd ptr %src, i32 %54
  58.load = load i32 from ptr %58
  store i32 %58.load to ptr %55
  61 = add i32 %i.phi, i32 1
  br bb %while.cond
while.exit:
  ret 
}

external i32 getint()

external i32 getch()

external void putint(i32 )

void floyd(ptr w, ptr dst, i32 n) {
entry62:
  br bb %while.cond65
while.cond65:
  k.phi219 = phi [bb %entry62, i32 0, bb %while.exit75, i32 %94]
  70 = icmp slt i32 %k.phi219, i32 %n
  br i1 %70, bb %while.body66, bb %while.exit67
while.body66:
  br bb %while.cond73
while.exit67:
  br bb %while.cond95
while.cond73:
  i72.phi = phi [bb %while.body66, i32 0, bb %while.body74.split, i32 %92]
  78 = icmp slt i32 %i72.phi, i32 %n
  br i1 %78, bb %while.body74, bb %while.exit75
while.body74:
  82 = mul i32 %i72.phi, i32 %n
  84 = add i32 %82, i32 %k.phi219
  85 = mul i32 %84, i32 4
  86 = ptradd ptr @temp, i32 %85
  5370 = icmp slt i32 %i72.phi, i32 0
  br i1 %5370, bb %getvalue.select.then, bb %getvalue.select.else
while.body74.split:
  90.ret = phi [bb %getvalue.then, i32 -1, bb %getvalue.if.exit, i32 %41.load403]
  store i32 %90.ret to ptr %86
  92 = add i32 %i72.phi, i32 1
  br bb %while.cond73
while.exit75:
  94 = add i32 %k.phi219, i32 1
  br bb %while.cond65
while.cond95:
  select126.phi230 = phi [bb %while.exit67, i1 ub, bb %while.exit105, i1 %select126.phi229]
  j.phi224 = phi [bb %while.exit67, i32 ub, bb %while.exit105, i32 %j.phi223]
  k.phi = phi [bb %while.exit67, i32 0, bb %while.exit105, i32 %200]
  100 = icmp slt i32 %k.phi, i32 %n
  br i1 %100, bb %while.body96, bb %while.exit97
while.body96:
  br bb %while.cond103
while.exit97:
  203 = mul i32 %n, i32 %n
  br bb %mem_move.while.cond
while.cond103:
  select126.phi229 = phi [bb %while.body96, i1 %select126.phi230, bb %while.exit113, i1 %select126.phi228]
  i102.phi = phi [bb %while.body96, i32 0, bb %while.exit113, i32 %198]
  j.phi223 = phi [bb %while.body96, i32 %j.phi224, bb %while.exit113, i32 %j.phi]
  108 = icmp slt i32 %i102.phi, i32 %n
  br i1 %108, bb %while.body104, bb %while.exit105
while.body104:
  br bb %while.cond111
while.exit105:
  200 = add i32 %k.phi, i32 1
  br bb %while.cond95
while.cond111:
  select126.phi228 = phi [bb %while.body104, i1 %select126.phi229, bb %if.exit134, i1 %select126.phi]
  j.phi = phi [bb %while.body104, i32 0, bb %if.exit134, i32 %196]
  116 = icmp slt i32 %j.phi, i32 %n
  br i1 %116, bb %while.body112, bb %while.exit113
while.body112:
  5408 = icmp slt i32 %i102.phi, i32 0
  br i1 %5408, bb %getvalue.select.then410, bb %getvalue.select.else412
while.body112.split:
  121.ret = phi [bb %getvalue.then434, i32 -1, bb %getvalue.if.exit436, i32 %41.load441]
  122 = icmp sge i32 %121.ret, i32 0
  br i1 %122, bb %select.then123, bb %select.else124
while.exit113:
  198 = add i32 %i102.phi, i32 1
  br bb %while.cond103
select.then123:
  5446 = icmp slt i32 %k.phi, i32 0
  br i1 %5446, bb %getvalue.select.then448, bb %getvalue.select.else450
select.then123.split:
  130.ret = phi [bb %getvalue.then472, i32 -1, bb %getvalue.if.exit474, i32 %41.load479]
  131 = icmp sge i32 %130.ret, i32 0
  br bb %select.exit125
select.else124:
  br bb %select.exit125
select.exit125:
  select126.phi = phi [bb %select.else124, i1 0, bb %select.then123.split, i1 %131]
  br i1 %select126.phi, bb %then133, bb %if.exit134
then133:
  br i1 %5408, bb %getvalue.select.then486, bb %getvalue.select.else488
then133.split:
  138.ret = phi [bb %getvalue.then510, i32 -1, bb %getvalue.if.exit512, i32 %41.load517]
  139 = icmp slt i32 %138.ret, i32 0
  br i1 %139, bb %then140, bb %else
if.exit134:
  196 = add i32 %j.phi, i32 1
  br bb %while.cond111
then140:
  145 = mul i32 %i102.phi, i32 %n
  147 = add i32 %145, i32 %j.phi
  148 = mul i32 %147, i32 4
  149 = ptradd ptr @temp, i32 %148
  5522 = icmp slt i32 %k.phi, i32 0
  br i1 %5522, bb %getvalue.select.then524, bb %getvalue.select.else526
then140.split:
  157.ret = phi [bb %getvalue.then548, i32 -1, bb %getvalue.if.exit550, i32 %41.load555]
  158 = add i32 %121.ret, i32 %157.ret
  store i32 %158 to ptr %149
  br bb %if.exit134
else:
  161 = mul i32 %i102.phi, i32 %n
  163 = add i32 %161, i32 %j.phi
  164 = mul i32 %163, i32 4
  165 = ptradd ptr @temp, i32 %164
  165.load = load i32 from ptr %165
  5560 = icmp slt i32 %k.phi, i32 0
  br i1 %5560, bb %getvalue.select.then562, bb %getvalue.select.else564
else.split:
  174.ret = phi [bb %getvalue.then586, i32 -1, bb %getvalue.if.exit588, i32 %41.load593]
  175 = add i32 %121.ret, i32 %174.ret
  176 = icmp sgt i32 %165.load, i32 %175
  br i1 %176, bb %then177, bb %if.exit134
then177:
  store i32 %175 to ptr %165
  br bb %if.exit134
mem_move.while.cond:
  i.phi238 = phi [bb %while.exit97, i32 0, bb %mem_move.while.body, i32 %61247]
  51239 = icmp slt i32 %i.phi238, i32 %203
  br i1 %51239, bb %mem_move.while.body, bb %mem_move.while.exit
mem_move.while.body:
  54242 = mul i32 %i.phi238, i32 4
  55243 = ptradd ptr %dst, i32 %54242
  58244 = ptradd ptr @temp, i32 %54242
  58.load245 = load i32 from ptr %58244
  store i32 %58.load245 to ptr %55243
  61247 = add i32 %i.phi238, i32 1
  br bb %mem_move.while.cond
mem_move.while.exit:
  ret 
getvalue.select.then:
  br bb %getvalue.select.exit
getvalue.select.else:
  12375 = icmp sge i32 %i72.phi, i32 %n
  br bb %getvalue.select.exit
getvalue.select.exit:
  select.phi378 = phi [bb %getvalue.select.else, i1 %12375, bb %getvalue.select.then, i1 1]
  br i1 %select.phi378, bb %getvalue.select.then15, bb %getvalue.select.else16
getvalue.select.then15:
  br bb %getvalue.select.exit17
getvalue.select.else16:
  20383 = icmp slt i32 %k.phi219, i32 0
  br bb %getvalue.select.exit17
getvalue.select.exit17:
  select18.phi386 = phi [bb %getvalue.select.else16, i1 %20383, bb %getvalue.select.then15, i1 1]
  br i1 %select18.phi386, bb %getvalue.select.then23, bb %getvalue.select.else24
getvalue.select.then23:
  br bb %getvalue.select.exit25
getvalue.select.else24:
  29391 = icmp sge i32 %k.phi219, i32 %n
  br bb %getvalue.select.exit25
getvalue.select.exit25:
  select26.phi394 = phi [bb %getvalue.select.else24, i1 %29391, bb %getvalue.select.then23, i1 1]
  br i1 %select26.phi394, bb %getvalue.then, bb %getvalue.if.exit
getvalue.then:
  br bb %while.body74.split
getvalue.if.exit:
  41402 = ptradd ptr %w, i32 %85
  41.load403 = load i32 from ptr %41402
  br bb %while.body74.split
getvalue.select.then410:
  br bb %getvalue.select.exit415
getvalue.select.else412:
  12413 = icmp sge i32 %i102.phi, i32 %n
  br bb %getvalue.select.exit415
getvalue.select.exit415:
  select.phi416 = phi [bb %getvalue.select.else412, i1 %12413, bb %getvalue.select.then410, i1 1]
  br i1 %select.phi416, bb %getvalue.select.then15418, bb %getvalue.select.else16420
getvalue.select.then15418:
  br bb %getvalue.select.exit17423
getvalue.select.else16420:
  20421 = icmp slt i32 %k.phi, i32 0
  br bb %getvalue.select.exit17423
getvalue.select.exit17423:
  select18.phi424 = phi [bb %getvalue.select.else16420, i1 %20421, bb %getvalue.select.then15418, i1 1]
  br i1 %select18.phi424, bb %getvalue.select.then23426, bb %getvalue.select.else24428
getvalue.select.then23426:
  br bb %getvalue.select.exit25431
getvalue.select.else24428:
  29429 = icmp sge i32 %k.phi, i32 %n
  br bb %getvalue.select.exit25431
getvalue.select.exit25431:
  select26.phi432 = phi [bb %getvalue.select.else24428, i1 %29429, bb %getvalue.select.then23426, i1 1]
  br i1 %select26.phi432, bb %getvalue.then434, bb %getvalue.if.exit436
getvalue.then434:
  br bb %while.body112.split
getvalue.if.exit436:
  37437 = mul i32 %i102.phi, i32 %n
  39438 = add i32 %37437, i32 %k.phi
  40439 = mul i32 %39438, i32 4
  41440 = ptradd ptr @temp, i32 %40439
  41.load441 = load i32 from ptr %41440
  br bb %while.body112.split
getvalue.select.then448:
  br bb %getvalue.select.exit453
getvalue.select.else450:
  12451 = icmp sge i32 %k.phi, i32 %n
  br bb %getvalue.select.exit453
getvalue.select.exit453:
  select.phi454 = phi [bb %getvalue.select.else450, i1 %12451, bb %getvalue.select.then448, i1 1]
  br i1 %select.phi454, bb %getvalue.select.then15456, bb %getvalue.select.else16458
getvalue.select.then15456:
  br bb %getvalue.select.exit17461
getvalue.select.else16458:
  20459 = icmp slt i32 %j.phi, i32 0
  br bb %getvalue.select.exit17461
getvalue.select.exit17461:
  select18.phi462 = phi [bb %getvalue.select.else16458, i1 %20459, bb %getvalue.select.then15456, i1 1]
  br i1 %select18.phi462, bb %getvalue.select.then23464, bb %getvalue.select.else24466
getvalue.select.then23464:
  br bb %getvalue.select.exit25469
getvalue.select.else24466:
  29467 = icmp sge i32 %j.phi, i32 %n
  br bb %getvalue.select.exit25469
getvalue.select.exit25469:
  select26.phi470 = phi [bb %getvalue.select.else24466, i1 %29467, bb %getvalue.select.then23464, i1 1]
  br i1 %select26.phi470, bb %getvalue.then472, bb %getvalue.if.exit474
getvalue.then472:
  br bb %select.then123.split
getvalue.if.exit474:
  37475 = mul i32 %k.phi, i32 %n
  39476 = add i32 %37475, i32 %j.phi
  40477 = mul i32 %39476, i32 4
  41478 = ptradd ptr @temp, i32 %40477
  41.load479 = load i32 from ptr %41478
  br bb %select.then123.split
getvalue.select.then486:
  br bb %getvalue.select.exit491
getvalue.select.else488:
  12489 = icmp sge i32 %i102.phi, i32 %n
  br bb %getvalue.select.exit491
getvalue.select.exit491:
  select.phi492 = phi [bb %getvalue.select.else488, i1 %12489, bb %getvalue.select.then486, i1 1]
  br i1 %select.phi492, bb %getvalue.select.then15494, bb %getvalue.select.else16496
getvalue.select.then15494:
  br bb %getvalue.select.exit17499
getvalue.select.else16496:
  20497 = icmp slt i32 %j.phi, i32 0
  br bb %getvalue.select.exit17499
getvalue.select.exit17499:
  select18.phi500 = phi [bb %getvalue.select.else16496, i1 %20497, bb %getvalue.select.then15494, i1 1]
  br i1 %select18.phi500, bb %getvalue.select.then23502, bb %getvalue.select.else24504
getvalue.select.then23502:
  br bb %getvalue.select.exit25507
getvalue.select.else24504:
  29505 = icmp sge i32 %j.phi, i32 %n
  br bb %getvalue.select.exit25507
getvalue.select.exit25507:
  select26.phi508 = phi [bb %getvalue.select.else24504, i1 %29505, bb %getvalue.select.then23502, i1 1]
  br i1 %select26.phi508, bb %getvalue.then510, bb %getvalue.if.exit512
getvalue.then510:
  br bb %then133.split
getvalue.if.exit512:
  37513 = mul i32 %i102.phi, i32 %n
  39514 = add i32 %37513, i32 %j.phi
  40515 = mul i32 %39514, i32 4
  41516 = ptradd ptr @temp, i32 %40515
  41.load517 = load i32 from ptr %41516
  br bb %then133.split
getvalue.select.then524:
  br bb %getvalue.select.exit529
getvalue.select.else526:
  12527 = icmp sge i32 %k.phi, i32 %n
  br bb %getvalue.select.exit529
getvalue.select.exit529:
  select.phi530 = phi [bb %getvalue.select.else526, i1 %12527, bb %getvalue.select.then524, i1 1]
  br i1 %select.phi530, bb %getvalue.select.then15532, bb %getvalue.select.else16534
getvalue.select.then15532:
  br bb %getvalue.select.exit17537
getvalue.select.else16534:
  20535 = icmp slt i32 %j.phi, i32 0
  br bb %getvalue.select.exit17537
getvalue.select.exit17537:
  select18.phi538 = phi [bb %getvalue.select.else16534, i1 %20535, bb %getvalue.select.then15532, i1 1]
  br i1 %select18.phi538, bb %getvalue.select.then23540, bb %getvalue.select.else24542
getvalue.select.then23540:
  br bb %getvalue.select.exit25545
getvalue.select.else24542:
  29543 = icmp sge i32 %j.phi, i32 %n
  br bb %getvalue.select.exit25545
getvalue.select.exit25545:
  select26.phi546 = phi [bb %getvalue.select.else24542, i1 %29543, bb %getvalue.select.then23540, i1 1]
  br i1 %select26.phi546, bb %getvalue.then548, bb %getvalue.if.exit550
getvalue.then548:
  br bb %then140.split
getvalue.if.exit550:
  37551 = mul i32 %k.phi, i32 %n
  39552 = add i32 %37551, i32 %j.phi
  40553 = mul i32 %39552, i32 4
  41554 = ptradd ptr @temp, i32 %40553
  41.load555 = load i32 from ptr %41554
  br bb %then140.split
getvalue.select.then562:
  br bb %getvalue.select.exit567
getvalue.select.else564:
  12565 = icmp sge i32 %k.phi, i32 %n
  br bb %getvalue.select.exit567
getvalue.select.exit567:
  select.phi568 = phi [bb %getvalue.select.else564, i1 %12565, bb %getvalue.select.then562, i1 1]
  br i1 %select.phi568, bb %getvalue.select.then15570, bb %getvalue.select.else16572
getvalue.select.then15570:
  br bb %getvalue.select.exit17575
getvalue.select.else16572:
  20573 = icmp slt i32 %j.phi, i32 0
  br bb %getvalue.select.exit17575
getvalue.select.exit17575:
  select18.phi576 = phi [bb %getvalue.select.else16572, i1 %20573, bb %getvalue.select.then15570, i1 1]
  br i1 %select18.phi576, bb %getvalue.select.then23578, bb %getvalue.select.else24580
getvalue.select.then23578:
  br bb %getvalue.select.exit25583
getvalue.select.else24580:
  29581 = icmp sge i32 %j.phi, i32 %n
  br bb %getvalue.select.exit25583
getvalue.select.exit25583:
  select26.phi584 = phi [bb %getvalue.select.else24580, i1 %29581, bb %getvalue.select.then23578, i1 1]
  br i1 %select26.phi584, bb %getvalue.then586, bb %getvalue.if.exit588
getvalue.then586:
  br bb %else.split
getvalue.if.exit588:
  37589 = mul i32 %k.phi, i32 %n
  39590 = add i32 %37589, i32 %j.phi
  40591 = mul i32 %39590, i32 4
  41592 = ptradd ptr @temp, i32 %40591
  41.load593 = load i32 from ptr %41592
  br bb %else.split
}

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry205:
  207 = call i32 getint()
  208 = call i32 getarray(ptr @w)
  call void _sysy_starttime(i32 62)
  br bb %floyd.while.cond65
floyd.while.cond65:
  k.phi219255 = phi [bb %entry205, i32 0, bb %floyd.while.exit75, i32 %94276]
  70256 = icmp slt i32 %k.phi219255, i32 %207
  br i1 %70256, bb %floyd.while.body66, bb %floyd.while.exit67
floyd.while.body66:
  br bb %floyd.while.cond73
floyd.while.exit67:
  br bb %floyd.while.cond95
floyd.while.cond73:
  i72.phi263 = phi [bb %floyd.while.body66, i32 0, bb %floyd.while.body74.split, i32 %92273]
  78264 = icmp slt i32 %i72.phi263, i32 %207
  br i1 %78264, bb %floyd.while.body74, bb %floyd.while.exit75
floyd.while.body74:
  82267 = mul i32 %i72.phi263, i32 %207
  84268 = add i32 %82267, i32 %k.phi219255
  85269 = mul i32 %84268, i32 4
  86270 = ptradd ptr @temp, i32 %85269
  5598 = icmp slt i32 %i72.phi263, i32 0
  br i1 %5598, bb %getvalue.select.then600, bb %getvalue.select.else602
floyd.while.body74.split:
  90271.ret = phi [bb %getvalue.then624, i32 -1, bb %getvalue.if.exit626, i32 %41.load631]
  store i32 %90271.ret to ptr %86270
  92273 = add i32 %i72.phi263, i32 1
  br bb %floyd.while.cond73
floyd.while.exit75:
  94276 = add i32 %k.phi219255, i32 1
  br bb %floyd.while.cond65
floyd.while.cond95:
  select126.phi230279 = phi [bb %floyd.while.exit67, i1 ub, bb %floyd.while.exit105, i1 %select126.phi229292]
  j.phi224280 = phi [bb %floyd.while.exit67, i32 ub, bb %floyd.while.exit105, i32 %j.phi223294]
  k.phi281 = phi [bb %floyd.while.exit67, i32 0, bb %floyd.while.exit105, i32 %200300]
  100282 = icmp slt i32 %k.phi281, i32 %207
  br i1 %100282, bb %floyd.while.body96, bb %floyd.while.exit97
floyd.while.body96:
  br bb %floyd.while.cond103
floyd.while.exit97:
  203287 = mul i32 %207, i32 %207
  br bb %floyd.mem_move.while.cond
floyd.while.cond103:
  select126.phi229292 = phi [bb %floyd.while.body96, i1 %select126.phi230279, bb %floyd.while.exit113, i1 %select126.phi228303]
  i102.phi293 = phi [bb %floyd.while.body96, i32 0, bb %floyd.while.exit113, i32 %198312]
  j.phi223294 = phi [bb %floyd.while.body96, i32 %j.phi224280, bb %floyd.while.exit113, i32 %j.phi304]
  108295 = icmp slt i32 %i102.phi293, i32 %207
  br i1 %108295, bb %floyd.while.body104, bb %floyd.while.exit105
floyd.while.body104:
  br bb %floyd.while.cond111
floyd.while.exit105:
  200300 = add i32 %k.phi281, i32 1
  br bb %floyd.while.cond95
floyd.while.cond111:
  select126.phi228303 = phi [bb %floyd.while.body104, i1 %select126.phi229292, bb %floyd.if.exit134, i1 %select126.phi321]
  j.phi304 = phi [bb %floyd.while.body104, i32 0, bb %floyd.if.exit134, i32 %196328]
  116305 = icmp slt i32 %j.phi304, i32 %207
  br i1 %116305, bb %floyd.while.body112, bb %floyd.while.exit113
floyd.while.body112:
  5636 = icmp slt i32 %i102.phi293, i32 0
  br i1 %5636, bb %getvalue.select.then638, bb %getvalue.select.else640
floyd.while.body112.split:
  121308.ret = phi [bb %getvalue.then662, i32 -1, bb %getvalue.if.exit664, i32 %41.load669]
  122309 = icmp sge i32 %121308.ret, i32 0
  br i1 %122309, bb %floyd.select.then123, bb %floyd.select.else124
floyd.while.exit113:
  198312 = add i32 %i102.phi293, i32 1
  br bb %floyd.while.cond103
floyd.select.then123:
  5674 = icmp slt i32 %k.phi281, i32 0
  br i1 %5674, bb %getvalue.select.then676, bb %getvalue.select.else678
floyd.select.then123.split:
  130315.ret = phi [bb %getvalue.then700, i32 -1, bb %getvalue.if.exit702, i32 %41.load707]
  131316 = icmp sge i32 %130315.ret, i32 0
  br bb %floyd.select.exit125
floyd.select.else124:
  br bb %floyd.select.exit125
floyd.select.exit125:
  select126.phi321 = phi [bb %floyd.select.else124, i1 0, bb %floyd.select.then123.split, i1 %131316]
  br i1 %select126.phi321, bb %floyd.then133, bb %floyd.if.exit134
floyd.then133:
  br i1 %5636, bb %getvalue.select.then714, bb %getvalue.select.else716
floyd.then133.split:
  138324.ret = phi [bb %getvalue.then738, i32 -1, bb %getvalue.if.exit740, i32 %41.load745]
  139325 = icmp slt i32 %138324.ret, i32 0
  br i1 %139325, bb %floyd.then140, bb %floyd.else
floyd.if.exit134:
  196328 = add i32 %j.phi304, i32 1
  br bb %floyd.while.cond111
floyd.then140:
  145331 = mul i32 %i102.phi293, i32 %207
  147332 = add i32 %145331, i32 %j.phi304
  148333 = mul i32 %147332, i32 4
  149334 = ptradd ptr @temp, i32 %148333
  5750 = icmp slt i32 %k.phi281, i32 0
  br i1 %5750, bb %getvalue.select.then752, bb %getvalue.select.else754
floyd.then140.split:
  157335.ret = phi [bb %getvalue.then776, i32 -1, bb %getvalue.if.exit778, i32 %41.load783]
  158336 = add i32 %121308.ret, i32 %157335.ret
  store i32 %158336 to ptr %149334
  br bb %floyd.if.exit134
floyd.else:
  161340 = mul i32 %i102.phi293, i32 %207
  163341 = add i32 %161340, i32 %j.phi304
  164342 = mul i32 %163341, i32 4
  165343 = ptradd ptr @temp, i32 %164342
  165.load344 = load i32 from ptr %165343
  5788 = icmp slt i32 %k.phi281, i32 0
  br i1 %5788, bb %getvalue.select.then790, bb %getvalue.select.else792
floyd.else.split:
  174345.ret = phi [bb %getvalue.then814, i32 -1, bb %getvalue.if.exit816, i32 %41.load821]
  175346 = add i32 %121308.ret, i32 %174345.ret
  176347 = icmp sgt i32 %165.load344, i32 %175346
  br i1 %176347, bb %floyd.then177, bb %floyd.if.exit134
floyd.then177:
  store i32 %175346 to ptr %165343
  br bb %floyd.if.exit134
floyd.mem_move.while.cond:
  i.phi238355 = phi [bb %floyd.while.exit97, i32 0, bb %floyd.mem_move.while.body, i32 %61247364]
  51239356 = icmp slt i32 %i.phi238355, i32 %203287
  br i1 %51239356, bb %floyd.mem_move.while.body, bb %floyd.mem_move.while.exit
floyd.mem_move.while.body:
  54242359 = mul i32 %i.phi238355, i32 4
  55243360 = ptradd ptr @dst, i32 %54242359
  58244361 = ptradd ptr @temp, i32 %54242359
  58.load245362 = load i32 from ptr %58244361
  store i32 %58.load245362 to ptr %55243360
  61247364 = add i32 %i.phi238355, i32 1
  br bb %floyd.mem_move.while.cond
floyd.mem_move.while.exit:
  call void _sysy_stoptime(i32 64)
  call void putarray(i32 %203287, ptr @dst)
  ret i32 0
getvalue.select.then600:
  br bb %getvalue.select.exit605
getvalue.select.else602:
  12603 = icmp sge i32 %i72.phi263, i32 %207
  br bb %getvalue.select.exit605
getvalue.select.exit605:
  select.phi606 = phi [bb %getvalue.select.else602, i1 %12603, bb %getvalue.select.then600, i1 1]
  br i1 %select.phi606, bb %getvalue.select.then15608, bb %getvalue.select.else16610
getvalue.select.then15608:
  br bb %getvalue.select.exit17613
getvalue.select.else16610:
  20611 = icmp slt i32 %k.phi219255, i32 0
  br bb %getvalue.select.exit17613
getvalue.select.exit17613:
  select18.phi614 = phi [bb %getvalue.select.else16610, i1 %20611, bb %getvalue.select.then15608, i1 1]
  br i1 %select18.phi614, bb %getvalue.select.then23616, bb %getvalue.select.else24618
getvalue.select.then23616:
  br bb %getvalue.select.exit25621
getvalue.select.else24618:
  29619 = icmp sge i32 %k.phi219255, i32 %207
  br bb %getvalue.select.exit25621
getvalue.select.exit25621:
  select26.phi622 = phi [bb %getvalue.select.else24618, i1 %29619, bb %getvalue.select.then23616, i1 1]
  br i1 %select26.phi622, bb %getvalue.then624, bb %getvalue.if.exit626
getvalue.then624:
  br bb %floyd.while.body74.split
getvalue.if.exit626:
  41630 = ptradd ptr @w, i32 %85269
  41.load631 = load i32 from ptr %41630
  br bb %floyd.while.body74.split
getvalue.select.then638:
  br bb %getvalue.select.exit643
getvalue.select.else640:
  12641 = icmp sge i32 %i102.phi293, i32 %207
  br bb %getvalue.select.exit643
getvalue.select.exit643:
  select.phi644 = phi [bb %getvalue.select.else640, i1 %12641, bb %getvalue.select.then638, i1 1]
  br i1 %select.phi644, bb %getvalue.select.then15646, bb %getvalue.select.else16648
getvalue.select.then15646:
  br bb %getvalue.select.exit17651
getvalue.select.else16648:
  20649 = icmp slt i32 %k.phi281, i32 0
  br bb %getvalue.select.exit17651
getvalue.select.exit17651:
  select18.phi652 = phi [bb %getvalue.select.else16648, i1 %20649, bb %getvalue.select.then15646, i1 1]
  br i1 %select18.phi652, bb %getvalue.select.then23654, bb %getvalue.select.else24656
getvalue.select.then23654:
  br bb %getvalue.select.exit25659
getvalue.select.else24656:
  29657 = icmp sge i32 %k.phi281, i32 %207
  br bb %getvalue.select.exit25659
getvalue.select.exit25659:
  select26.phi660 = phi [bb %getvalue.select.else24656, i1 %29657, bb %getvalue.select.then23654, i1 1]
  br i1 %select26.phi660, bb %getvalue.then662, bb %getvalue.if.exit664
getvalue.then662:
  br bb %floyd.while.body112.split
getvalue.if.exit664:
  37665 = mul i32 %i102.phi293, i32 %207
  39666 = add i32 %37665, i32 %k.phi281
  40667 = mul i32 %39666, i32 4
  41668 = ptradd ptr @temp, i32 %40667
  41.load669 = load i32 from ptr %41668
  br bb %floyd.while.body112.split
getvalue.select.then676:
  br bb %getvalue.select.exit681
getvalue.select.else678:
  12679 = icmp sge i32 %k.phi281, i32 %207
  br bb %getvalue.select.exit681
getvalue.select.exit681:
  select.phi682 = phi [bb %getvalue.select.else678, i1 %12679, bb %getvalue.select.then676, i1 1]
  br i1 %select.phi682, bb %getvalue.select.then15684, bb %getvalue.select.else16686
getvalue.select.then15684:
  br bb %getvalue.select.exit17689
getvalue.select.else16686:
  20687 = icmp slt i32 %j.phi304, i32 0
  br bb %getvalue.select.exit17689
getvalue.select.exit17689:
  select18.phi690 = phi [bb %getvalue.select.else16686, i1 %20687, bb %getvalue.select.then15684, i1 1]
  br i1 %select18.phi690, bb %getvalue.select.then23692, bb %getvalue.select.else24694
getvalue.select.then23692:
  br bb %getvalue.select.exit25697
getvalue.select.else24694:
  29695 = icmp sge i32 %j.phi304, i32 %207
  br bb %getvalue.select.exit25697
getvalue.select.exit25697:
  select26.phi698 = phi [bb %getvalue.select.else24694, i1 %29695, bb %getvalue.select.then23692, i1 1]
  br i1 %select26.phi698, bb %getvalue.then700, bb %getvalue.if.exit702
getvalue.then700:
  br bb %floyd.select.then123.split
getvalue.if.exit702:
  37703 = mul i32 %k.phi281, i32 %207
  39704 = add i32 %37703, i32 %j.phi304
  40705 = mul i32 %39704, i32 4
  41706 = ptradd ptr @temp, i32 %40705
  41.load707 = load i32 from ptr %41706
  br bb %floyd.select.then123.split
getvalue.select.then714:
  br bb %getvalue.select.exit719
getvalue.select.else716:
  12717 = icmp sge i32 %i102.phi293, i32 %207
  br bb %getvalue.select.exit719
getvalue.select.exit719:
  select.phi720 = phi [bb %getvalue.select.else716, i1 %12717, bb %getvalue.select.then714, i1 1]
  br i1 %select.phi720, bb %getvalue.select.then15722, bb %getvalue.select.else16724
getvalue.select.then15722:
  br bb %getvalue.select.exit17727
getvalue.select.else16724:
  20725 = icmp slt i32 %j.phi304, i32 0
  br bb %getvalue.select.exit17727
getvalue.select.exit17727:
  select18.phi728 = phi [bb %getvalue.select.else16724, i1 %20725, bb %getvalue.select.then15722, i1 1]
  br i1 %select18.phi728, bb %getvalue.select.then23730, bb %getvalue.select.else24732
getvalue.select.then23730:
  br bb %getvalue.select.exit25735
getvalue.select.else24732:
  29733 = icmp sge i32 %j.phi304, i32 %207
  br bb %getvalue.select.exit25735
getvalue.select.exit25735:
  select26.phi736 = phi [bb %getvalue.select.else24732, i1 %29733, bb %getvalue.select.then23730, i1 1]
  br i1 %select26.phi736, bb %getvalue.then738, bb %getvalue.if.exit740
getvalue.then738:
  br bb %floyd.then133.split
getvalue.if.exit740:
  37741 = mul i32 %i102.phi293, i32 %207
  39742 = add i32 %37741, i32 %j.phi304
  40743 = mul i32 %39742, i32 4
  41744 = ptradd ptr @temp, i32 %40743
  41.load745 = load i32 from ptr %41744
  br bb %floyd.then133.split
getvalue.select.then752:
  br bb %getvalue.select.exit757
getvalue.select.else754:
  12755 = icmp sge i32 %k.phi281, i32 %207
  br bb %getvalue.select.exit757
getvalue.select.exit757:
  select.phi758 = phi [bb %getvalue.select.else754, i1 %12755, bb %getvalue.select.then752, i1 1]
  br i1 %select.phi758, bb %getvalue.select.then15760, bb %getvalue.select.else16762
getvalue.select.then15760:
  br bb %getvalue.select.exit17765
getvalue.select.else16762:
  20763 = icmp slt i32 %j.phi304, i32 0
  br bb %getvalue.select.exit17765
getvalue.select.exit17765:
  select18.phi766 = phi [bb %getvalue.select.else16762, i1 %20763, bb %getvalue.select.then15760, i1 1]
  br i1 %select18.phi766, bb %getvalue.select.then23768, bb %getvalue.select.else24770
getvalue.select.then23768:
  br bb %getvalue.select.exit25773
getvalue.select.else24770:
  29771 = icmp sge i32 %j.phi304, i32 %207
  br bb %getvalue.select.exit25773
getvalue.select.exit25773:
  select26.phi774 = phi [bb %getvalue.select.else24770, i1 %29771, bb %getvalue.select.then23768, i1 1]
  br i1 %select26.phi774, bb %getvalue.then776, bb %getvalue.if.exit778
getvalue.then776:
  br bb %floyd.then140.split
getvalue.if.exit778:
  37779 = mul i32 %k.phi281, i32 %207
  39780 = add i32 %37779, i32 %j.phi304
  40781 = mul i32 %39780, i32 4
  41782 = ptradd ptr @temp, i32 %40781
  41.load783 = load i32 from ptr %41782
  br bb %floyd.then140.split
getvalue.select.then790:
  br bb %getvalue.select.exit795
getvalue.select.else792:
  12793 = icmp sge i32 %k.phi281, i32 %207
  br bb %getvalue.select.exit795
getvalue.select.exit795:
  select.phi796 = phi [bb %getvalue.select.else792, i1 %12793, bb %getvalue.select.then790, i1 1]
  br i1 %select.phi796, bb %getvalue.select.then15798, bb %getvalue.select.else16800
getvalue.select.then15798:
  br bb %getvalue.select.exit17803
getvalue.select.else16800:
  20801 = icmp slt i32 %j.phi304, i32 0
  br bb %getvalue.select.exit17803
getvalue.select.exit17803:
  select18.phi804 = phi [bb %getvalue.select.else16800, i1 %20801, bb %getvalue.select.then15798, i1 1]
  br i1 %select18.phi804, bb %getvalue.select.then23806, bb %getvalue.select.else24808
getvalue.select.then23806:
  br bb %getvalue.select.exit25811
getvalue.select.else24808:
  29809 = icmp sge i32 %j.phi304, i32 %207
  br bb %getvalue.select.exit25811
getvalue.select.exit25811:
  select26.phi812 = phi [bb %getvalue.select.else24808, i1 %29809, bb %getvalue.select.then23806, i1 1]
  br i1 %select26.phi812, bb %getvalue.then814, bb %getvalue.if.exit816
getvalue.then814:
  br bb %floyd.else.split
getvalue.if.exit816:
  37817 = mul i32 %k.phi281, i32 %207
  39818 = add i32 %37817, i32 %j.phi304
  40819 = mul i32 %39818, i32 4
  41820 = ptradd ptr @temp, i32 %40819
  41.load821 = load i32 from ptr %41820
  br bb %floyd.else.split
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

pure i32 getvalue(ptr a, i32 n, i32 i, i32 j) {
entry:
  5 = icmp slt i32 %i, i32 0
  br i1 %5, bb %select.then, bb %select.else
select.then:
  br bb %select.exit
select.else:
  12 = icmp sge i32 %i, i32 %n
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 %12, bb %select.then, i1 1]
  br i1 %select.phi, bb %select.then15, bb %select.else16
select.then15:
  br bb %select.exit17
select.else16:
  20 = icmp slt i32 %j, i32 0
  br bb %select.exit17
select.exit17:
  select18.phi = phi [bb %select.else16, i1 %20, bb %select.then15, i1 1]
  br i1 %select18.phi, bb %select.then23, bb %select.else24
select.then23:
  br bb %select.exit25
select.else24:
  29 = icmp sge i32 %j, i32 %n
  br bb %select.exit25
select.exit25:
  select26.phi = phi [bb %select.else24, i1 %29, bb %select.then23, i1 1]
  br i1 %select26.phi, bb %then, bb %if.exit
then:
  ret i32 -1
if.exit:
  37 = mul i32 %i, i32 %n
  39 = add i32 %37, i32 %j
  40 = mul i32 %39, i32 4
  41 = ptradd ptr %a, i32 %40
  41.load = load i32 from ptr %41
  ret i32 %41.load
}


