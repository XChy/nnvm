global ptr c init with 2097152 x i32 zeros
global ptr dst init with 2097152 x i32 zeros
global ptr w init with 2097152 x i32 zeros
global ptr temp init with 2097152 x i32 zeros
immutable global ptr maxlen init with i32 2097152
void mem_move(ptr src, ptr dst, i32 n) {
entry43:
  br bb %while.cond
while.cond:
  i.phi = phi [bb %entry43, i32 0, bb %while.body, i32 %61]
  51 = icmp slt i32 %i.phi, i32 %n
  br i1 %51, bb %while.body, bb %while.exit
while.body:
  54 = mul i32 %i.phi, i32 4
  55 = ptradd ptr %dst, i32 %54
  58 = ptradd ptr %src, i32 %54
  58.load = load i32 from ptr %58
  store i32 %58.load to ptr %55
  61 = add i32 %i.phi, i32 1
  br bb %while.cond
while.exit:
  ret 
}

external i32 getint()

external i32 getch()

external void putint(i32 )

void floyd(ptr w, ptr dst, i32 n) {
entry62:
  br bb %while.cond65
while.cond65:
  k.phi219 = phi [bb %entry62, i32 0, bb %while.exit75, i32 %94]
  70 = icmp slt i32 %k.phi219, i32 %n
  br i1 %70, bb %while.body66, bb %while.exit67
while.body66:
  br bb %while.cond73
while.exit67:
  br bb %while.cond95
while.cond73:
  i72.phi = phi [bb %while.body66, i32 0, bb %while.body74.split, i32 %92]
  78 = icmp slt i32 %i72.phi, i32 %n
  br i1 %78, bb %while.body74, bb %while.exit75
while.body74:
  82 = mul i32 %i72.phi, i32 %n
  84 = add i32 %82, i32 %k.phi219
  85 = mul i32 %84, i32 4
  86 = ptradd ptr @temp, i32 %85
  5374 = icmp slt i32 %i72.phi, i32 0
  br i1 %5374, bb %getvalue.select.then, bb %getvalue.select.else
while.body74.split:
  90.ret = phi [bb %getvalue.then, i32 -1, bb %getvalue.if.exit, i32 %41.load407]
  store i32 %90.ret to ptr %86
  92 = add i32 %i72.phi, i32 1
  br bb %while.cond73
while.exit75:
  94 = add i32 %k.phi219, i32 1
  br bb %while.cond65
while.cond95:
  select126.phi230 = phi [bb %while.exit67, i1 ub, bb %while.exit105, i1 %select126.phi229]
  j.phi224 = phi [bb %while.exit67, i32 ub, bb %while.exit105, i32 %j.phi223]
  k.phi = phi [bb %while.exit67, i32 0, bb %while.exit105, i32 %200]
  100 = icmp slt i32 %k.phi, i32 %n
  br i1 %100, bb %while.body96, bb %while.exit97
while.body96:
  br bb %while.cond103
while.exit97:
  203 = mul i32 %n, i32 %n
  br bb %mem_move.entry43
while.exit97.split:
  ret 
while.cond103:
  select126.phi229 = phi [bb %while.body96, i1 %select126.phi230, bb %while.exit113, i1 %select126.phi228]
  i102.phi = phi [bb %while.body96, i32 0, bb %while.exit113, i32 %198]
  j.phi223 = phi [bb %while.body96, i32 %j.phi224, bb %while.exit113, i32 %j.phi]
  108 = icmp slt i32 %i102.phi, i32 %n
  br i1 %108, bb %while.body104, bb %while.exit105
while.body104:
  br bb %while.cond111
while.exit105:
  200 = add i32 %k.phi, i32 1
  br bb %while.cond95
while.cond111:
  select126.phi228 = phi [bb %while.body104, i1 %select126.phi229, bb %if.exit134, i1 %select126.phi]
  j.phi = phi [bb %while.body104, i32 0, bb %if.exit134, i32 %196]
  116 = icmp slt i32 %j.phi, i32 %n
  br i1 %116, bb %while.body112, bb %while.exit113
while.body112:
  5412 = icmp slt i32 %i102.phi, i32 0
  br i1 %5412, bb %getvalue.select.then414, bb %getvalue.select.else416
while.body112.split:
  121.ret = phi [bb %getvalue.then438, i32 -1, bb %getvalue.if.exit440, i32 %41.load445]
  122 = icmp sge i32 %121.ret, i32 0
  br i1 %122, bb %select.then123, bb %select.else124
while.exit113:
  198 = add i32 %i102.phi, i32 1
  br bb %while.cond103
select.then123:
  5450 = icmp slt i32 %k.phi, i32 0
  br i1 %5450, bb %getvalue.select.then452, bb %getvalue.select.else454
select.then123.split:
  130.ret = phi [bb %getvalue.then476, i32 -1, bb %getvalue.if.exit478, i32 %41.load483]
  131 = icmp sge i32 %130.ret, i32 0
  br bb %select.exit125
select.else124:
  br bb %select.exit125
select.exit125:
  select126.phi = phi [bb %select.else124, i1 0, bb %select.then123.split, i1 %131]
  br i1 %select126.phi, bb %then133, bb %if.exit134
then133:
  br i1 %5412, bb %getvalue.select.then490, bb %getvalue.select.else492
then133.split:
  138.ret = phi [bb %getvalue.then514, i32 -1, bb %getvalue.if.exit516, i32 %41.load521]
  139 = icmp slt i32 %138.ret, i32 0
  br i1 %139, bb %then140, bb %else
if.exit134:
  196 = add i32 %j.phi, i32 1
  br bb %while.cond111
then140:
  145 = mul i32 %i102.phi, i32 %n
  147 = add i32 %145, i32 %j.phi
  148 = mul i32 %147, i32 4
  149 = ptradd ptr @temp, i32 %148
  5526 = icmp slt i32 %k.phi, i32 0
  br i1 %5526, bb %getvalue.select.then528, bb %getvalue.select.else530
then140.split:
  157.ret = phi [bb %getvalue.then552, i32 -1, bb %getvalue.if.exit554, i32 %41.load559]
  158 = add i32 %121.ret, i32 %157.ret
  store i32 %158 to ptr %149
  br bb %if.exit141
if.exit141:
  br bb %if.exit134
else:
  161 = mul i32 %i102.phi, i32 %n
  163 = add i32 %161, i32 %j.phi
  164 = mul i32 %163, i32 4
  165 = ptradd ptr @temp, i32 %164
  165.load = load i32 from ptr %165
  5564 = icmp slt i32 %k.phi, i32 0
  br i1 %5564, bb %getvalue.select.then566, bb %getvalue.select.else568
else.split:
  174.ret = phi [bb %getvalue.then590, i32 -1, bb %getvalue.if.exit592, i32 %41.load597]
  175 = add i32 %121.ret, i32 %174.ret
  176 = icmp sgt i32 %165.load, i32 %175
  br i1 %176, bb %then177, bb %if.exit178
then177:
  store i32 %175 to ptr %165
  br bb %if.exit178
if.exit178:
  br bb %if.exit141
mem_move.entry43:
  br bb %mem_move.while.cond
mem_move.while.cond:
  i.phi238 = phi [bb %mem_move.entry43, i32 0, bb %mem_move.while.body, i32 %61247]
  51239 = icmp slt i32 %i.phi238, i32 %203
  br i1 %51239, bb %mem_move.while.body, bb %mem_move.while.exit
mem_move.while.body:
  54242 = mul i32 %i.phi238, i32 4
  55243 = ptradd ptr %dst, i32 %54242
  58244 = ptradd ptr @temp, i32 %54242
  58.load245 = load i32 from ptr %58244
  store i32 %58.load245 to ptr %55243
  61247 = add i32 %i.phi238, i32 1
  br bb %mem_move.while.cond
mem_move.while.exit:
  br bb %while.exit97.split
getvalue.select.then:
  br bb %getvalue.select.exit
getvalue.select.else:
  12379 = icmp sge i32 %i72.phi, i32 %n
  br bb %getvalue.select.exit
getvalue.select.exit:
  select.phi382 = phi [bb %getvalue.select.else, i1 %12379, bb %getvalue.select.then, i1 1]
  br i1 %select.phi382, bb %getvalue.select.then15, bb %getvalue.select.else16
getvalue.select.then15:
  br bb %getvalue.select.exit17
getvalue.select.else16:
  20387 = icmp slt i32 %k.phi219, i32 0
  br bb %getvalue.select.exit17
getvalue.select.exit17:
  select18.phi390 = phi [bb %getvalue.select.else16, i1 %20387, bb %getvalue.select.then15, i1 1]
  br i1 %select18.phi390, bb %getvalue.select.then23, bb %getvalue.select.else24
getvalue.select.then23:
  br bb %getvalue.select.exit25
getvalue.select.else24:
  29395 = icmp sge i32 %k.phi219, i32 %n
  br bb %getvalue.select.exit25
getvalue.select.exit25:
  select26.phi398 = phi [bb %getvalue.select.else24, i1 %29395, bb %getvalue.select.then23, i1 1]
  br i1 %select26.phi398, bb %getvalue.then, bb %getvalue.if.exit
getvalue.then:
  br bb %while.body74.split
getvalue.if.exit:
  41406 = ptradd ptr %w, i32 %85
  41.load407 = load i32 from ptr %41406
  br bb %while.body74.split
getvalue.select.then414:
  br bb %getvalue.select.exit419
getvalue.select.else416:
  12417 = icmp sge i32 %i102.phi, i32 %n
  br bb %getvalue.select.exit419
getvalue.select.exit419:
  select.phi420 = phi [bb %getvalue.select.else416, i1 %12417, bb %getvalue.select.then414, i1 1]
  br i1 %select.phi420, bb %getvalue.select.then15422, bb %getvalue.select.else16424
getvalue.select.then15422:
  br bb %getvalue.select.exit17427
getvalue.select.else16424:
  20425 = icmp slt i32 %k.phi, i32 0
  br bb %getvalue.select.exit17427
getvalue.select.exit17427:
  select18.phi428 = phi [bb %getvalue.select.else16424, i1 %20425, bb %getvalue.select.then15422, i1 1]
  br i1 %select18.phi428, bb %getvalue.select.then23430, bb %getvalue.select.else24432
getvalue.select.then23430:
  br bb %getvalue.select.exit25435
getvalue.select.else24432:
  29433 = icmp sge i32 %k.phi, i32 %n
  br bb %getvalue.select.exit25435
getvalue.select.exit25435:
  select26.phi436 = phi [bb %getvalue.select.else24432, i1 %29433, bb %getvalue.select.then23430, i1 1]
  br i1 %select26.phi436, bb %getvalue.then438, bb %getvalue.if.exit440
getvalue.then438:
  br bb %while.body112.split
getvalue.if.exit440:
  37441 = mul i32 %i102.phi, i32 %n
  39442 = add i32 %37441, i32 %k.phi
  40443 = mul i32 %39442, i32 4
  41444 = ptradd ptr @temp, i32 %40443
  41.load445 = load i32 from ptr %41444
  br bb %while.body112.split
getvalue.select.then452:
  br bb %getvalue.select.exit457
getvalue.select.else454:
  12455 = icmp sge i32 %k.phi, i32 %n
  br bb %getvalue.select.exit457
getvalue.select.exit457:
  select.phi458 = phi [bb %getvalue.select.else454, i1 %12455, bb %getvalue.select.then452, i1 1]
  br i1 %select.phi458, bb %getvalue.select.then15460, bb %getvalue.select.else16462
getvalue.select.then15460:
  br bb %getvalue.select.exit17465
getvalue.select.else16462:
  20463 = icmp slt i32 %j.phi, i32 0
  br bb %getvalue.select.exit17465
getvalue.select.exit17465:
  select18.phi466 = phi [bb %getvalue.select.else16462, i1 %20463, bb %getvalue.select.then15460, i1 1]
  br i1 %select18.phi466, bb %getvalue.select.then23468, bb %getvalue.select.else24470
getvalue.select.then23468:
  br bb %getvalue.select.exit25473
getvalue.select.else24470:
  29471 = icmp sge i32 %j.phi, i32 %n
  br bb %getvalue.select.exit25473
getvalue.select.exit25473:
  select26.phi474 = phi [bb %getvalue.select.else24470, i1 %29471, bb %getvalue.select.then23468, i1 1]
  br i1 %select26.phi474, bb %getvalue.then476, bb %getvalue.if.exit478
getvalue.then476:
  br bb %select.then123.split
getvalue.if.exit478:
  37479 = mul i32 %k.phi, i32 %n
  39480 = add i32 %37479, i32 %j.phi
  40481 = mul i32 %39480, i32 4
  41482 = ptradd ptr @temp, i32 %40481
  41.load483 = load i32 from ptr %41482
  br bb %select.then123.split
getvalue.select.then490:
  br bb %getvalue.select.exit495
getvalue.select.else492:
  12493 = icmp sge i32 %i102.phi, i32 %n
  br bb %getvalue.select.exit495
getvalue.select.exit495:
  select.phi496 = phi [bb %getvalue.select.else492, i1 %12493, bb %getvalue.select.then490, i1 1]
  br i1 %select.phi496, bb %getvalue.select.then15498, bb %getvalue.select.else16500
getvalue.select.then15498:
  br bb %getvalue.select.exit17503
getvalue.select.else16500:
  20501 = icmp slt i32 %j.phi, i32 0
  br bb %getvalue.select.exit17503
getvalue.select.exit17503:
  select18.phi504 = phi [bb %getvalue.select.else16500, i1 %20501, bb %getvalue.select.then15498, i1 1]
  br i1 %select18.phi504, bb %getvalue.select.then23506, bb %getvalue.select.else24508
getvalue.select.then23506:
  br bb %getvalue.select.exit25511
getvalue.select.else24508:
  29509 = icmp sge i32 %j.phi, i32 %n
  br bb %getvalue.select.exit25511
getvalue.select.exit25511:
  select26.phi512 = phi [bb %getvalue.select.else24508, i1 %29509, bb %getvalue.select.then23506, i1 1]
  br i1 %select26.phi512, bb %getvalue.then514, bb %getvalue.if.exit516
getvalue.then514:
  br bb %then133.split
getvalue.if.exit516:
  37517 = mul i32 %i102.phi, i32 %n
  39518 = add i32 %37517, i32 %j.phi
  40519 = mul i32 %39518, i32 4
  41520 = ptradd ptr @temp, i32 %40519
  41.load521 = load i32 from ptr %41520
  br bb %then133.split
getvalue.select.then528:
  br bb %getvalue.select.exit533
getvalue.select.else530:
  12531 = icmp sge i32 %k.phi, i32 %n
  br bb %getvalue.select.exit533
getvalue.select.exit533:
  select.phi534 = phi [bb %getvalue.select.else530, i1 %12531, bb %getvalue.select.then528, i1 1]
  br i1 %select.phi534, bb %getvalue.select.then15536, bb %getvalue.select.else16538
getvalue.select.then15536:
  br bb %getvalue.select.exit17541
getvalue.select.else16538:
  20539 = icmp slt i32 %j.phi, i32 0
  br bb %getvalue.select.exit17541
getvalue.select.exit17541:
  select18.phi542 = phi [bb %getvalue.select.else16538, i1 %20539, bb %getvalue.select.then15536, i1 1]
  br i1 %select18.phi542, bb %getvalue.select.then23544, bb %getvalue.select.else24546
getvalue.select.then23544:
  br bb %getvalue.select.exit25549
getvalue.select.else24546:
  29547 = icmp sge i32 %j.phi, i32 %n
  br bb %getvalue.select.exit25549
getvalue.select.exit25549:
  select26.phi550 = phi [bb %getvalue.select.else24546, i1 %29547, bb %getvalue.select.then23544, i1 1]
  br i1 %select26.phi550, bb %getvalue.then552, bb %getvalue.if.exit554
getvalue.then552:
  br bb %then140.split
getvalue.if.exit554:
  37555 = mul i32 %k.phi, i32 %n
  39556 = add i32 %37555, i32 %j.phi
  40557 = mul i32 %39556, i32 4
  41558 = ptradd ptr @temp, i32 %40557
  41.load559 = load i32 from ptr %41558
  br bb %then140.split
getvalue.select.then566:
  br bb %getvalue.select.exit571
getvalue.select.else568:
  12569 = icmp sge i32 %k.phi, i32 %n
  br bb %getvalue.select.exit571
getvalue.select.exit571:
  select.phi572 = phi [bb %getvalue.select.else568, i1 %12569, bb %getvalue.select.then566, i1 1]
  br i1 %select.phi572, bb %getvalue.select.then15574, bb %getvalue.select.else16576
getvalue.select.then15574:
  br bb %getvalue.select.exit17579
getvalue.select.else16576:
  20577 = icmp slt i32 %j.phi, i32 0
  br bb %getvalue.select.exit17579
getvalue.select.exit17579:
  select18.phi580 = phi [bb %getvalue.select.else16576, i1 %20577, bb %getvalue.select.then15574, i1 1]
  br i1 %select18.phi580, bb %getvalue.select.then23582, bb %getvalue.select.else24584
getvalue.select.then23582:
  br bb %getvalue.select.exit25587
getvalue.select.else24584:
  29585 = icmp sge i32 %j.phi, i32 %n
  br bb %getvalue.select.exit25587
getvalue.select.exit25587:
  select26.phi588 = phi [bb %getvalue.select.else24584, i1 %29585, bb %getvalue.select.then23582, i1 1]
  br i1 %select26.phi588, bb %getvalue.then590, bb %getvalue.if.exit592
getvalue.then590:
  br bb %else.split
getvalue.if.exit592:
  37593 = mul i32 %k.phi, i32 %n
  39594 = add i32 %37593, i32 %j.phi
  40595 = mul i32 %39594, i32 4
  41596 = ptradd ptr @temp, i32 %40595
  41.load597 = load i32 from ptr %41596
  br bb %else.split
}

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry205:
  207 = call i32 getint()
  208 = call i32 getarray(ptr @w)
  call void _sysy_starttime(i32 62)
  br bb %floyd.entry62
floyd.entry62:
  br bb %floyd.while.cond65
floyd.while.cond65:
  k.phi219255 = phi [bb %floyd.entry62, i32 0, bb %floyd.while.exit75, i32 %94276]
  70256 = icmp slt i32 %k.phi219255, i32 %207
  br i1 %70256, bb %floyd.while.body66, bb %floyd.while.exit67
floyd.while.body66:
  br bb %floyd.while.cond73
floyd.while.exit67:
  br bb %floyd.while.cond95
floyd.while.cond73:
  i72.phi263 = phi [bb %floyd.while.body66, i32 0, bb %floyd.while.body74.split, i32 %92273]
  78264 = icmp slt i32 %i72.phi263, i32 %207
  br i1 %78264, bb %floyd.while.body74, bb %floyd.while.exit75
floyd.while.body74:
  82267 = mul i32 %i72.phi263, i32 %207
  84268 = add i32 %82267, i32 %k.phi219255
  85269 = mul i32 %84268, i32 4
  86270 = ptradd ptr @temp, i32 %85269
  5602 = icmp slt i32 %i72.phi263, i32 0
  br i1 %5602, bb %getvalue.select.then604, bb %getvalue.select.else606
floyd.while.body74.split:
  90271.ret = phi [bb %getvalue.then628, i32 -1, bb %getvalue.if.exit630, i32 %41.load635]
  store i32 %90271.ret to ptr %86270
  92273 = add i32 %i72.phi263, i32 1
  br bb %floyd.while.cond73
floyd.while.exit75:
  94276 = add i32 %k.phi219255, i32 1
  br bb %floyd.while.cond65
floyd.while.cond95:
  select126.phi230279 = phi [bb %floyd.while.exit67, i1 ub, bb %floyd.while.exit105, i1 %select126.phi229292]
  j.phi224280 = phi [bb %floyd.while.exit67, i32 ub, bb %floyd.while.exit105, i32 %j.phi223294]
  k.phi281 = phi [bb %floyd.while.exit67, i32 0, bb %floyd.while.exit105, i32 %200300]
  100282 = icmp slt i32 %k.phi281, i32 %207
  br i1 %100282, bb %floyd.while.body96, bb %floyd.while.exit97
floyd.while.body96:
  br bb %floyd.while.cond103
floyd.while.exit97:
  203287 = mul i32 %207, i32 %207
  br bb %floyd.mem_move.entry43
floyd.while.cond103:
  select126.phi229292 = phi [bb %floyd.while.body96, i1 %select126.phi230279, bb %floyd.while.exit113, i1 %select126.phi228303]
  i102.phi293 = phi [bb %floyd.while.body96, i32 0, bb %floyd.while.exit113, i32 %198312]
  j.phi223294 = phi [bb %floyd.while.body96, i32 %j.phi224280, bb %floyd.while.exit113, i32 %j.phi304]
  108295 = icmp slt i32 %i102.phi293, i32 %207
  br i1 %108295, bb %floyd.while.body104, bb %floyd.while.exit105
floyd.while.body104:
  br bb %floyd.while.cond111
floyd.while.exit105:
  200300 = add i32 %k.phi281, i32 1
  br bb %floyd.while.cond95
floyd.while.cond111:
  select126.phi228303 = phi [bb %floyd.while.body104, i1 %select126.phi229292, bb %floyd.if.exit134, i1 %select126.phi321]
  j.phi304 = phi [bb %floyd.while.body104, i32 0, bb %floyd.if.exit134, i32 %196328]
  116305 = icmp slt i32 %j.phi304, i32 %207
  br i1 %116305, bb %floyd.while.body112, bb %floyd.while.exit113
floyd.while.body112:
  5640 = icmp slt i32 %i102.phi293, i32 0
  br i1 %5640, bb %getvalue.select.then642, bb %getvalue.select.else644
floyd.while.body112.split:
  121308.ret = phi [bb %getvalue.then666, i32 -1, bb %getvalue.if.exit668, i32 %41.load673]
  122309 = icmp sge i32 %121308.ret, i32 0
  br i1 %122309, bb %floyd.select.then123, bb %floyd.select.else124
floyd.while.exit113:
  198312 = add i32 %i102.phi293, i32 1
  br bb %floyd.while.cond103
floyd.select.then123:
  5678 = icmp slt i32 %k.phi281, i32 0
  br i1 %5678, bb %getvalue.select.then680, bb %getvalue.select.else682
floyd.select.then123.split:
  130315.ret = phi [bb %getvalue.then704, i32 -1, bb %getvalue.if.exit706, i32 %41.load711]
  131316 = icmp sge i32 %130315.ret, i32 0
  br bb %floyd.select.exit125
floyd.select.else124:
  br bb %floyd.select.exit125
floyd.select.exit125:
  select126.phi321 = phi [bb %floyd.select.else124, i1 0, bb %floyd.select.then123.split, i1 %131316]
  br i1 %select126.phi321, bb %floyd.then133, bb %floyd.if.exit134
floyd.then133:
  br i1 %5640, bb %getvalue.select.then718, bb %getvalue.select.else720
floyd.then133.split:
  138324.ret = phi [bb %getvalue.then742, i32 -1, bb %getvalue.if.exit744, i32 %41.load749]
  139325 = icmp slt i32 %138324.ret, i32 0
  br i1 %139325, bb %floyd.then140, bb %floyd.else
floyd.if.exit134:
  196328 = add i32 %j.phi304, i32 1
  br bb %floyd.while.cond111
floyd.then140:
  145331 = mul i32 %i102.phi293, i32 %207
  147332 = add i32 %145331, i32 %j.phi304
  148333 = mul i32 %147332, i32 4
  149334 = ptradd ptr @temp, i32 %148333
  5754 = icmp slt i32 %k.phi281, i32 0
  br i1 %5754, bb %getvalue.select.then756, bb %getvalue.select.else758
floyd.then140.split:
  157335.ret = phi [bb %getvalue.then780, i32 -1, bb %getvalue.if.exit782, i32 %41.load787]
  158336 = add i32 %121308.ret, i32 %157335.ret
  store i32 %158336 to ptr %149334
  br bb %floyd.if.exit141
floyd.if.exit141:
  br bb %floyd.if.exit134
floyd.else:
  161342 = mul i32 %i102.phi293, i32 %207
  163343 = add i32 %161342, i32 %j.phi304
  164344 = mul i32 %163343, i32 4
  165345 = ptradd ptr @temp, i32 %164344
  165.load346 = load i32 from ptr %165345
  5792 = icmp slt i32 %k.phi281, i32 0
  br i1 %5792, bb %getvalue.select.then794, bb %getvalue.select.else796
floyd.else.split:
  174347.ret = phi [bb %getvalue.then818, i32 -1, bb %getvalue.if.exit820, i32 %41.load825]
  175348 = add i32 %121308.ret, i32 %174347.ret
  176349 = icmp sgt i32 %165.load346, i32 %175348
  br i1 %176349, bb %floyd.then177, bb %floyd.if.exit178
floyd.then177:
  store i32 %175348 to ptr %165345
  br bb %floyd.if.exit178
floyd.if.exit178:
  br bb %floyd.if.exit141
floyd.mem_move.entry43:
  br bb %floyd.mem_move.while.cond
floyd.mem_move.while.cond:
  i.phi238359 = phi [bb %floyd.mem_move.entry43, i32 0, bb %floyd.mem_move.while.body, i32 %61247368]
  51239360 = icmp slt i32 %i.phi238359, i32 %203287
  br i1 %51239360, bb %floyd.mem_move.while.body, bb %floyd.mem_move.while.exit
floyd.mem_move.while.body:
  54242363 = mul i32 %i.phi238359, i32 4
  55243364 = ptradd ptr @dst, i32 %54242363
  58244365 = ptradd ptr @temp, i32 %54242363
  58.load245366 = load i32 from ptr %58244365
  store i32 %58.load245366 to ptr %55243364
  61247368 = add i32 %i.phi238359, i32 1
  br bb %floyd.mem_move.while.cond
floyd.mem_move.while.exit:
  call void _sysy_stoptime(i32 64)
  call void putarray(i32 %203287, ptr @dst)
  ret i32 0
getvalue.select.then604:
  br bb %getvalue.select.exit609
getvalue.select.else606:
  12607 = icmp sge i32 %i72.phi263, i32 %207
  br bb %getvalue.select.exit609
getvalue.select.exit609:
  select.phi610 = phi [bb %getvalue.select.else606, i1 %12607, bb %getvalue.select.then604, i1 1]
  br i1 %select.phi610, bb %getvalue.select.then15612, bb %getvalue.select.else16614
getvalue.select.then15612:
  br bb %getvalue.select.exit17617
getvalue.select.else16614:
  20615 = icmp slt i32 %k.phi219255, i32 0
  br bb %getvalue.select.exit17617
getvalue.select.exit17617:
  select18.phi618 = phi [bb %getvalue.select.else16614, i1 %20615, bb %getvalue.select.then15612, i1 1]
  br i1 %select18.phi618, bb %getvalue.select.then23620, bb %getvalue.select.else24622
getvalue.select.then23620:
  br bb %getvalue.select.exit25625
getvalue.select.else24622:
  29623 = icmp sge i32 %k.phi219255, i32 %207
  br bb %getvalue.select.exit25625
getvalue.select.exit25625:
  select26.phi626 = phi [bb %getvalue.select.else24622, i1 %29623, bb %getvalue.select.then23620, i1 1]
  br i1 %select26.phi626, bb %getvalue.then628, bb %getvalue.if.exit630
getvalue.then628:
  br bb %floyd.while.body74.split
getvalue.if.exit630:
  41634 = ptradd ptr @w, i32 %85269
  41.load635 = load i32 from ptr %41634
  br bb %floyd.while.body74.split
getvalue.select.then642:
  br bb %getvalue.select.exit647
getvalue.select.else644:
  12645 = icmp sge i32 %i102.phi293, i32 %207
  br bb %getvalue.select.exit647
getvalue.select.exit647:
  select.phi648 = phi [bb %getvalue.select.else644, i1 %12645, bb %getvalue.select.then642, i1 1]
  br i1 %select.phi648, bb %getvalue.select.then15650, bb %getvalue.select.else16652
getvalue.select.then15650:
  br bb %getvalue.select.exit17655
getvalue.select.else16652:
  20653 = icmp slt i32 %k.phi281, i32 0
  br bb %getvalue.select.exit17655
getvalue.select.exit17655:
  select18.phi656 = phi [bb %getvalue.select.else16652, i1 %20653, bb %getvalue.select.then15650, i1 1]
  br i1 %select18.phi656, bb %getvalue.select.then23658, bb %getvalue.select.else24660
getvalue.select.then23658:
  br bb %getvalue.select.exit25663
getvalue.select.else24660:
  29661 = icmp sge i32 %k.phi281, i32 %207
  br bb %getvalue.select.exit25663
getvalue.select.exit25663:
  select26.phi664 = phi [bb %getvalue.select.else24660, i1 %29661, bb %getvalue.select.then23658, i1 1]
  br i1 %select26.phi664, bb %getvalue.then666, bb %getvalue.if.exit668
getvalue.then666:
  br bb %floyd.while.body112.split
getvalue.if.exit668:
  37669 = mul i32 %i102.phi293, i32 %207
  39670 = add i32 %37669, i32 %k.phi281
  40671 = mul i32 %39670, i32 4
  41672 = ptradd ptr @temp, i32 %40671
  41.load673 = load i32 from ptr %41672
  br bb %floyd.while.body112.split
getvalue.select.then680:
  br bb %getvalue.select.exit685
getvalue.select.else682:
  12683 = icmp sge i32 %k.phi281, i32 %207
  br bb %getvalue.select.exit685
getvalue.select.exit685:
  select.phi686 = phi [bb %getvalue.select.else682, i1 %12683, bb %getvalue.select.then680, i1 1]
  br i1 %select.phi686, bb %getvalue.select.then15688, bb %getvalue.select.else16690
getvalue.select.then15688:
  br bb %getvalue.select.exit17693
getvalue.select.else16690:
  20691 = icmp slt i32 %j.phi304, i32 0
  br bb %getvalue.select.exit17693
getvalue.select.exit17693:
  select18.phi694 = phi [bb %getvalue.select.else16690, i1 %20691, bb %getvalue.select.then15688, i1 1]
  br i1 %select18.phi694, bb %getvalue.select.then23696, bb %getvalue.select.else24698
getvalue.select.then23696:
  br bb %getvalue.select.exit25701
getvalue.select.else24698:
  29699 = icmp sge i32 %j.phi304, i32 %207
  br bb %getvalue.select.exit25701
getvalue.select.exit25701:
  select26.phi702 = phi [bb %getvalue.select.else24698, i1 %29699, bb %getvalue.select.then23696, i1 1]
  br i1 %select26.phi702, bb %getvalue.then704, bb %getvalue.if.exit706
getvalue.then704:
  br bb %floyd.select.then123.split
getvalue.if.exit706:
  37707 = mul i32 %k.phi281, i32 %207
  39708 = add i32 %37707, i32 %j.phi304
  40709 = mul i32 %39708, i32 4
  41710 = ptradd ptr @temp, i32 %40709
  41.load711 = load i32 from ptr %41710
  br bb %floyd.select.then123.split
getvalue.select.then718:
  br bb %getvalue.select.exit723
getvalue.select.else720:
  12721 = icmp sge i32 %i102.phi293, i32 %207
  br bb %getvalue.select.exit723
getvalue.select.exit723:
  select.phi724 = phi [bb %getvalue.select.else720, i1 %12721, bb %getvalue.select.then718, i1 1]
  br i1 %select.phi724, bb %getvalue.select.then15726, bb %getvalue.select.else16728
getvalue.select.then15726:
  br bb %getvalue.select.exit17731
getvalue.select.else16728:
  20729 = icmp slt i32 %j.phi304, i32 0
  br bb %getvalue.select.exit17731
getvalue.select.exit17731:
  select18.phi732 = phi [bb %getvalue.select.else16728, i1 %20729, bb %getvalue.select.then15726, i1 1]
  br i1 %select18.phi732, bb %getvalue.select.then23734, bb %getvalue.select.else24736
getvalue.select.then23734:
  br bb %getvalue.select.exit25739
getvalue.select.else24736:
  29737 = icmp sge i32 %j.phi304, i32 %207
  br bb %getvalue.select.exit25739
getvalue.select.exit25739:
  select26.phi740 = phi [bb %getvalue.select.else24736, i1 %29737, bb %getvalue.select.then23734, i1 1]
  br i1 %select26.phi740, bb %getvalue.then742, bb %getvalue.if.exit744
getvalue.then742:
  br bb %floyd.then133.split
getvalue.if.exit744:
  37745 = mul i32 %i102.phi293, i32 %207
  39746 = add i32 %37745, i32 %j.phi304
  40747 = mul i32 %39746, i32 4
  41748 = ptradd ptr @temp, i32 %40747
  41.load749 = load i32 from ptr %41748
  br bb %floyd.then133.split
getvalue.select.then756:
  br bb %getvalue.select.exit761
getvalue.select.else758:
  12759 = icmp sge i32 %k.phi281, i32 %207
  br bb %getvalue.select.exit761
getvalue.select.exit761:
  select.phi762 = phi [bb %getvalue.select.else758, i1 %12759, bb %getvalue.select.then756, i1 1]
  br i1 %select.phi762, bb %getvalue.select.then15764, bb %getvalue.select.else16766
getvalue.select.then15764:
  br bb %getvalue.select.exit17769
getvalue.select.else16766:
  20767 = icmp slt i32 %j.phi304, i32 0
  br bb %getvalue.select.exit17769
getvalue.select.exit17769:
  select18.phi770 = phi [bb %getvalue.select.else16766, i1 %20767, bb %getvalue.select.then15764, i1 1]
  br i1 %select18.phi770, bb %getvalue.select.then23772, bb %getvalue.select.else24774
getvalue.select.then23772:
  br bb %getvalue.select.exit25777
getvalue.select.else24774:
  29775 = icmp sge i32 %j.phi304, i32 %207
  br bb %getvalue.select.exit25777
getvalue.select.exit25777:
  select26.phi778 = phi [bb %getvalue.select.else24774, i1 %29775, bb %getvalue.select.then23772, i1 1]
  br i1 %select26.phi778, bb %getvalue.then780, bb %getvalue.if.exit782
getvalue.then780:
  br bb %floyd.then140.split
getvalue.if.exit782:
  37783 = mul i32 %k.phi281, i32 %207
  39784 = add i32 %37783, i32 %j.phi304
  40785 = mul i32 %39784, i32 4
  41786 = ptradd ptr @temp, i32 %40785
  41.load787 = load i32 from ptr %41786
  br bb %floyd.then140.split
getvalue.select.then794:
  br bb %getvalue.select.exit799
getvalue.select.else796:
  12797 = icmp sge i32 %k.phi281, i32 %207
  br bb %getvalue.select.exit799
getvalue.select.exit799:
  select.phi800 = phi [bb %getvalue.select.else796, i1 %12797, bb %getvalue.select.then794, i1 1]
  br i1 %select.phi800, bb %getvalue.select.then15802, bb %getvalue.select.else16804
getvalue.select.then15802:
  br bb %getvalue.select.exit17807
getvalue.select.else16804:
  20805 = icmp slt i32 %j.phi304, i32 0
  br bb %getvalue.select.exit17807
getvalue.select.exit17807:
  select18.phi808 = phi [bb %getvalue.select.else16804, i1 %20805, bb %getvalue.select.then15802, i1 1]
  br i1 %select18.phi808, bb %getvalue.select.then23810, bb %getvalue.select.else24812
getvalue.select.then23810:
  br bb %getvalue.select.exit25815
getvalue.select.else24812:
  29813 = icmp sge i32 %j.phi304, i32 %207
  br bb %getvalue.select.exit25815
getvalue.select.exit25815:
  select26.phi816 = phi [bb %getvalue.select.else24812, i1 %29813, bb %getvalue.select.then23810, i1 1]
  br i1 %select26.phi816, bb %getvalue.then818, bb %getvalue.if.exit820
getvalue.then818:
  br bb %floyd.else.split
getvalue.if.exit820:
  37821 = mul i32 %k.phi281, i32 %207
  39822 = add i32 %37821, i32 %j.phi304
  40823 = mul i32 %39822, i32 4
  41824 = ptradd ptr @temp, i32 %40823
  41.load825 = load i32 from ptr %41824
  br bb %floyd.else.split
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

pure i32 getvalue(ptr a, i32 n, i32 i, i32 j) {
entry:
  5 = icmp slt i32 %i, i32 0
  br i1 %5, bb %select.then, bb %select.else
select.then:
  br bb %select.exit
select.else:
  12 = icmp sge i32 %i, i32 %n
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 %12, bb %select.then, i1 1]
  br i1 %select.phi, bb %select.then15, bb %select.else16
select.then15:
  br bb %select.exit17
select.else16:
  20 = icmp slt i32 %j, i32 0
  br bb %select.exit17
select.exit17:
  select18.phi = phi [bb %select.else16, i1 %20, bb %select.then15, i1 1]
  br i1 %select18.phi, bb %select.then23, bb %select.else24
select.then23:
  br bb %select.exit25
select.else24:
  29 = icmp sge i32 %j, i32 %n
  br bb %select.exit25
select.exit25:
  select26.phi = phi [bb %select.else24, i1 %29, bb %select.then23, i1 1]
  br i1 %select26.phi, bb %then, bb %if.exit
then:
  ret i32 -1
if.exit:
  37 = mul i32 %i, i32 %n
  39 = add i32 %37, i32 %j
  40 = mul i32 %39, i32 4
  41 = ptradd ptr %a, i32 %40
  41.load = load i32 from ptr %41
  ret i32 %41.load
}


