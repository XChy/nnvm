global ptr buf init with 200 x i32 zeros
external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry149:
  153 = call i32 getarray(ptr @buf)
  call void merge_sort(i32 0, i32 %153)
  call void putarray(i32 %153, ptr @buf)
  ret i32 0
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

void merge_sort(i32 l, i32 r) {
entry:
  4 = add i32 %l, i32 1
  6 = icmp sge i32 %4, i32 %r
  br i1 %6, bb %then, bb %if.exit
then:
  ret 
if.exit:
  12 = add i32 %l, i32 %r
  13 = sdiv i32 %12, i32 2
  call void merge_sort(i32 %l, i32 %13)
  call void merge_sort(i32 %13, i32 %r)
  58 = ptradd ptr @buf, i32 400
  71 = ptradd ptr @buf, i32 400
  br bb %while.cond
while.cond:
  k.phi169 = phi [bb %if.exit, i32 %l, bb %if.exit55, i32 %84]
  j.phi166 = phi [bb %if.exit, i32 %13, bb %if.exit55, i32 %j.phi165]
  i.phi163 = phi [bb %if.exit, i32 %l, bb %if.exit55, i32 %i.phi162]
  31 = icmp slt i32 %i.phi163, i32 %13
  br i1 %31, bb %select.then, bb %select.else
while.body:
  172 = shl i32 %i.phi163, i32 2
  45 = ptradd ptr @buf, i32 %172
  45.load = load i32 from ptr %45
  173 = shl i32 %j.phi166, i32 2
  51 = ptradd ptr @buf, i32 %173
  51.load = load i32 from ptr %51
  53 = icmp slt i32 %45.load, i32 %51.load
  br i1 %53, bb %then54, bb %else
while.exit:
  93 = ptradd ptr @buf, i32 400
  br bb %while.cond85
select.then:
  38 = icmp slt i32 %j.phi166, i32 %r
  br bb %select.exit
select.else:
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 0, bb %select.then, i1 %38]
  br i1 %select.phi, bb %while.body, bb %while.exit
then54:
  174 = shl i32 %k.phi169, i32 2
  61 = ptradd ptr %58, i32 %174
  66.load = load i32 from ptr %45
  store i32 %66.load to ptr %61
  69 = add i32 %i.phi163, i32 1
  br bb %if.exit55
if.exit55:
  j.phi165 = phi [bb %else, i32 %82, bb %then54, i32 %j.phi166]
  i.phi162 = phi [bb %else, i32 %i.phi163, bb %then54, i32 %69]
  84 = add i32 %k.phi169, i32 1
  br bb %while.cond
else:
  176 = shl i32 %k.phi169, i32 2
  74 = ptradd ptr %71, i32 %176
  79.load = load i32 from ptr %51
  store i32 %79.load to ptr %74
  82 = add i32 %j.phi166, i32 1
  br bb %if.exit55
while.cond85:
  k.phi168 = phi [bb %while.exit, i32 %k.phi169, bb %while.body86, i32 %106]
  i.phi = phi [bb %while.exit, i32 %i.phi163, bb %while.body86, i32 %104]
  90 = icmp slt i32 %i.phi, i32 %13
  br i1 %90, bb %while.body86, bb %while.exit87
while.body86:
  178 = shl i32 %k.phi168, i32 2
  96 = ptradd ptr %93, i32 %178
  179 = shl i32 %i.phi, i32 2
  101 = ptradd ptr @buf, i32 %179
  101.load = load i32 from ptr %101
  store i32 %101.load to ptr %96
  104 = add i32 %i.phi, i32 1
  106 = add i32 %k.phi168, i32 1
  br bb %while.cond85
while.exit87:
  115 = ptradd ptr @buf, i32 400
  br bb %while.cond107
while.cond107:
  k.phi = phi [bb %while.exit87, i32 %k.phi168, bb %while.body108, i32 %128]
  j.phi = phi [bb %while.exit87, i32 %j.phi166, bb %while.body108, i32 %126]
  112 = icmp slt i32 %j.phi, i32 %r
  br i1 %112, bb %while.body108, bb %while.exit109
while.body108:
  180 = shl i32 %k.phi, i32 2
  118 = ptradd ptr %115, i32 %180
  181 = shl i32 %j.phi, i32 2
  123 = ptradd ptr @buf, i32 %181
  123.load = load i32 from ptr %123
  store i32 %123.load to ptr %118
  126 = add i32 %j.phi, i32 1
  128 = add i32 %k.phi, i32 1
  br bb %while.cond107
while.exit109:
  142 = ptradd ptr @buf, i32 400
  br bb %while.cond129
while.cond129:
  l.stack.phi = phi [bb %while.exit109, i32 %l, bb %while.body130, i32 %148]
  134 = icmp slt i32 %l.stack.phi, i32 %r
  br i1 %134, bb %while.body130, bb %while.exit131
while.body130:
  182 = shl i32 %l.stack.phi, i32 2
  140 = ptradd ptr @buf, i32 %182
  145 = ptradd ptr %142, i32 %182
  145.load = load i32 from ptr %145
  store i32 %145.load to ptr %140
  148 = add i32 %l.stack.phi, i32 1
  br bb %while.cond129
while.exit131:
  ret 
}


