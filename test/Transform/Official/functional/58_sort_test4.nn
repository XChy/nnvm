global ptr n init with i32 0
external i32 getint()

external i32 getch()

i32 select_sort(ptr A, i32 n) {
entry:
  br bb %while.cond
while.cond:
  tmp.phi110 = phi [bb %entry, i32 ub, bb %if.exit41, i32 %tmp.phi]
  i.phi = phi [bb %entry, i32 0, bb %if.exit41, i32 %15]
  10 = sub i32 %n, i32 1
  11 = icmp slt i32 %i.phi, i32 %10
  br i1 %11, bb %while.body, bb %while.exit
while.body:
  15 = add i32 %i.phi, i32 1
  br bb %while.cond16
while.exit:
  ret i32 0
while.cond16:
  min.phi107 = phi [bb %while.body, i32 %i.phi, bb %if.exit, i32 %min.phi]
  j.phi = phi [bb %while.body, i32 %15, bb %if.exit, i32 %36]
  21 = icmp slt i32 %j.phi, i32 %n
  br i1 %21, bb %while.body17, bb %while.exit18
while.body17:
  24 = mul i32 %min.phi107, i32 4
  25 = ptradd ptr %A, i32 %24
  25.load = load i32 from ptr %25
  28 = mul i32 %j.phi, i32 4
  29 = ptradd ptr %A, i32 %28
  29.load = load i32 from ptr %29
  31 = icmp sgt i32 %25.load, i32 %29.load
  br i1 %31, bb %then, bb %if.exit
while.exit18:
  39 = icmp ne i32 %min.phi107, i32 %i.phi
  br i1 %39, bb %then40, bb %if.exit41
then:
  br bb %if.exit
if.exit:
  min.phi = phi [bb %while.body17, i32 %min.phi107, bb %then, i32 %j.phi]
  36 = add i32 %j.phi, i32 1
  br bb %while.cond16
then40:
  44 = mul i32 %min.phi107, i32 4
  45 = ptradd ptr %A, i32 %44
  45.load = load i32 from ptr %45
  51 = mul i32 %i.phi, i32 4
  52 = ptradd ptr %A, i32 %51
  52.load = load i32 from ptr %52
  store i32 %52.load to ptr %45
  store i32 %45.load to ptr %52
  br bb %if.exit41
if.exit41:
  tmp.phi = phi [bb %while.exit18, i32 %tmp.phi110, bb %then40, i32 %45.load]
  br bb %while.cond
}

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry60:
  %a = stack 40
  store i32 10 to ptr @n
  63 = ptradd ptr %a, i32 0
  store i32 4 to ptr %63
  65 = ptradd ptr %a, i32 4
  store i32 3 to ptr %65
  67 = ptradd ptr %a, i32 8
  store i32 9 to ptr %67
  69 = ptradd ptr %a, i32 12
  store i32 2 to ptr %69
  71 = ptradd ptr %a, i32 16
  store i32 0 to ptr %71
  73 = ptradd ptr %a, i32 20
  store i32 1 to ptr %73
  75 = ptradd ptr %a, i32 24
  store i32 6 to ptr %75
  77 = ptradd ptr %a, i32 28
  store i32 5 to ptr %77
  79 = ptradd ptr %a, i32 32
  store i32 7 to ptr %79
  81 = ptradd ptr %a, i32 36
  store i32 8 to ptr %81
  n.load = load i32 from ptr @n
  84 = call i32 select_sort(ptr %a, i32 %n.load)
  br bb %while.cond85
while.cond85:
  i82.phi = phi [bb %entry60, i32 %84, bb %while.body86, i32 %102]
  n.load89 = load i32 from ptr @n
  90 = icmp slt i32 %i82.phi, i32 %n.load89
  br i1 %90, bb %while.body86, bb %while.exit87
while.body86:
  94 = mul i32 %i82.phi, i32 4
  95 = ptradd ptr %a, i32 %94
  95.load = load i32 from ptr %95
  call void putint(i32 %95.load)
  call void putch(i32 10)
  102 = add i32 %i82.phi, i32 1
  br bb %while.cond85
while.exit87:
  ret i32 0
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


