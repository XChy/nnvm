global ptr N init with i32 10000
external i32 getint()

external i32 getch()

i32 long_array(i32 k) {
entry:
  %j128 = stack 4
  %j = stack 4
  %ans = stack 4
  %i = stack 4
  %a3 = stack 40000
  %a2 = stack 40000
  %a1 = stack 40000
  %k.stack = stack 4
  store i32 %k to ptr %k.stack
  store i32 0 to ptr %i
  br bb %while.cond
while.cond:
  i.load = load i32 from ptr %i
  N.load = load i32 from ptr @N
  11 = icmp slt i32 %i.load, i32 %N.load
  12 = icmp ne i1 %11, i1 0
  br i1 %12, bb %while.body, bb %while.exit
while.body:
  i.load13 = load i32 from ptr %i
  14 = mul i32 %i.load13, i32 4
  15 = ptradd ptr %a1, i32 %14
  i.load16 = load i32 from ptr %i
  i.load17 = load i32 from ptr %i
  18 = mul i32 %i.load16, i32 %i.load17
  19 = srem i32 %18, i32 10
  store i32 %19 to ptr %15
  i.load20 = load i32 from ptr %i
  21 = add i32 %i.load20, i32 1
  store i32 %21 to ptr %i
  br bb %while.cond
while.exit:
  store i32 0 to ptr %i
  br bb %while.cond22
while.cond22:
  i.load25 = load i32 from ptr %i
  N.load26 = load i32 from ptr @N
  27 = icmp slt i32 %i.load25, i32 %N.load26
  28 = icmp ne i1 %27, i1 0
  br i1 %28, bb %while.body23, bb %while.exit24
while.body23:
  i.load29 = load i32 from ptr %i
  30 = mul i32 %i.load29, i32 4
  31 = ptradd ptr %a2, i32 %30
  i.load32 = load i32 from ptr %i
  33 = mul i32 %i.load32, i32 4
  34 = ptradd ptr %a1, i32 %33
  34.load = load i32 from ptr %34
  i.load36 = load i32 from ptr %i
  37 = mul i32 %i.load36, i32 4
  38 = ptradd ptr %a1, i32 %37
  38.load = load i32 from ptr %38
  40 = mul i32 %34.load, i32 %38.load
  41 = srem i32 %40, i32 10
  store i32 %41 to ptr %31
  i.load42 = load i32 from ptr %i
  43 = add i32 %i.load42, i32 1
  store i32 %43 to ptr %i
  br bb %while.cond22
while.exit24:
  store i32 0 to ptr %i
  br bb %while.cond44
while.cond44:
  i.load47 = load i32 from ptr %i
  N.load48 = load i32 from ptr @N
  49 = icmp slt i32 %i.load47, i32 %N.load48
  50 = icmp ne i1 %49, i1 0
  br i1 %50, bb %while.body45, bb %while.exit46
while.body45:
  i.load51 = load i32 from ptr %i
  52 = mul i32 %i.load51, i32 4
  53 = ptradd ptr %a3, i32 %52
  i.load54 = load i32 from ptr %i
  55 = mul i32 %i.load54, i32 4
  56 = ptradd ptr %a2, i32 %55
  56.load = load i32 from ptr %56
  i.load58 = load i32 from ptr %i
  59 = mul i32 %i.load58, i32 4
  60 = ptradd ptr %a2, i32 %59
  60.load = load i32 from ptr %60
  62 = mul i32 %56.load, i32 %60.load
  63 = srem i32 %62, i32 100
  i.load64 = load i32 from ptr %i
  65 = mul i32 %i.load64, i32 4
  66 = ptradd ptr %a1, i32 %65
  66.load = load i32 from ptr %66
  68 = add i32 %63, i32 %66.load
  store i32 %68 to ptr %53
  i.load69 = load i32 from ptr %i
  70 = add i32 %i.load69, i32 1
  store i32 %70 to ptr %i
  br bb %while.cond44
while.exit46:
  store i32 0 to ptr %ans
  store i32 0 to ptr %i
  br bb %while.cond72
while.cond72:
  i.load75 = load i32 from ptr %i
  N.load76 = load i32 from ptr @N
  77 = icmp slt i32 %i.load75, i32 %N.load76
  78 = icmp ne i1 %77, i1 0
  br i1 %78, bb %while.body73, bb %while.exit74
while.body73:
  i.load79 = load i32 from ptr %i
  80 = icmp slt i32 %i.load79, i32 10
  br i1 %80, bb %then, bb %else
while.exit74:
  ans.load183 = load i32 from ptr %ans
  ret i32 %ans.load183
then:
  ans.load = load i32 from ptr %ans
  i.load85 = load i32 from ptr %i
  86 = mul i32 %i.load85, i32 4
  87 = ptradd ptr %a3, i32 %86
  87.load = load i32 from ptr %87
  89 = add i32 %ans.load, i32 %87.load
  90 = srem i32 %89, i32 1333
  store i32 %90 to ptr %ans
  call void putint(i32 %90)
  br bb %if.exit
if.exit:
  i.load181 = load i32 from ptr %i
  182 = add i32 %i.load181, i32 1
  store i32 %182 to ptr %i
  br bb %while.cond72
else:
  i.load93 = load i32 from ptr %i
  94 = icmp slt i32 %i.load93, i32 20
  br i1 %94, bb %then95, bb %else97
then95:
  N.load99 = load i32 from ptr @N
  100 = sdiv i32 %N.load99, i32 2
  store i32 %100 to ptr %j
  br bb %while.cond101
if.exit96:
  br bb %if.exit
else97:
  i.load123 = load i32 from ptr %i
  124 = icmp slt i32 %i.load123, i32 30
  br i1 %124, bb %then125, bb %else127
while.cond101:
  j.load = load i32 from ptr %j
  N.load105 = load i32 from ptr @N
  106 = icmp slt i32 %j.load, i32 %N.load105
  107 = icmp ne i1 %106, i1 0
  br i1 %107, bb %while.body102, bb %while.exit103
while.body102:
  ans.load108 = load i32 from ptr %ans
  i.load109 = load i32 from ptr %i
  110 = mul i32 %i.load109, i32 4
  111 = ptradd ptr %a3, i32 %110
  111.load = load i32 from ptr %111
  113 = add i32 %ans.load108, i32 %111.load
  j.load114 = load i32 from ptr %j
  115 = mul i32 %j.load114, i32 4
  116 = ptradd ptr %a1, i32 %115
  116.load = load i32 from ptr %116
  118 = sub i32 %113, i32 %116.load
  store i32 %118 to ptr %ans
  j.load119 = load i32 from ptr %j
  120 = add i32 %j.load119, i32 1
  store i32 %120 to ptr %j
  br bb %while.cond101
while.exit103:
  ans.load121 = load i32 from ptr %ans
  call void putint(i32 %ans.load121)
  br bb %if.exit96
then125:
  N.load129 = load i32 from ptr @N
  130 = sdiv i32 %N.load129, i32 2
  store i32 %130 to ptr %j128
  br bb %while.cond131
if.exit126:
  br bb %if.exit96
else127:
  ans.load172 = load i32 from ptr %ans
  i.load173 = load i32 from ptr %i
  174 = mul i32 %i.load173, i32 4
  175 = ptradd ptr %a3, i32 %174
  175.load = load i32 from ptr %175
  k.stack.load = load i32 from ptr %k.stack
  178 = mul i32 %175.load, i32 %k.stack.load
  179 = add i32 %ans.load172, i32 %178
  180 = srem i32 %179, i32 99988
  store i32 %180 to ptr %ans
  br bb %if.exit126
while.cond131:
  j128.load = load i32 from ptr %j128
  N.load135 = load i32 from ptr @N
  136 = icmp slt i32 %j128.load, i32 %N.load135
  137 = icmp ne i1 %136, i1 0
  br i1 %137, bb %while.body132, bb %while.exit133
while.body132:
  j128.load138 = load i32 from ptr %j128
  139 = icmp sgt i32 %j128.load138, i32 2233
  br i1 %139, bb %then140, bb %else142
while.exit133:
  ans.load170 = load i32 from ptr %ans
  call void putint(i32 %ans.load170)
  br bb %if.exit126
then140:
  ans.load143 = load i32 from ptr %ans
  i.load144 = load i32 from ptr %i
  145 = mul i32 %i.load144, i32 4
  146 = ptradd ptr %a2, i32 %145
  146.load = load i32 from ptr %146
  148 = add i32 %ans.load143, i32 %146.load
  j128.load149 = load i32 from ptr %j128
  150 = mul i32 %j128.load149, i32 4
  151 = ptradd ptr %a1, i32 %150
  151.load = load i32 from ptr %151
  153 = sub i32 %148, i32 %151.load
  store i32 %153 to ptr %ans
  j128.load154 = load i32 from ptr %j128
  155 = add i32 %j128.load154, i32 1
  store i32 %155 to ptr %j128
  br bb %if.exit141
if.exit141:
  br bb %while.cond131
else142:
  ans.load156 = load i32 from ptr %ans
  i.load157 = load i32 from ptr %i
  158 = mul i32 %i.load157, i32 4
  159 = ptradd ptr %a1, i32 %158
  159.load = load i32 from ptr %159
  161 = add i32 %ans.load156, i32 %159.load
  j128.load162 = load i32 from ptr %j128
  163 = mul i32 %j128.load162, i32 4
  164 = ptradd ptr %a3, i32 %163
  164.load = load i32 from ptr %164
  166 = add i32 %161, i32 %164.load
  167 = srem i32 %166, i32 13333
  store i32 %167 to ptr %ans
  j128.load168 = load i32 from ptr %j128
  169 = add i32 %j128.load168, i32 2
  store i32 %169 to ptr %j128
  br bb %if.exit141
}

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry184:
  185 = call i32 long_array(i32 9)
  ret i32 %185
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


