immutable global ptr ascii_0 init with i32 48
external i32 getint()

external i32 getch()

void my_putint(i32 a) {
entry48:
  %b = stack 64
  br bb %while.cond52
while.cond52:
  i.phi100 = phi [bb %entry48, i32 0, bb %while.body53, i32 %68]
  a.stack.phi = phi [bb %entry48, i32 %a, bb %while.body53, i32 %66]
  56 = icmp sgt i32 %a.stack.phi, i32 0
  br i1 %56, bb %while.body53, bb %while.exit54
while.body53:
  59 = mul i32 %i.phi100, i32 4
  60 = ptradd ptr %b, i32 %59
  62 = srem i32 %a.stack.phi, i32 10
  64 = add i32 %62, i32 48
  store i32 %64 to ptr %60
  66 = sdiv i32 %a.stack.phi, i32 10
  68 = add i32 %i.phi100, i32 1
  br bb %while.cond52
while.exit54:
  br bb %while.cond69
while.cond69:
  i.phi = phi [bb %while.exit54, i32 %i.phi100, bb %while.body70, i32 %76]
  73 = icmp sgt i32 %i.phi, i32 0
  br i1 %73, bb %while.body70, bb %while.exit71
while.body70:
  76 = sub i32 %i.phi, i32 1
  78 = mul i32 %76, i32 4
  79 = ptradd ptr %b, i32 %78
  79.load = load i32 from ptr %79
  call void putch(i32 %79.load)
  br bb %while.cond69
while.exit71:
  ret 
}

external void putint(i32 )

i32 my_getint() {
entry:
  br bb %while.cond
while.cond:
  7 = call i32 getch()
  9 = sub i32 %7, i32 48
  11 = icmp slt i32 %9, i32 0
  br i1 %11, bb %select.then, bb %select.else
while.exit:
  br bb %while.cond24
select.then:
  br bb %select.exit
select.else:
  17 = icmp sgt i32 %9, i32 9
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 %17, bb %select.then, i1 1]
  br i1 %select.phi, bb %then, bb %else
then:
  br bb %while.cond
else:
  br bb %while.exit
while.cond24:
  sum.phi = phi [bb %while.exit, i32 %9, bb %if.exit41, i32 %46]
  28 = call i32 getch()
  30 = sub i32 %28, i32 48
  32 = icmp sge i32 %30, i32 0
  br i1 %32, bb %select.then33, bb %select.else34
while.exit26:
  ret i32 %sum.phi
select.then33:
  38 = icmp sle i32 %30, i32 9
  br bb %select.exit35
select.else34:
  br bb %select.exit35
select.exit35:
  select36.phi = phi [bb %select.else34, i1 0, bb %select.then33, i1 %38]
  br i1 %select36.phi, bb %then40, bb %else42
then40:
  44 = mul i32 %sum.phi, i32 10
  46 = add i32 %44, i32 %30
  br bb %if.exit41
if.exit41:
  br bb %while.cond24
else42:
  br bb %while.exit26
}

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry82:
  %b116 = stack 64
  br bb %my_getint.entry
entry82.split:
  br bb %while.cond85
while.cond85:
  n.phi = phi [bb %entry82.split, i32 %sum.phi170, bb %my_putint.while.exit71, i32 %97]
  89 = icmp sgt i32 %n.phi, i32 0
  br i1 %89, bb %while.body86, bb %while.exit87
while.body86:
  br bb %my_getint.entry195
while.exit87:
  ret i32 0
my_putint.entry48:
  br bb %my_putint.while.cond52
my_putint.while.cond52:
  i.phi100119 = phi [bb %my_putint.entry48, i32 0, bb %my_putint.while.body53, i32 %68130]
  a.stack.phi120 = phi [bb %my_putint.entry48, i32 %sum.phi217, bb %my_putint.while.body53, i32 %66129]
  56121 = icmp sgt i32 %a.stack.phi120, i32 0
  br i1 %56121, bb %my_putint.while.body53, bb %my_putint.while.exit54
my_putint.while.body53:
  59124 = mul i32 %i.phi100119, i32 4
  60125 = ptradd ptr %b116, i32 %59124
  62126 = srem i32 %a.stack.phi120, i32 10
  64127 = add i32 %62126, i32 48
  store i32 %64127 to ptr %60125
  66129 = sdiv i32 %a.stack.phi120, i32 10
  68130 = add i32 %i.phi100119, i32 1
  br bb %my_putint.while.cond52
my_putint.while.exit54:
  br bb %my_putint.while.cond69
my_putint.while.cond69:
  i.phi135 = phi [bb %my_putint.while.exit54, i32 %i.phi100119, bb %my_putint.while.body70, i32 %76139]
  73136 = icmp sgt i32 %i.phi135, i32 0
  br i1 %73136, bb %my_putint.while.body70, bb %my_putint.while.exit71
my_putint.while.body70:
  76139 = sub i32 %i.phi135, i32 1
  78140 = mul i32 %76139, i32 4
  79141 = ptradd ptr %b116, i32 %78140
  79.load142 = load i32 from ptr %79141
  call void putch(i32 %79.load142)
  br bb %my_putint.while.cond69
my_putint.while.exit71:
  call void putch(i32 10)
  97 = sub i32 %n.phi, i32 1
  br bb %while.cond85
my_getint.entry:
  br bb %my_getint.while.cond
my_getint.while.cond:
  7151 = call i32 getch()
  9152 = sub i32 %7151, i32 48
  11153 = icmp slt i32 %9152, i32 0
  br i1 %11153, bb %my_getint.select.then, bb %my_getint.select.else
my_getint.while.exit:
  br bb %my_getint.while.cond24
my_getint.select.then:
  br bb %my_getint.select.exit
my_getint.select.else:
  17160 = icmp sgt i32 %9152, i32 9
  br bb %my_getint.select.exit
my_getint.select.exit:
  select.phi163 = phi [bb %my_getint.select.else, i1 %17160, bb %my_getint.select.then, i1 1]
  br i1 %select.phi163, bb %my_getint.then, bb %my_getint.else
my_getint.then:
  br bb %my_getint.while.cond
my_getint.else:
  br bb %my_getint.while.exit
my_getint.while.cond24:
  sum.phi170 = phi [bb %my_getint.while.exit, i32 %9152, bb %my_getint.if.exit41, i32 %46187]
  28171 = call i32 getch()
  30172 = sub i32 %28171, i32 48
  32173 = icmp sge i32 %30172, i32 0
  br i1 %32173, bb %my_getint.select.then33, bb %my_getint.select.else34
my_getint.select.then33:
  38178 = icmp sle i32 %30172, i32 9
  br bb %my_getint.select.exit35
my_getint.select.else34:
  br bb %my_getint.select.exit35
my_getint.select.exit35:
  select36.phi183 = phi [bb %my_getint.select.else34, i1 0, bb %my_getint.select.then33, i1 %38178]
  br i1 %select36.phi183, bb %my_getint.then40, bb %my_getint.else42
my_getint.then40:
  44186 = mul i32 %sum.phi170, i32 10
  46187 = add i32 %44186, i32 %30172
  br bb %my_getint.if.exit41
my_getint.if.exit41:
  br bb %my_getint.while.cond24
my_getint.else42:
  br bb %entry82.split
my_getint.entry195:
  br bb %my_getint.while.cond197
my_getint.while.cond197:
  7198 = call i32 getch()
  9199 = sub i32 %7198, i32 48
  11200 = icmp slt i32 %9199, i32 0
  br i1 %11200, bb %my_getint.select.then204, bb %my_getint.select.else206
my_getint.while.exit202:
  br bb %my_getint.while.cond24216
my_getint.select.then204:
  br bb %my_getint.select.exit209
my_getint.select.else206:
  17207 = icmp sgt i32 %9199, i32 9
  br bb %my_getint.select.exit209
my_getint.select.exit209:
  select.phi210 = phi [bb %my_getint.select.else206, i1 %17207, bb %my_getint.select.then204, i1 1]
  br i1 %select.phi210, bb %my_getint.then212, bb %my_getint.else214
my_getint.then212:
  br bb %my_getint.while.cond197
my_getint.else214:
  br bb %my_getint.while.exit202
my_getint.while.cond24216:
  sum.phi217 = phi [bb %my_getint.while.exit202, i32 %9199, bb %my_getint.if.exit41236, i32 %46234]
  28218 = call i32 getch()
  30219 = sub i32 %28218, i32 48
  32220 = icmp sge i32 %30219, i32 0
  br i1 %32220, bb %my_getint.select.then33224, bb %my_getint.select.else34227
my_getint.select.then33224:
  38225 = icmp sle i32 %30219, i32 9
  br bb %my_getint.select.exit35229
my_getint.select.else34227:
  br bb %my_getint.select.exit35229
my_getint.select.exit35229:
  select36.phi230 = phi [bb %my_getint.select.else34227, i1 0, bb %my_getint.select.then33224, i1 %38225]
  br i1 %select36.phi230, bb %my_getint.then40232, bb %my_getint.else42238
my_getint.then40232:
  44233 = mul i32 %sum.phi217, i32 10
  46234 = add i32 %44233, i32 %30219
  br bb %my_getint.if.exit41236
my_getint.if.exit41236:
  br bb %my_getint.while.cond24216
my_getint.else42238:
  br bb %my_putint.entry48
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


