global ptr cur_token init with i32 0
global ptr other init with i32 0
global ptr num init with i32 0
global ptr last_char init with i32 32
immutable global ptr TOKEN_OTHER init with i32 1
immutable global ptr TOKEN_NUM init with i32 0
i32 eval() {
entry186:
  %ops = stack 1024
  %oprs = stack 1024
  br bb %init.cond
init.cond:
  cnt_ptr.phi = phi [bb %entry186, i32 256, bb %init, i32 %cnt.dec]
  193 = icmp ne i32 %cnt_ptr.phi, i32 0
  br i1 %193, bb %init, bb %init.exit
init:
  cnt.dec = sub i32 %cnt_ptr.phi, i32 1
  offset = mul i32 %cnt.dec, i32 4
  arr.index198 = ptradd ptr %oprs, i32 %offset
  store i32 0 to ptr %arr.index198
  br bb %init.cond
init.exit:
  br bb %init.cond200
init.cond200:
  cnt_ptr203.phi = phi [bb %init.exit, i32 256, bb %init201, i32 %cnt.dec207]
  205 = icmp ne i32 %cnt_ptr203.phi, i32 0
  br i1 %205, bb %init201, bb %init.exit202
init201:
  cnt.dec207 = sub i32 %cnt_ptr203.phi, i32 1
  offset208 = mul i32 %cnt.dec207, i32 4
  arr.index210 = ptradd ptr %ops, i32 %offset208
  store i32 0 to ptr %arr.index210
  br bb %init.cond200
init.exit202:
  cur_token.load211 = load i32 from ptr @cur_token
  213 = icmp ne i32 %cur_token.load211, i32 0
  br i1 %213, bb %then214, bb %if.exit215
then214:
  call void putch(i32 112)
  call void putch(i32 97)
  call void putch(i32 110)
  call void putch(i32 105)
  call void putch(i32 99)
  call void putch(i32 33)
  call void putch(i32 10)
  ret i32 -1
if.exit215:
  num.load217 = load i32 from ptr @num
  112.load919 = load i32 from ptr %oprs
  114920 = add i32 %112.load919, i32 1
  store i32 %114920 to ptr %oprs
  118922 = mul i32 %114920, i32 4
  119923 = ptradd ptr %oprs, i32 %118922
  store i32 %num.load217 to ptr %119923
  br bb %next_token.while.cond
while.cond220:
  rhs.phi322 = phi [bb %next_token.if.exit44, i32 ub, bb %next_token.if.exit441323, i32 %rhs.phi]
  lhs.phi318 = phi [bb %next_token.if.exit44, i32 ub, bb %next_token.if.exit441323, i32 %lhs.phi]
  cur_op.phi316 = phi [bb %next_token.if.exit44, i32 ub, bb %next_token.if.exit441323, i32 %cur_op.phi]
  cur_token.load223 = load i32 from ptr @cur_token
  225 = icmp eq i32 %cur_token.load223, i32 1
  br i1 %225, bb %while.body221, bb %next_token.while.cond1399
while.body221:
  other.load = load i32 from ptr @other
  76767 = icmp eq i32 %other.load, i32 43
  br i1 %76767, bb %get_op_prec.select.then77, bb %get_op_prec.select.else78
while.body221.split:
  230.ret = phi [bb %get_op_prec.then85, i32 10, bb %get_op_prec.then105, i32 20, bb %get_op_prec.if.exit106, i32 0]
  231 = icmp ne i32 %230.ret, i32 0
  232 =  i1 %231, i1 1
  233 = zext i1 %232 to i32
  234 = icmp ne i32 %233, i32 0
  br i1 %234, bb %next_token.while.cond1399, bb %next_token.while.cond1203
while.cond238:
  rhs.phi = phi [bb %next_token.if.exit441225, i32 %rhs.phi322, bb %while.body239.split, i32 %127.load649]
  lhs.phi = phi [bb %next_token.if.exit441225, i32 %lhs.phi318, bb %while.body239.split, i32 %127.load660]
  cur_op.phi = phi [bb %next_token.if.exit441225, i32 %cur_op.phi316, bb %while.body239.split, i32 %127.load638]
  145.load583 = load i32 from ptr %ops
  242 = icmp ne i32 %145.load583, i32 0
  br i1 %242, bb %select.then243, bb %select.else244
while.body239:
  124.load635 = load i32 from ptr %ops
  126636 = mul i32 %124.load635, i32 4
  127637 = ptradd ptr %ops, i32 %126636
  127.load638 = load i32 from ptr %127637
  132.load639 = load i32 from ptr %ops
  134640 = sub i32 %132.load639, i32 1
  store i32 %134640 to ptr %ops
  124.load646 = load i32 from ptr %oprs
  126647 = mul i32 %124.load646, i32 4
  127648 = ptradd ptr %oprs, i32 %126647
  127.load649 = load i32 from ptr %127648
  132.load650 = load i32 from ptr %oprs
  134651 = sub i32 %132.load650, i32 1
  store i32 %134651 to ptr %oprs
  124.load657 = load i32 from ptr %oprs
  126658 = mul i32 %124.load657, i32 4
  127659 = ptradd ptr %oprs, i32 %126658
  127.load660 = load i32 from ptr %127659
  132.load661 = load i32 from ptr %oprs
  134662 = sub i32 %132.load661, i32 1
  store i32 %134662 to ptr %oprs
  152447 = icmp eq i32 %127.load638, i32 43
  br i1 %152447, bb %eval_op.then153, bb %eval_op.if.exit154
while.body239.split:
  263.ret = phi [bb %eval_op.then153, i32 %157450, bb %eval_op.then160, i32 %164456, bb %eval_op.then167, i32 %171462, bb %eval_op.then174, i32 %178468, bb %eval_op.then181, i32 %185474, bb %eval_op.if.exit182, i32 0]
  112.load928 = load i32 from ptr %oprs
  114929 = add i32 %112.load928, i32 1
  store i32 %114929 to ptr %oprs
  118931 = mul i32 %114929, i32 4
  119932 = ptradd ptr %oprs, i32 %118931
  store i32 %263.ret to ptr %119932
  br bb %while.cond238
while.exit240:
  112.load937 = load i32 from ptr %ops
  114938 = add i32 %112.load937, i32 1
  store i32 %114938 to ptr %ops
  118940 = mul i32 %114938, i32 4
  119941 = ptradd ptr %ops, i32 %118940
  store i32 %other.load to ptr %119941
  cur_token.load267 = load i32 from ptr @cur_token
  269 = icmp ne i32 %cur_token.load267, i32 0
  br i1 %269, bb %then270, bb %if.exit271
select.then243:
  138.load603 = load i32 from ptr %ops
  140604 = mul i32 %138.load603, i32 4
  141605 = ptradd ptr %ops, i32 %140604
  141.load606 = load i32 from ptr %141605
  76805 = icmp eq i32 %141.load606, i32 43
  br i1 %76805, bb %get_op_prec.select.then77807, bb %get_op_prec.select.else78809
select.then243.split.split:
  248.ret = phi [bb %get_op_prec.then85815, i32 10, bb %get_op_prec.then105836, i32 20, bb %get_op_prec.if.exit106838, i32 0]
  251 = icmp sge i32 %248.ret, i32 %230.ret
  br bb %select.exit245
select.else244:
  br bb %select.exit245
select.exit245:
  select246.phi = phi [bb %select.else244, i1 0, bb %select.then243.split.split, i1 %251]
  br i1 %select246.phi, bb %while.body239, bb %while.exit240
then270:
  call void putch(i32 112)
  call void putch(i32 97)
  call void putch(i32 110)
  call void putch(i32 105)
  call void putch(i32 99)
  call void putch(i32 33)
  call void putch(i32 10)
  ret i32 -1
if.exit271:
  num.load273 = load i32 from ptr @num
  112.load946 = load i32 from ptr %oprs
  114947 = add i32 %112.load946, i32 1
  store i32 %114947 to ptr %oprs
  118949 = mul i32 %114947, i32 4
  119950 = ptradd ptr %oprs, i32 %118949
  store i32 %num.load273 to ptr %119950
  br bb %next_token.while.cond1301
while.cond277:
  145.load588 = load i32 from ptr %ops
  281 = icmp ne i32 %145.load588, i32 0
  br i1 %281, bb %while.body278, bb %while.exit279
while.body278:
  124.load668 = load i32 from ptr %ops
  126669 = mul i32 %124.load668, i32 4
  127670 = ptradd ptr %ops, i32 %126669
  127.load671 = load i32 from ptr %127670
  132.load672 = load i32 from ptr %ops
  134673 = sub i32 %132.load672, i32 1
  store i32 %134673 to ptr %ops
  124.load679 = load i32 from ptr %oprs
  126680 = mul i32 %124.load679, i32 4
  127681 = ptradd ptr %oprs, i32 %126680
  127.load682 = load i32 from ptr %127681
  132.load683 = load i32 from ptr %oprs
  134684 = sub i32 %132.load683, i32 1
  store i32 %134684 to ptr %oprs
  124.load690 = load i32 from ptr %oprs
  126691 = mul i32 %124.load690, i32 4
  127692 = ptradd ptr %oprs, i32 %126691
  127.load693 = load i32 from ptr %127692
  132.load694 = load i32 from ptr %oprs
  134695 = sub i32 %132.load694, i32 1
  store i32 %134695 to ptr %oprs
  152481 = icmp eq i32 %127.load671, i32 43
  br i1 %152481, bb %eval_op.then153483, bb %eval_op.if.exit154486
while.body278.split:
  291.ret = phi [bb %eval_op.then153483, i32 %157484, bb %eval_op.then160489, i32 %164490, bb %eval_op.then167495, i32 %171496, bb %eval_op.then174501, i32 %178502, bb %eval_op.then181507, i32 %185508, bb %eval_op.if.exit182510, i32 0]
  112.load955 = load i32 from ptr %oprs
  114956 = add i32 %112.load955, i32 1
  store i32 %114956 to ptr %oprs
  118958 = mul i32 %114956, i32 4
  119959 = ptradd ptr %oprs, i32 %118958
  store i32 %291.ret to ptr %119959
  br bb %while.cond277
while.exit279:
  138.load611 = load i32 from ptr %oprs
  140612 = mul i32 %138.load611, i32 4
  141613 = ptradd ptr %oprs, i32 %140612
  141.load614 = load i32 from ptr %141613
  ret i32 %141.load614
eval_op.then153:
  157450 = add i32 %127.load660, i32 %127.load649
  br bb %while.body239.split
eval_op.if.exit154:
  159453 = icmp eq i32 %127.load638, i32 45
  br i1 %159453, bb %eval_op.then160, bb %eval_op.if.exit161
eval_op.then160:
  164456 = sub i32 %127.load660, i32 %127.load649
  br bb %while.body239.split
eval_op.if.exit161:
  166459 = icmp eq i32 %127.load638, i32 42
  br i1 %166459, bb %eval_op.then167, bb %eval_op.if.exit168
eval_op.then167:
  171462 = mul i32 %127.load660, i32 %127.load649
  br bb %while.body239.split
eval_op.if.exit168:
  173465 = icmp eq i32 %127.load638, i32 47
  br i1 %173465, bb %eval_op.then174, bb %eval_op.if.exit175
eval_op.then174:
  178468 = sdiv i32 %127.load660, i32 %127.load649
  br bb %while.body239.split
eval_op.if.exit175:
  180471 = icmp eq i32 %127.load638, i32 37
  br i1 %180471, bb %eval_op.then181, bb %eval_op.if.exit182
eval_op.then181:
  185474 = srem i32 %127.load660, i32 %127.load649
  br bb %while.body239.split
eval_op.if.exit182:
  br bb %while.body239.split
eval_op.then153483:
  157484 = add i32 %127.load693, i32 %127.load682
  br bb %while.body278.split
eval_op.if.exit154486:
  159487 = icmp eq i32 %127.load671, i32 45
  br i1 %159487, bb %eval_op.then160489, bb %eval_op.if.exit161492
eval_op.then160489:
  164490 = sub i32 %127.load693, i32 %127.load682
  br bb %while.body278.split
eval_op.if.exit161492:
  166493 = icmp eq i32 %127.load671, i32 42
  br i1 %166493, bb %eval_op.then167495, bb %eval_op.if.exit168498
eval_op.then167495:
  171496 = mul i32 %127.load693, i32 %127.load682
  br bb %while.body278.split
eval_op.if.exit168498:
  173499 = icmp eq i32 %127.load671, i32 47
  br i1 %173499, bb %eval_op.then174501, bb %eval_op.if.exit175504
eval_op.then174501:
  178502 = sdiv i32 %127.load693, i32 %127.load682
  br bb %while.body278.split
eval_op.if.exit175504:
  180505 = icmp eq i32 %127.load671, i32 37
  br i1 %180505, bb %eval_op.then181507, bb %eval_op.if.exit182510
eval_op.then181507:
  185508 = srem i32 %127.load693, i32 %127.load682
  br bb %while.body278.split
eval_op.if.exit182510:
  br bb %while.body278.split
get_op_prec.select.then77:
  br bb %get_op_prec.select.exit79
get_op_prec.select.else78:
  82772 = icmp eq i32 %other.load, i32 45
  br bb %get_op_prec.select.exit79
get_op_prec.select.exit79:
  select80.phi775 = phi [bb %get_op_prec.select.else78, i1 %82772, bb %get_op_prec.select.then77, i1 1]
  br i1 %select80.phi775, bb %get_op_prec.then85, bb %get_op_prec.if.exit86
get_op_prec.then85:
  br bb %while.body221.split
get_op_prec.if.exit86:
  88780 = icmp eq i32 %other.load, i32 42
  br i1 %88780, bb %get_op_prec.select.then89, bb %get_op_prec.select.else90
get_op_prec.select.then89:
  br bb %get_op_prec.select.exit91
get_op_prec.select.else90:
  94785 = icmp eq i32 %other.load, i32 47
  br bb %get_op_prec.select.exit91
get_op_prec.select.exit91:
  select92.phi788 = phi [bb %get_op_prec.select.else90, i1 %94785, bb %get_op_prec.select.then89, i1 1]
  br i1 %select92.phi788, bb %get_op_prec.select.then97, bb %get_op_prec.select.else98
get_op_prec.select.then97:
  br bb %get_op_prec.select.exit99
get_op_prec.select.else98:
  102793 = icmp eq i32 %other.load, i32 37
  br bb %get_op_prec.select.exit99
get_op_prec.select.exit99:
  select100.phi796 = phi [bb %get_op_prec.select.else98, i1 %102793, bb %get_op_prec.select.then97, i1 1]
  br i1 %select100.phi796, bb %get_op_prec.then105, bb %get_op_prec.if.exit106
get_op_prec.then105:
  br bb %while.body221.split
get_op_prec.if.exit106:
  br bb %while.body221.split
get_op_prec.select.then77807:
  br bb %get_op_prec.select.exit79812
get_op_prec.select.else78809:
  82810 = icmp eq i32 %141.load606, i32 45
  br bb %get_op_prec.select.exit79812
get_op_prec.select.exit79812:
  select80.phi813 = phi [bb %get_op_prec.select.else78809, i1 %82810, bb %get_op_prec.select.then77807, i1 1]
  br i1 %select80.phi813, bb %get_op_prec.then85815, bb %get_op_prec.if.exit86817
get_op_prec.then85815:
  br bb %select.then243.split.split
get_op_prec.if.exit86817:
  88818 = icmp eq i32 %141.load606, i32 42
  br i1 %88818, bb %get_op_prec.select.then89820, bb %get_op_prec.select.else90822
get_op_prec.select.then89820:
  br bb %get_op_prec.select.exit91825
get_op_prec.select.else90822:
  94823 = icmp eq i32 %141.load606, i32 47
  br bb %get_op_prec.select.exit91825
get_op_prec.select.exit91825:
  select92.phi826 = phi [bb %get_op_prec.select.else90822, i1 %94823, bb %get_op_prec.select.then89820, i1 1]
  br i1 %select92.phi826, bb %get_op_prec.select.then97828, bb %get_op_prec.select.else98830
get_op_prec.select.then97828:
  br bb %get_op_prec.select.exit99833
get_op_prec.select.else98830:
  102831 = icmp eq i32 %141.load606, i32 37
  br bb %get_op_prec.select.exit99833
get_op_prec.select.exit99833:
  select100.phi834 = phi [bb %get_op_prec.select.else98830, i1 %102831, bb %get_op_prec.select.then97828, i1 1]
  br i1 %select100.phi834, bb %get_op_prec.then105836, bb %get_op_prec.if.exit106838
get_op_prec.then105836:
  br bb %select.then243.split.split
get_op_prec.if.exit106838:
  br bb %select.then243.split.split
next_token.while.cond:
  last_char.load361106 = load i32 from ptr @last_char
  610431185 = icmp eq i32 %last_char.load361106, i32 32
  br i1 %610431185, bb %next_token.is_space.select.then, bb %next_token.is_space.select.else
next_token.while.cond.split:
  37.ret1109 = phi [bb %next_token.is_space.then, i32 1, bb %next_token.is_space.else, i32 0]
  381110 = icmp ne i32 %37.ret1109, i32 0
  br i1 %381110, bb %next_token.while.body, bb %next_token.while.exit
next_token.while.body:
  12004 = call i32 getch()
  store i32 %12004 to ptr @last_char
  br bb %next_token.while.cond
next_token.while.exit:
  last_char.load401116 = load i32 from ptr @last_char
  2110091155 = icmp sge i32 %last_char.load401116, i32 48
  br i1 %2110091155, bb %next_token.is_num.select.then22, bb %next_token.is_num.select.else23
next_token.while.exit.split:
  41.ret1119 = phi [bb %next_token.is_num.then29, i32 1, bb %next_token.is_num.else31, i32 0]
  421120 = icmp ne i32 %41.ret1119, i32 0
  br i1 %421120, bb %next_token.then43, bb %next_token.else45
next_token.then43:
  last_char.load461123 = load i32 from ptr @last_char
  471124 = sub i32 %last_char.load461123, i32 48
  store i32 %471124 to ptr @num
  br bb %next_token.while.cond48
next_token.if.exit44:
  br bb %while.cond220
next_token.else45:
  last_char.load601131 = load i32 from ptr @last_char
  store i32 %last_char.load601131 to ptr @other
  12010 = call i32 getch()
  store i32 %12010 to ptr @last_char
  store i32 1 to ptr @cur_token
  br bb %next_token.if.exit44
next_token.while.cond48:
  12016 = call i32 getch()
  store i32 %12016 to ptr @last_char
  2110261170 = icmp sge i32 %12016, i32 48
  br i1 %2110261170, bb %next_token.is_num.select.then221028, bb %next_token.is_num.select.else231031
next_token.while.cond48.split:
  52.ret1140 = phi [bb %next_token.is_num.then291036, i32 1, bb %next_token.is_num.else311038, i32 0]
  531141 = icmp ne i32 %52.ret1140, i32 0
  br i1 %531141, bb %next_token.while.body49, bb %next_token.while.exit50
next_token.while.body49:
  num.load1144 = load i32 from ptr @num
  551145 = mul i32 %num.load1144, i32 10
  last_char.load561146 = load i32 from ptr @last_char
  571147 = add i32 %551145, i32 %last_char.load561146
  581148 = sub i32 %571147, i32 48
  store i32 %581148 to ptr @num
  br bb %next_token.while.cond48
next_token.while.exit50:
  store i32 0 to ptr @cur_token
  br bb %next_token.if.exit44
next_token.is_num.select.then22:
  2710121158 = icmp sle i32 %last_char.load401116, i32 57
  br bb %next_token.is_num.select.exit24
next_token.is_num.select.else23:
  br bb %next_token.is_num.select.exit24
next_token.is_num.select.exit24:
  select25.phi10171163 = phi [bb %next_token.is_num.select.else23, i1 0, bb %next_token.is_num.select.then22, i1 %2710121158]
  br i1 %select25.phi10171163, bb %next_token.is_num.then29, bb %next_token.is_num.else31
next_token.is_num.then29:
  br bb %next_token.while.exit.split
next_token.is_num.else31:
  br bb %next_token.while.exit.split
next_token.is_num.select.then221028:
  2710291173 = icmp sle i32 %12016, i32 57
  br bb %next_token.is_num.select.exit241033
next_token.is_num.select.else231031:
  br bb %next_token.is_num.select.exit241033
next_token.is_num.select.exit241033:
  select25.phi10341178 = phi [bb %next_token.is_num.select.else231031, i1 0, bb %next_token.is_num.select.then221028, i1 %2710291173]
  br i1 %select25.phi10341178, bb %next_token.is_num.then291036, bb %next_token.is_num.else311038
next_token.is_num.then291036:
  br bb %next_token.while.cond48.split
next_token.is_num.else311038:
  br bb %next_token.while.cond48.split
next_token.is_space.select.then:
  br bb %next_token.is_space.select.exit
next_token.is_space.select.else:
  1210481190 = icmp eq i32 %last_char.load361106, i32 10
  br bb %next_token.is_space.select.exit
next_token.is_space.select.exit:
  select.phi10511193 = phi [bb %next_token.is_space.select.else, i1 %1210481190, bb %next_token.is_space.select.then, i1 1]
  br i1 %select.phi10511193, bb %next_token.is_space.then, bb %next_token.is_space.else
next_token.is_space.then:
  br bb %next_token.while.cond.split
next_token.is_space.else:
  br bb %next_token.while.cond.split
next_token.while.cond1203:
  last_char.load361204 = load i32 from ptr @last_char
  610431283 = icmp eq i32 %last_char.load361204, i32 32
  br i1 %610431283, bb %next_token.is_space.select.then1285, bb %next_token.is_space.select.else1287
next_token.while.cond.split1206:
  37.ret1207 = phi [bb %next_token.is_space.then1293, i32 1, bb %next_token.is_space.else1295, i32 0]
  381208 = icmp ne i32 %37.ret1207, i32 0
  br i1 %381208, bb %next_token.while.body1210, bb %next_token.while.exit1213
next_token.while.body1210:
  12022 = call i32 getch()
  store i32 %12022 to ptr @last_char
  br bb %next_token.while.cond1203
next_token.while.exit1213:
  last_char.load401214 = load i32 from ptr @last_char
  2110091253 = icmp sge i32 %last_char.load401214, i32 48
  br i1 %2110091253, bb %next_token.is_num.select.then221255, bb %next_token.is_num.select.else231258
next_token.while.exit.split1216:
  41.ret1217 = phi [bb %next_token.is_num.then291263, i32 1, bb %next_token.is_num.else311265, i32 0]
  421218 = icmp ne i32 %41.ret1217, i32 0
  br i1 %421218, bb %next_token.then431220, bb %next_token.else451228
next_token.then431220:
  last_char.load461221 = load i32 from ptr @last_char
  471222 = sub i32 %last_char.load461221, i32 48
  store i32 %471222 to ptr @num
  br bb %next_token.while.cond481234
next_token.if.exit441225:
  br bb %while.cond238
next_token.else451228:
  last_char.load601229 = load i32 from ptr @last_char
  store i32 %last_char.load601229 to ptr @other
  12028 = call i32 getch()
  store i32 %12028 to ptr @last_char
  store i32 1 to ptr @cur_token
  br bb %next_token.if.exit441225
next_token.while.cond481234:
  12034 = call i32 getch()
  store i32 %12034 to ptr @last_char
  2110261268 = icmp sge i32 %12034, i32 48
  br i1 %2110261268, bb %next_token.is_num.select.then2210281270, bb %next_token.is_num.select.else2310311273
next_token.while.cond48.split1237:
  52.ret1238 = phi [bb %next_token.is_num.then2910361278, i32 1, bb %next_token.is_num.else3110381280, i32 0]
  531239 = icmp ne i32 %52.ret1238, i32 0
  br i1 %531239, bb %next_token.while.body491241, bb %next_token.while.exit501249
next_token.while.body491241:
  num.load1242 = load i32 from ptr @num
  551243 = mul i32 %num.load1242, i32 10
  last_char.load561244 = load i32 from ptr @last_char
  571245 = add i32 %551243, i32 %last_char.load561244
  581246 = sub i32 %571245, i32 48
  store i32 %581246 to ptr @num
  br bb %next_token.while.cond481234
next_token.while.exit501249:
  store i32 0 to ptr @cur_token
  br bb %next_token.if.exit441225
next_token.is_num.select.then221255:
  2710121256 = icmp sle i32 %last_char.load401214, i32 57
  br bb %next_token.is_num.select.exit241260
next_token.is_num.select.else231258:
  br bb %next_token.is_num.select.exit241260
next_token.is_num.select.exit241260:
  select25.phi10171261 = phi [bb %next_token.is_num.select.else231258, i1 0, bb %next_token.is_num.select.then221255, i1 %2710121256]
  br i1 %select25.phi10171261, bb %next_token.is_num.then291263, bb %next_token.is_num.else311265
next_token.is_num.then291263:
  br bb %next_token.while.exit.split1216
next_token.is_num.else311265:
  br bb %next_token.while.exit.split1216
next_token.is_num.select.then2210281270:
  2710291271 = icmp sle i32 %12034, i32 57
  br bb %next_token.is_num.select.exit2410331275
next_token.is_num.select.else2310311273:
  br bb %next_token.is_num.select.exit2410331275
next_token.is_num.select.exit2410331275:
  select25.phi10341276 = phi [bb %next_token.is_num.select.else2310311273, i1 0, bb %next_token.is_num.select.then2210281270, i1 %2710291271]
  br i1 %select25.phi10341276, bb %next_token.is_num.then2910361278, bb %next_token.is_num.else3110381280
next_token.is_num.then2910361278:
  br bb %next_token.while.cond48.split1237
next_token.is_num.else3110381280:
  br bb %next_token.while.cond48.split1237
next_token.is_space.select.then1285:
  br bb %next_token.is_space.select.exit1290
next_token.is_space.select.else1287:
  1210481288 = icmp eq i32 %last_char.load361204, i32 10
  br bb %next_token.is_space.select.exit1290
next_token.is_space.select.exit1290:
  select.phi10511291 = phi [bb %next_token.is_space.select.else1287, i1 %1210481288, bb %next_token.is_space.select.then1285, i1 1]
  br i1 %select.phi10511291, bb %next_token.is_space.then1293, bb %next_token.is_space.else1295
next_token.is_space.then1293:
  br bb %next_token.while.cond.split1206
next_token.is_space.else1295:
  br bb %next_token.while.cond.split1206
next_token.while.cond1301:
  last_char.load361302 = load i32 from ptr @last_char
  610431381 = icmp eq i32 %last_char.load361302, i32 32
  br i1 %610431381, bb %next_token.is_space.select.then1383, bb %next_token.is_space.select.else1385
next_token.while.cond.split1304:
  37.ret1305 = phi [bb %next_token.is_space.then1391, i32 1, bb %next_token.is_space.else1393, i32 0]
  381306 = icmp ne i32 %37.ret1305, i32 0
  br i1 %381306, bb %next_token.while.body1308, bb %next_token.while.exit1311
next_token.while.body1308:
  12040 = call i32 getch()
  store i32 %12040 to ptr @last_char
  br bb %next_token.while.cond1301
next_token.while.exit1311:
  last_char.load401312 = load i32 from ptr @last_char
  2110091351 = icmp sge i32 %last_char.load401312, i32 48
  br i1 %2110091351, bb %next_token.is_num.select.then221353, bb %next_token.is_num.select.else231356
next_token.while.exit.split1314:
  41.ret1315 = phi [bb %next_token.is_num.then291361, i32 1, bb %next_token.is_num.else311363, i32 0]
  421316 = icmp ne i32 %41.ret1315, i32 0
  br i1 %421316, bb %next_token.then431318, bb %next_token.else451326
next_token.then431318:
  last_char.load461319 = load i32 from ptr @last_char
  471320 = sub i32 %last_char.load461319, i32 48
  store i32 %471320 to ptr @num
  br bb %next_token.while.cond481332
next_token.if.exit441323:
  br bb %while.cond220
next_token.else451326:
  last_char.load601327 = load i32 from ptr @last_char
  store i32 %last_char.load601327 to ptr @other
  12046 = call i32 getch()
  store i32 %12046 to ptr @last_char
  store i32 1 to ptr @cur_token
  br bb %next_token.if.exit441323
next_token.while.cond481332:
  12052 = call i32 getch()
  store i32 %12052 to ptr @last_char
  2110261366 = icmp sge i32 %12052, i32 48
  br i1 %2110261366, bb %next_token.is_num.select.then2210281368, bb %next_token.is_num.select.else2310311371
next_token.while.cond48.split1335:
  52.ret1336 = phi [bb %next_token.is_num.then2910361376, i32 1, bb %next_token.is_num.else3110381378, i32 0]
  531337 = icmp ne i32 %52.ret1336, i32 0
  br i1 %531337, bb %next_token.while.body491339, bb %next_token.while.exit501347
next_token.while.body491339:
  num.load1340 = load i32 from ptr @num
  551341 = mul i32 %num.load1340, i32 10
  last_char.load561342 = load i32 from ptr @last_char
  571343 = add i32 %551341, i32 %last_char.load561342
  581344 = sub i32 %571343, i32 48
  store i32 %581344 to ptr @num
  br bb %next_token.while.cond481332
next_token.while.exit501347:
  store i32 0 to ptr @cur_token
  br bb %next_token.if.exit441323
next_token.is_num.select.then221353:
  2710121354 = icmp sle i32 %last_char.load401312, i32 57
  br bb %next_token.is_num.select.exit241358
next_token.is_num.select.else231356:
  br bb %next_token.is_num.select.exit241358
next_token.is_num.select.exit241358:
  select25.phi10171359 = phi [bb %next_token.is_num.select.else231356, i1 0, bb %next_token.is_num.select.then221353, i1 %2710121354]
  br i1 %select25.phi10171359, bb %next_token.is_num.then291361, bb %next_token.is_num.else311363
next_token.is_num.then291361:
  br bb %next_token.while.exit.split1314
next_token.is_num.else311363:
  br bb %next_token.while.exit.split1314
next_token.is_num.select.then2210281368:
  2710291369 = icmp sle i32 %12052, i32 57
  br bb %next_token.is_num.select.exit2410331373
next_token.is_num.select.else2310311371:
  br bb %next_token.is_num.select.exit2410331373
next_token.is_num.select.exit2410331373:
  select25.phi10341374 = phi [bb %next_token.is_num.select.else2310311371, i1 0, bb %next_token.is_num.select.then2210281368, i1 %2710291369]
  br i1 %select25.phi10341374, bb %next_token.is_num.then2910361376, bb %next_token.is_num.else3110381378
next_token.is_num.then2910361376:
  br bb %next_token.while.cond48.split1335
next_token.is_num.else3110381378:
  br bb %next_token.while.cond48.split1335
next_token.is_space.select.then1383:
  br bb %next_token.is_space.select.exit1388
next_token.is_space.select.else1385:
  1210481386 = icmp eq i32 %last_char.load361302, i32 10
  br bb %next_token.is_space.select.exit1388
next_token.is_space.select.exit1388:
  select.phi10511389 = phi [bb %next_token.is_space.select.else1385, i1 %1210481386, bb %next_token.is_space.select.then1383, i1 1]
  br i1 %select.phi10511389, bb %next_token.is_space.then1391, bb %next_token.is_space.else1393
next_token.is_space.then1391:
  br bb %next_token.while.cond.split1304
next_token.is_space.else1393:
  br bb %next_token.while.cond.split1304
next_token.while.cond1399:
  last_char.load361400 = load i32 from ptr @last_char
  610431479 = icmp eq i32 %last_char.load361400, i32 32
  br i1 %610431479, bb %next_token.is_space.select.then1481, bb %next_token.is_space.select.else1483
next_token.while.cond.split1402:
  37.ret1403 = phi [bb %next_token.is_space.then1489, i32 1, bb %next_token.is_space.else1491, i32 0]
  381404 = icmp ne i32 %37.ret1403, i32 0
  br i1 %381404, bb %next_token.while.body1406, bb %next_token.while.exit1409
next_token.while.body1406:
  12058 = call i32 getch()
  store i32 %12058 to ptr @last_char
  br bb %next_token.while.cond1399
next_token.while.exit1409:
  last_char.load401410 = load i32 from ptr @last_char
  2110091449 = icmp sge i32 %last_char.load401410, i32 48
  br i1 %2110091449, bb %next_token.is_num.select.then221451, bb %next_token.is_num.select.else231454
next_token.while.exit.split1412:
  41.ret1413 = phi [bb %next_token.is_num.then291459, i32 1, bb %next_token.is_num.else311461, i32 0]
  421414 = icmp ne i32 %41.ret1413, i32 0
  br i1 %421414, bb %next_token.then431416, bb %next_token.else451424
next_token.then431416:
  last_char.load461417 = load i32 from ptr @last_char
  471418 = sub i32 %last_char.load461417, i32 48
  store i32 %471418 to ptr @num
  br bb %next_token.while.cond481430
next_token.else451424:
  last_char.load601425 = load i32 from ptr @last_char
  store i32 %last_char.load601425 to ptr @other
  12064 = call i32 getch()
  store i32 %12064 to ptr @last_char
  store i32 1 to ptr @cur_token
  br bb %while.cond277
next_token.while.cond481430:
  12070 = call i32 getch()
  store i32 %12070 to ptr @last_char
  2110261464 = icmp sge i32 %12070, i32 48
  br i1 %2110261464, bb %next_token.is_num.select.then2210281466, bb %next_token.is_num.select.else2310311469
next_token.while.cond48.split1433:
  52.ret1434 = phi [bb %next_token.is_num.then2910361474, i32 1, bb %next_token.is_num.else3110381476, i32 0]
  531435 = icmp ne i32 %52.ret1434, i32 0
  br i1 %531435, bb %next_token.while.body491437, bb %next_token.while.exit501445
next_token.while.body491437:
  num.load1438 = load i32 from ptr @num
  551439 = mul i32 %num.load1438, i32 10
  last_char.load561440 = load i32 from ptr @last_char
  571441 = add i32 %551439, i32 %last_char.load561440
  581442 = sub i32 %571441, i32 48
  store i32 %581442 to ptr @num
  br bb %next_token.while.cond481430
next_token.while.exit501445:
  store i32 0 to ptr @cur_token
  br bb %while.cond277
next_token.is_num.select.then221451:
  2710121452 = icmp sle i32 %last_char.load401410, i32 57
  br bb %next_token.is_num.select.exit241456
next_token.is_num.select.else231454:
  br bb %next_token.is_num.select.exit241456
next_token.is_num.select.exit241456:
  select25.phi10171457 = phi [bb %next_token.is_num.select.else231454, i1 0, bb %next_token.is_num.select.then221451, i1 %2710121452]
  br i1 %select25.phi10171457, bb %next_token.is_num.then291459, bb %next_token.is_num.else311461
next_token.is_num.then291459:
  br bb %next_token.while.exit.split1412
next_token.is_num.else311461:
  br bb %next_token.while.exit.split1412
next_token.is_num.select.then2210281466:
  2710291467 = icmp sle i32 %12070, i32 57
  br bb %next_token.is_num.select.exit2410331471
next_token.is_num.select.else2310311469:
  br bb %next_token.is_num.select.exit2410331471
next_token.is_num.select.exit2410331471:
  select25.phi10341472 = phi [bb %next_token.is_num.select.else2310311469, i1 0, bb %next_token.is_num.select.then2210281466, i1 %2710291467]
  br i1 %select25.phi10341472, bb %next_token.is_num.then2910361474, bb %next_token.is_num.else3110381476
next_token.is_num.then2910361474:
  br bb %next_token.while.cond48.split1433
next_token.is_num.else3110381476:
  br bb %next_token.while.cond48.split1433
next_token.is_space.select.then1481:
  br bb %next_token.is_space.select.exit1486
next_token.is_space.select.else1483:
  1210481484 = icmp eq i32 %last_char.load361400, i32 10
  br bb %next_token.is_space.select.exit1486
next_token.is_space.select.exit1486:
  select.phi10511487 = phi [bb %next_token.is_space.select.else1483, i1 %1210481484, bb %next_token.is_space.select.then1481, i1 1]
  br i1 %select.phi10511487, bb %next_token.is_space.then1489, bb %next_token.is_space.else1491
next_token.is_space.then1489:
  br bb %next_token.while.cond.split1402
next_token.is_space.else1491:
  br bb %next_token.while.cond.split1402
}

pure i32 eval_op(i32 op, i32 lhs, i32 rhs) {
entry147:
  152 = icmp eq i32 %op, i32 43
  br i1 %152, bb %then153, bb %if.exit154
then153:
  157 = add i32 %lhs, i32 %rhs
  ret i32 %157
if.exit154:
  159 = icmp eq i32 %op, i32 45
  br i1 %159, bb %then160, bb %if.exit161
then160:
  164 = sub i32 %lhs, i32 %rhs
  ret i32 %164
if.exit161:
  166 = icmp eq i32 %op, i32 42
  br i1 %166, bb %then167, bb %if.exit168
then167:
  171 = mul i32 %lhs, i32 %rhs
  ret i32 %171
if.exit168:
  173 = icmp eq i32 %op, i32 47
  br i1 %173, bb %then174, bb %if.exit175
then174:
  178 = sdiv i32 %lhs, i32 %rhs
  ret i32 %178
if.exit175:
  180 = icmp eq i32 %op, i32 37
  br i1 %180, bb %then181, bb %if.exit182
then181:
  185 = srem i32 %lhs, i32 %rhs
  ret i32 %185
if.exit182:
  ret i32 0
}

pure i32 stack_size(ptr s) {
entry143:
  145.load = load i32 from ptr %s
  ret i32 %145.load
}

pure i32 stack_peek(ptr s) {
entry136:
  138.load = load i32 from ptr %s
  140 = mul i32 %138.load, i32 4
  141 = ptradd ptr %s, i32 %140
  141.load = load i32 from ptr %141
  ret i32 %141.load
}

i32 stack_pop(ptr s) {
entry121:
  124.load = load i32 from ptr %s
  126 = mul i32 %124.load, i32 4
  127 = ptradd ptr %s, i32 %126
  127.load = load i32 from ptr %127
  132.load = load i32 from ptr %s
  134 = sub i32 %132.load, i32 1
  store i32 %134 to ptr %s
  ret i32 %127.load
}

pure i32 get_op_prec(i32 op) {
entry73:
  76 = icmp eq i32 %op, i32 43
  br i1 %76, bb %select.then77, bb %select.else78
select.then77:
  br bb %select.exit79
select.else78:
  82 = icmp eq i32 %op, i32 45
  br bb %select.exit79
select.exit79:
  select80.phi = phi [bb %select.else78, i1 %82, bb %select.then77, i1 1]
  br i1 %select80.phi, bb %then85, bb %if.exit86
then85:
  ret i32 10
if.exit86:
  88 = icmp eq i32 %op, i32 42
  br i1 %88, bb %select.then89, bb %select.else90
select.then89:
  br bb %select.exit91
select.else90:
  94 = icmp eq i32 %op, i32 47
  br bb %select.exit91
select.exit91:
  select92.phi = phi [bb %select.else90, i1 %94, bb %select.then89, i1 1]
  br i1 %select92.phi, bb %select.then97, bb %select.else98
select.then97:
  br bb %select.exit99
select.else98:
  102 = icmp eq i32 %op, i32 37
  br bb %select.exit99
select.exit99:
  select100.phi = phi [bb %select.else98, i1 %102, bb %select.then97, i1 1]
  br i1 %select100.phi, bb %then105, bb %if.exit106
then105:
  ret i32 20
if.exit106:
  ret i32 0
}

void stack_push(ptr s, i32 v) {
entry107:
  112.load = load i32 from ptr %s
  114 = add i32 %112.load, i32 1
  store i32 %114 to ptr %s
  118 = mul i32 %114, i32 4
  119 = ptradd ptr %s, i32 %118
  store i32 %v to ptr %119
  ret 
}

pure i32 is_num(i32 c) {
entry18:
  21 = icmp sge i32 %c, i32 48
  br i1 %21, bb %select.then22, bb %select.else23
select.then22:
  27 = icmp sle i32 %c, i32 57
  br bb %select.exit24
select.else23:
  br bb %select.exit24
select.exit24:
  select25.phi = phi [bb %select.else23, i1 0, bb %select.then22, i1 %27]
  br i1 %select25.phi, bb %then29, bb %else31
then29:
  ret i32 1
else31:
  ret i32 0
}

pure i32 is_space(i32 c) {
entry3:
  6 = icmp eq i32 %c, i32 32
  br i1 %6, bb %select.then, bb %select.else
select.then:
  br bb %select.exit
select.else:
  12 = icmp eq i32 %c, i32 10
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 %12, bb %select.then, i1 1]
  br i1 %select.phi, bb %then, bb %else
then:
  ret i32 1
else:
  ret i32 0
}

external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry294:
  %oprs336 = stack 1024
  %ops335 = stack 1024
  296 = call i32 getint()
  297 = call i32 getch()
  br bb %next_token.while.cond1497
while.cond299:
  count.phi = phi [bb %next_token.if.exit441519, i32 %296, bb %while.body300.split, i32 %308]
  303 = icmp ne i32 %count.phi, i32 0
  br i1 %303, bb %while.body300, bb %while.exit301
while.body300:
  br bb %eval.init.cond
while.body300.split:
  304.ret = phi [bb %eval.then214, i32 -1, bb %eval.then270, i32 -1, bb %eval.while.exit279, i32 %141.load630]
  call void putint(i32 %304.ret)
  call void putch(i32 10)
  308 = sub i32 %count.phi, i32 1
  br bb %while.cond299
while.exit301:
  ret i32 0
eval.init.cond:
  cnt_ptr.phi339 = phi [bb %while.body300, i32 256, bb %eval.init, i32 %cnt.dec343]
  193340 = icmp ne i32 %cnt_ptr.phi339, i32 0
  br i1 %193340, bb %eval.init, bb %eval.init.exit
eval.init:
  cnt.dec343 = sub i32 %cnt_ptr.phi339, i32 1
  offset344 = mul i32 %cnt.dec343, i32 4
  arr.index198345 = ptradd ptr %oprs336, i32 %offset344
  store i32 0 to ptr %arr.index198345
  br bb %eval.init.cond
eval.init.exit:
  br bb %eval.init.cond200
eval.init.cond200:
  cnt_ptr203.phi351 = phi [bb %eval.init.exit, i32 256, bb %eval.init201, i32 %cnt.dec207355]
  205352 = icmp ne i32 %cnt_ptr203.phi351, i32 0
  br i1 %205352, bb %eval.init201, bb %eval.init.exit202
eval.init201:
  cnt.dec207355 = sub i32 %cnt_ptr203.phi351, i32 1
  offset208356 = mul i32 %cnt.dec207355, i32 4
  arr.index210357 = ptradd ptr %ops335, i32 %offset208356
  store i32 0 to ptr %arr.index210357
  br bb %eval.init.cond200
eval.init.exit202:
  cur_token.load211361 = load i32 from ptr @cur_token
  213362 = icmp ne i32 %cur_token.load211361, i32 0
  br i1 %213362, bb %eval.then214, bb %eval.if.exit215
eval.then214:
  call void putch(i32 112)
  call void putch(i32 97)
  call void putch(i32 110)
  call void putch(i32 105)
  call void putch(i32 99)
  call void putch(i32 33)
  call void putch(i32 10)
  br bb %while.body300.split
eval.if.exit215:
  num.load217368 = load i32 from ptr @num
  112.load964 = load i32 from ptr %oprs336
  114965 = add i32 %112.load964, i32 1
  store i32 %114965 to ptr %oprs336
  118967 = mul i32 %114965, i32 4
  119968 = ptradd ptr %oprs336, i32 %118967
  store i32 %num.load217368 to ptr %119968
  br bb %next_token.while.cond1595
eval.while.cond220:
  rhs.phi322373 = phi [bb %next_token.if.exit441617, i32 ub, bb %next_token.if.exit441911, i32 %rhs.phi394]
  lhs.phi318374 = phi [bb %next_token.if.exit441617, i32 ub, bb %next_token.if.exit441911, i32 %lhs.phi395]
  cur_op.phi316375 = phi [bb %next_token.if.exit441617, i32 ub, bb %next_token.if.exit441911, i32 %cur_op.phi396]
  cur_token.load223376 = load i32 from ptr @cur_token
  225377 = icmp eq i32 %cur_token.load223376, i32 1
  br i1 %225377, bb %eval.while.body221, bb %next_token.while.cond1693
eval.while.body221:
  other.load380 = load i32 from ptr @other
  76843 = icmp eq i32 %other.load380, i32 43
  br i1 %76843, bb %get_op_prec.select.then77845, bb %get_op_prec.select.else78847
eval.while.body221.split:
  230381.ret = phi [bb %get_op_prec.then85853, i32 10, bb %get_op_prec.then105874, i32 20, bb %get_op_prec.if.exit106876, i32 0]
  231382 = icmp ne i32 %230381.ret, i32 0
  232383 =  i1 %231382, i1 1
  233384 = zext i1 %232383 to i32
  234385 = icmp ne i32 %233384, i32 0
  br i1 %234385, bb %next_token.while.cond1693, bb %next_token.while.cond1791
eval.while.cond238:
  rhs.phi394 = phi [bb %next_token.if.exit441813, i32 %rhs.phi322373, bb %eval.while.body239.split, i32 %127.load715]
  lhs.phi395 = phi [bb %next_token.if.exit441813, i32 %lhs.phi318374, bb %eval.while.body239.split, i32 %127.load726]
  cur_op.phi396 = phi [bb %next_token.if.exit441813, i32 %cur_op.phi316375, bb %eval.while.body239.split, i32 %127.load704]
  145.load593 = load i32 from ptr %ops335
  242398 = icmp ne i32 %145.load593, i32 0
  br i1 %242398, bb %eval.select.then243, bb %eval.select.else244
eval.while.body239:
  124.load701 = load i32 from ptr %ops335
  126702 = mul i32 %124.load701, i32 4
  127703 = ptradd ptr %ops335, i32 %126702
  127.load704 = load i32 from ptr %127703
  132.load705 = load i32 from ptr %ops335
  134706 = sub i32 %132.load705, i32 1
  store i32 %134706 to ptr %ops335
  124.load712 = load i32 from ptr %oprs336
  126713 = mul i32 %124.load712, i32 4
  127714 = ptradd ptr %oprs336, i32 %126713
  127.load715 = load i32 from ptr %127714
  132.load716 = load i32 from ptr %oprs336
  134717 = sub i32 %132.load716, i32 1
  store i32 %134717 to ptr %oprs336
  124.load723 = load i32 from ptr %oprs336
  126724 = mul i32 %124.load723, i32 4
  127725 = ptradd ptr %oprs336, i32 %126724
  127.load726 = load i32 from ptr %127725
  132.load727 = load i32 from ptr %oprs336
  134728 = sub i32 %132.load727, i32 1
  store i32 %134728 to ptr %oprs336
  152515 = icmp eq i32 %127.load704, i32 43
  br i1 %152515, bb %eval_op.then153517, bb %eval_op.if.exit154520
eval.while.body239.split:
  263404.ret = phi [bb %eval_op.then153517, i32 %157518, bb %eval_op.then160523, i32 %164524, bb %eval_op.then167529, i32 %171530, bb %eval_op.then174535, i32 %178536, bb %eval_op.then181541, i32 %185542, bb %eval_op.if.exit182544, i32 0]
  112.load973 = load i32 from ptr %oprs336
  114974 = add i32 %112.load973, i32 1
  store i32 %114974 to ptr %oprs336
  118976 = mul i32 %114974, i32 4
  119977 = ptradd ptr %oprs336, i32 %118976
  store i32 %263404.ret to ptr %119977
  br bb %eval.while.cond238
eval.while.exit240:
  112.load982 = load i32 from ptr %ops335
  114983 = add i32 %112.load982, i32 1
  store i32 %114983 to ptr %ops335
  118985 = mul i32 %114983, i32 4
  119986 = ptradd ptr %ops335, i32 %118985
  store i32 %other.load380 to ptr %119986
  cur_token.load267409 = load i32 from ptr @cur_token
  269410 = icmp ne i32 %cur_token.load267409, i32 0
  br i1 %269410, bb %eval.then270, bb %eval.if.exit271
eval.select.then243:
  138.load619 = load i32 from ptr %ops335
  140620 = mul i32 %138.load619, i32 4
  141621 = ptradd ptr %ops335, i32 %140620
  141.load622 = load i32 from ptr %141621
  76881 = icmp eq i32 %141.load622, i32 43
  br i1 %76881, bb %get_op_prec.select.then77883, bb %get_op_prec.select.else78885
eval.select.then243.split.split:
  248414.ret = phi [bb %get_op_prec.then85891, i32 10, bb %get_op_prec.then105912, i32 20, bb %get_op_prec.if.exit106914, i32 0]
  251415 = icmp sge i32 %248414.ret, i32 %230381.ret
  br bb %eval.select.exit245
eval.select.else244:
  br bb %eval.select.exit245
eval.select.exit245:
  select246.phi420 = phi [bb %eval.select.else244, i1 0, bb %eval.select.then243.split.split, i1 %251415]
  br i1 %select246.phi420, bb %eval.while.body239, bb %eval.while.exit240
eval.then270:
  call void putch(i32 112)
  call void putch(i32 97)
  call void putch(i32 110)
  call void putch(i32 105)
  call void putch(i32 99)
  call void putch(i32 33)
  call void putch(i32 10)
  br bb %while.body300.split
eval.if.exit271:
  num.load273426 = load i32 from ptr @num
  112.load991 = load i32 from ptr %oprs336
  114992 = add i32 %112.load991, i32 1
  store i32 %114992 to ptr %oprs336
  118994 = mul i32 %114992, i32 4
  119995 = ptradd ptr %oprs336, i32 %118994
  store i32 %num.load273426 to ptr %119995
  br bb %next_token.while.cond1889
eval.while.cond277:
  145.load598 = load i32 from ptr %ops335
  281432 = icmp ne i32 %145.load598, i32 0
  br i1 %281432, bb %eval.while.body278, bb %eval.while.exit279
eval.while.body278:
  124.load734 = load i32 from ptr %ops335
  126735 = mul i32 %124.load734, i32 4
  127736 = ptradd ptr %ops335, i32 %126735
  127.load737 = load i32 from ptr %127736
  132.load738 = load i32 from ptr %ops335
  134739 = sub i32 %132.load738, i32 1
  store i32 %134739 to ptr %ops335
  124.load745 = load i32 from ptr %oprs336
  126746 = mul i32 %124.load745, i32 4
  127747 = ptradd ptr %oprs336, i32 %126746
  127.load748 = load i32 from ptr %127747
  132.load749 = load i32 from ptr %oprs336
  134750 = sub i32 %132.load749, i32 1
  store i32 %134750 to ptr %oprs336
  124.load756 = load i32 from ptr %oprs336
  126757 = mul i32 %124.load756, i32 4
  127758 = ptradd ptr %oprs336, i32 %126757
  127.load759 = load i32 from ptr %127758
  132.load760 = load i32 from ptr %oprs336
  134761 = sub i32 %132.load760, i32 1
  store i32 %134761 to ptr %oprs336
  152549 = icmp eq i32 %127.load737, i32 43
  br i1 %152549, bb %eval_op.then153551, bb %eval_op.if.exit154554
eval.while.body278.split:
  291438.ret = phi [bb %eval_op.then153551, i32 %157552, bb %eval_op.then160557, i32 %164558, bb %eval_op.then167563, i32 %171564, bb %eval_op.then174569, i32 %178570, bb %eval_op.then181575, i32 %185576, bb %eval_op.if.exit182578, i32 0]
  112.load1000 = load i32 from ptr %oprs336
  1141001 = add i32 %112.load1000, i32 1
  store i32 %1141001 to ptr %oprs336
  1181003 = mul i32 %1141001, i32 4
  1191004 = ptradd ptr %oprs336, i32 %1181003
  store i32 %291438.ret to ptr %1191004
  br bb %eval.while.cond277
eval.while.exit279:
  138.load627 = load i32 from ptr %oprs336
  140628 = mul i32 %138.load627, i32 4
  141629 = ptradd ptr %oprs336, i32 %140628
  141.load630 = load i32 from ptr %141629
  br bb %while.body300.split
eval_op.then153517:
  157518 = add i32 %127.load726, i32 %127.load715
  br bb %eval.while.body239.split
eval_op.if.exit154520:
  159521 = icmp eq i32 %127.load704, i32 45
  br i1 %159521, bb %eval_op.then160523, bb %eval_op.if.exit161526
eval_op.then160523:
  164524 = sub i32 %127.load726, i32 %127.load715
  br bb %eval.while.body239.split
eval_op.if.exit161526:
  166527 = icmp eq i32 %127.load704, i32 42
  br i1 %166527, bb %eval_op.then167529, bb %eval_op.if.exit168532
eval_op.then167529:
  171530 = mul i32 %127.load726, i32 %127.load715
  br bb %eval.while.body239.split
eval_op.if.exit168532:
  173533 = icmp eq i32 %127.load704, i32 47
  br i1 %173533, bb %eval_op.then174535, bb %eval_op.if.exit175538
eval_op.then174535:
  178536 = sdiv i32 %127.load726, i32 %127.load715
  br bb %eval.while.body239.split
eval_op.if.exit175538:
  180539 = icmp eq i32 %127.load704, i32 37
  br i1 %180539, bb %eval_op.then181541, bb %eval_op.if.exit182544
eval_op.then181541:
  185542 = srem i32 %127.load726, i32 %127.load715
  br bb %eval.while.body239.split
eval_op.if.exit182544:
  br bb %eval.while.body239.split
eval_op.then153551:
  157552 = add i32 %127.load759, i32 %127.load748
  br bb %eval.while.body278.split
eval_op.if.exit154554:
  159555 = icmp eq i32 %127.load737, i32 45
  br i1 %159555, bb %eval_op.then160557, bb %eval_op.if.exit161560
eval_op.then160557:
  164558 = sub i32 %127.load759, i32 %127.load748
  br bb %eval.while.body278.split
eval_op.if.exit161560:
  166561 = icmp eq i32 %127.load737, i32 42
  br i1 %166561, bb %eval_op.then167563, bb %eval_op.if.exit168566
eval_op.then167563:
  171564 = mul i32 %127.load759, i32 %127.load748
  br bb %eval.while.body278.split
eval_op.if.exit168566:
  173567 = icmp eq i32 %127.load737, i32 47
  br i1 %173567, bb %eval_op.then174569, bb %eval_op.if.exit175572
eval_op.then174569:
  178570 = sdiv i32 %127.load759, i32 %127.load748
  br bb %eval.while.body278.split
eval_op.if.exit175572:
  180573 = icmp eq i32 %127.load737, i32 37
  br i1 %180573, bb %eval_op.then181575, bb %eval_op.if.exit182578
eval_op.then181575:
  185576 = srem i32 %127.load759, i32 %127.load748
  br bb %eval.while.body278.split
eval_op.if.exit182578:
  br bb %eval.while.body278.split
get_op_prec.select.then77845:
  br bb %get_op_prec.select.exit79850
get_op_prec.select.else78847:
  82848 = icmp eq i32 %other.load380, i32 45
  br bb %get_op_prec.select.exit79850
get_op_prec.select.exit79850:
  select80.phi851 = phi [bb %get_op_prec.select.else78847, i1 %82848, bb %get_op_prec.select.then77845, i1 1]
  br i1 %select80.phi851, bb %get_op_prec.then85853, bb %get_op_prec.if.exit86855
get_op_prec.then85853:
  br bb %eval.while.body221.split
get_op_prec.if.exit86855:
  88856 = icmp eq i32 %other.load380, i32 42
  br i1 %88856, bb %get_op_prec.select.then89858, bb %get_op_prec.select.else90860
get_op_prec.select.then89858:
  br bb %get_op_prec.select.exit91863
get_op_prec.select.else90860:
  94861 = icmp eq i32 %other.load380, i32 47
  br bb %get_op_prec.select.exit91863
get_op_prec.select.exit91863:
  select92.phi864 = phi [bb %get_op_prec.select.else90860, i1 %94861, bb %get_op_prec.select.then89858, i1 1]
  br i1 %select92.phi864, bb %get_op_prec.select.then97866, bb %get_op_prec.select.else98868
get_op_prec.select.then97866:
  br bb %get_op_prec.select.exit99871
get_op_prec.select.else98868:
  102869 = icmp eq i32 %other.load380, i32 37
  br bb %get_op_prec.select.exit99871
get_op_prec.select.exit99871:
  select100.phi872 = phi [bb %get_op_prec.select.else98868, i1 %102869, bb %get_op_prec.select.then97866, i1 1]
  br i1 %select100.phi872, bb %get_op_prec.then105874, bb %get_op_prec.if.exit106876
get_op_prec.then105874:
  br bb %eval.while.body221.split
get_op_prec.if.exit106876:
  br bb %eval.while.body221.split
get_op_prec.select.then77883:
  br bb %get_op_prec.select.exit79888
get_op_prec.select.else78885:
  82886 = icmp eq i32 %141.load622, i32 45
  br bb %get_op_prec.select.exit79888
get_op_prec.select.exit79888:
  select80.phi889 = phi [bb %get_op_prec.select.else78885, i1 %82886, bb %get_op_prec.select.then77883, i1 1]
  br i1 %select80.phi889, bb %get_op_prec.then85891, bb %get_op_prec.if.exit86893
get_op_prec.then85891:
  br bb %eval.select.then243.split.split
get_op_prec.if.exit86893:
  88894 = icmp eq i32 %141.load622, i32 42
  br i1 %88894, bb %get_op_prec.select.then89896, bb %get_op_prec.select.else90898
get_op_prec.select.then89896:
  br bb %get_op_prec.select.exit91901
get_op_prec.select.else90898:
  94899 = icmp eq i32 %141.load622, i32 47
  br bb %get_op_prec.select.exit91901
get_op_prec.select.exit91901:
  select92.phi902 = phi [bb %get_op_prec.select.else90898, i1 %94899, bb %get_op_prec.select.then89896, i1 1]
  br i1 %select92.phi902, bb %get_op_prec.select.then97904, bb %get_op_prec.select.else98906
get_op_prec.select.then97904:
  br bb %get_op_prec.select.exit99909
get_op_prec.select.else98906:
  102907 = icmp eq i32 %141.load622, i32 37
  br bb %get_op_prec.select.exit99909
get_op_prec.select.exit99909:
  select100.phi910 = phi [bb %get_op_prec.select.else98906, i1 %102907, bb %get_op_prec.select.then97904, i1 1]
  br i1 %select100.phi910, bb %get_op_prec.then105912, bb %get_op_prec.if.exit106914
get_op_prec.then105912:
  br bb %eval.select.then243.split.split
get_op_prec.if.exit106914:
  br bb %eval.select.then243.split.split
next_token.while.cond1497:
  last_char.load361498 = load i32 from ptr @last_char
  610431577 = icmp eq i32 %last_char.load361498, i32 32
  br i1 %610431577, bb %next_token.is_space.select.then1579, bb %next_token.is_space.select.else1581
next_token.while.cond.split1500:
  37.ret1501 = phi [bb %next_token.is_space.then1587, i32 1, bb %next_token.is_space.else1589, i32 0]
  381502 = icmp ne i32 %37.ret1501, i32 0
  br i1 %381502, bb %next_token.while.body1504, bb %next_token.while.exit1507
next_token.while.body1504:
  12076 = call i32 getch()
  store i32 %12076 to ptr @last_char
  br bb %next_token.while.cond1497
next_token.while.exit1507:
  last_char.load401508 = load i32 from ptr @last_char
  2110091547 = icmp sge i32 %last_char.load401508, i32 48
  br i1 %2110091547, bb %next_token.is_num.select.then221549, bb %next_token.is_num.select.else231552
next_token.while.exit.split1510:
  41.ret1511 = phi [bb %next_token.is_num.then291557, i32 1, bb %next_token.is_num.else311559, i32 0]
  421512 = icmp ne i32 %41.ret1511, i32 0
  br i1 %421512, bb %next_token.then431514, bb %next_token.else451522
next_token.then431514:
  last_char.load461515 = load i32 from ptr @last_char
  471516 = sub i32 %last_char.load461515, i32 48
  store i32 %471516 to ptr @num
  br bb %next_token.while.cond481528
next_token.if.exit441519:
  br bb %while.cond299
next_token.else451522:
  last_char.load601523 = load i32 from ptr @last_char
  store i32 %last_char.load601523 to ptr @other
  12082 = call i32 getch()
  store i32 %12082 to ptr @last_char
  store i32 1 to ptr @cur_token
  br bb %next_token.if.exit441519
next_token.while.cond481528:
  12088 = call i32 getch()
  store i32 %12088 to ptr @last_char
  2110261562 = icmp sge i32 %12088, i32 48
  br i1 %2110261562, bb %next_token.is_num.select.then2210281564, bb %next_token.is_num.select.else2310311567
next_token.while.cond48.split1531:
  52.ret1532 = phi [bb %next_token.is_num.then2910361572, i32 1, bb %next_token.is_num.else3110381574, i32 0]
  531533 = icmp ne i32 %52.ret1532, i32 0
  br i1 %531533, bb %next_token.while.body491535, bb %next_token.while.exit501543
next_token.while.body491535:
  num.load1536 = load i32 from ptr @num
  551537 = mul i32 %num.load1536, i32 10
  last_char.load561538 = load i32 from ptr @last_char
  571539 = add i32 %551537, i32 %last_char.load561538
  581540 = sub i32 %571539, i32 48
  store i32 %581540 to ptr @num
  br bb %next_token.while.cond481528
next_token.while.exit501543:
  store i32 0 to ptr @cur_token
  br bb %next_token.if.exit441519
next_token.is_num.select.then221549:
  2710121550 = icmp sle i32 %last_char.load401508, i32 57
  br bb %next_token.is_num.select.exit241554
next_token.is_num.select.else231552:
  br bb %next_token.is_num.select.exit241554
next_token.is_num.select.exit241554:
  select25.phi10171555 = phi [bb %next_token.is_num.select.else231552, i1 0, bb %next_token.is_num.select.then221549, i1 %2710121550]
  br i1 %select25.phi10171555, bb %next_token.is_num.then291557, bb %next_token.is_num.else311559
next_token.is_num.then291557:
  br bb %next_token.while.exit.split1510
next_token.is_num.else311559:
  br bb %next_token.while.exit.split1510
next_token.is_num.select.then2210281564:
  2710291565 = icmp sle i32 %12088, i32 57
  br bb %next_token.is_num.select.exit2410331569
next_token.is_num.select.else2310311567:
  br bb %next_token.is_num.select.exit2410331569
next_token.is_num.select.exit2410331569:
  select25.phi10341570 = phi [bb %next_token.is_num.select.else2310311567, i1 0, bb %next_token.is_num.select.then2210281564, i1 %2710291565]
  br i1 %select25.phi10341570, bb %next_token.is_num.then2910361572, bb %next_token.is_num.else3110381574
next_token.is_num.then2910361572:
  br bb %next_token.while.cond48.split1531
next_token.is_num.else3110381574:
  br bb %next_token.while.cond48.split1531
next_token.is_space.select.then1579:
  br bb %next_token.is_space.select.exit1584
next_token.is_space.select.else1581:
  1210481582 = icmp eq i32 %last_char.load361498, i32 10
  br bb %next_token.is_space.select.exit1584
next_token.is_space.select.exit1584:
  select.phi10511585 = phi [bb %next_token.is_space.select.else1581, i1 %1210481582, bb %next_token.is_space.select.then1579, i1 1]
  br i1 %select.phi10511585, bb %next_token.is_space.then1587, bb %next_token.is_space.else1589
next_token.is_space.then1587:
  br bb %next_token.while.cond.split1500
next_token.is_space.else1589:
  br bb %next_token.while.cond.split1500
next_token.while.cond1595:
  last_char.load361596 = load i32 from ptr @last_char
  610431675 = icmp eq i32 %last_char.load361596, i32 32
  br i1 %610431675, bb %next_token.is_space.select.then1677, bb %next_token.is_space.select.else1679
next_token.while.cond.split1598:
  37.ret1599 = phi [bb %next_token.is_space.then1685, i32 1, bb %next_token.is_space.else1687, i32 0]
  381600 = icmp ne i32 %37.ret1599, i32 0
  br i1 %381600, bb %next_token.while.body1602, bb %next_token.while.exit1605
next_token.while.body1602:
  12094 = call i32 getch()
  store i32 %12094 to ptr @last_char
  br bb %next_token.while.cond1595
next_token.while.exit1605:
  last_char.load401606 = load i32 from ptr @last_char
  2110091645 = icmp sge i32 %last_char.load401606, i32 48
  br i1 %2110091645, bb %next_token.is_num.select.then221647, bb %next_token.is_num.select.else231650
next_token.while.exit.split1608:
  41.ret1609 = phi [bb %next_token.is_num.then291655, i32 1, bb %next_token.is_num.else311657, i32 0]
  421610 = icmp ne i32 %41.ret1609, i32 0
  br i1 %421610, bb %next_token.then431612, bb %next_token.else451620
next_token.then431612:
  last_char.load461613 = load i32 from ptr @last_char
  471614 = sub i32 %last_char.load461613, i32 48
  store i32 %471614 to ptr @num
  br bb %next_token.while.cond481626
next_token.if.exit441617:
  br bb %eval.while.cond220
next_token.else451620:
  last_char.load601621 = load i32 from ptr @last_char
  store i32 %last_char.load601621 to ptr @other
  12100 = call i32 getch()
  store i32 %12100 to ptr @last_char
  store i32 1 to ptr @cur_token
  br bb %next_token.if.exit441617
next_token.while.cond481626:
  12106 = call i32 getch()
  store i32 %12106 to ptr @last_char
  2110261660 = icmp sge i32 %12106, i32 48
  br i1 %2110261660, bb %next_token.is_num.select.then2210281662, bb %next_token.is_num.select.else2310311665
next_token.while.cond48.split1629:
  52.ret1630 = phi [bb %next_token.is_num.then2910361670, i32 1, bb %next_token.is_num.else3110381672, i32 0]
  531631 = icmp ne i32 %52.ret1630, i32 0
  br i1 %531631, bb %next_token.while.body491633, bb %next_token.while.exit501641
next_token.while.body491633:
  num.load1634 = load i32 from ptr @num
  551635 = mul i32 %num.load1634, i32 10
  last_char.load561636 = load i32 from ptr @last_char
  571637 = add i32 %551635, i32 %last_char.load561636
  581638 = sub i32 %571637, i32 48
  store i32 %581638 to ptr @num
  br bb %next_token.while.cond481626
next_token.while.exit501641:
  store i32 0 to ptr @cur_token
  br bb %next_token.if.exit441617
next_token.is_num.select.then221647:
  2710121648 = icmp sle i32 %last_char.load401606, i32 57
  br bb %next_token.is_num.select.exit241652
next_token.is_num.select.else231650:
  br bb %next_token.is_num.select.exit241652
next_token.is_num.select.exit241652:
  select25.phi10171653 = phi [bb %next_token.is_num.select.else231650, i1 0, bb %next_token.is_num.select.then221647, i1 %2710121648]
  br i1 %select25.phi10171653, bb %next_token.is_num.then291655, bb %next_token.is_num.else311657
next_token.is_num.then291655:
  br bb %next_token.while.exit.split1608
next_token.is_num.else311657:
  br bb %next_token.while.exit.split1608
next_token.is_num.select.then2210281662:
  2710291663 = icmp sle i32 %12106, i32 57
  br bb %next_token.is_num.select.exit2410331667
next_token.is_num.select.else2310311665:
  br bb %next_token.is_num.select.exit2410331667
next_token.is_num.select.exit2410331667:
  select25.phi10341668 = phi [bb %next_token.is_num.select.else2310311665, i1 0, bb %next_token.is_num.select.then2210281662, i1 %2710291663]
  br i1 %select25.phi10341668, bb %next_token.is_num.then2910361670, bb %next_token.is_num.else3110381672
next_token.is_num.then2910361670:
  br bb %next_token.while.cond48.split1629
next_token.is_num.else3110381672:
  br bb %next_token.while.cond48.split1629
next_token.is_space.select.then1677:
  br bb %next_token.is_space.select.exit1682
next_token.is_space.select.else1679:
  1210481680 = icmp eq i32 %last_char.load361596, i32 10
  br bb %next_token.is_space.select.exit1682
next_token.is_space.select.exit1682:
  select.phi10511683 = phi [bb %next_token.is_space.select.else1679, i1 %1210481680, bb %next_token.is_space.select.then1677, i1 1]
  br i1 %select.phi10511683, bb %next_token.is_space.then1685, bb %next_token.is_space.else1687
next_token.is_space.then1685:
  br bb %next_token.while.cond.split1598
next_token.is_space.else1687:
  br bb %next_token.while.cond.split1598
next_token.while.cond1693:
  last_char.load361694 = load i32 from ptr @last_char
  610431773 = icmp eq i32 %last_char.load361694, i32 32
  br i1 %610431773, bb %next_token.is_space.select.then1775, bb %next_token.is_space.select.else1777
next_token.while.cond.split1696:
  37.ret1697 = phi [bb %next_token.is_space.then1783, i32 1, bb %next_token.is_space.else1785, i32 0]
  381698 = icmp ne i32 %37.ret1697, i32 0
  br i1 %381698, bb %next_token.while.body1700, bb %next_token.while.exit1703
next_token.while.body1700:
  12112 = call i32 getch()
  store i32 %12112 to ptr @last_char
  br bb %next_token.while.cond1693
next_token.while.exit1703:
  last_char.load401704 = load i32 from ptr @last_char
  2110091743 = icmp sge i32 %last_char.load401704, i32 48
  br i1 %2110091743, bb %next_token.is_num.select.then221745, bb %next_token.is_num.select.else231748
next_token.while.exit.split1706:
  41.ret1707 = phi [bb %next_token.is_num.then291753, i32 1, bb %next_token.is_num.else311755, i32 0]
  421708 = icmp ne i32 %41.ret1707, i32 0
  br i1 %421708, bb %next_token.then431710, bb %next_token.else451718
next_token.then431710:
  last_char.load461711 = load i32 from ptr @last_char
  471712 = sub i32 %last_char.load461711, i32 48
  store i32 %471712 to ptr @num
  br bb %next_token.while.cond481724
next_token.else451718:
  last_char.load601719 = load i32 from ptr @last_char
  store i32 %last_char.load601719 to ptr @other
  12118 = call i32 getch()
  store i32 %12118 to ptr @last_char
  store i32 1 to ptr @cur_token
  br bb %eval.while.cond277
next_token.while.cond481724:
  12124 = call i32 getch()
  store i32 %12124 to ptr @last_char
  2110261758 = icmp sge i32 %12124, i32 48
  br i1 %2110261758, bb %next_token.is_num.select.then2210281760, bb %next_token.is_num.select.else2310311763
next_token.while.cond48.split1727:
  52.ret1728 = phi [bb %next_token.is_num.then2910361768, i32 1, bb %next_token.is_num.else3110381770, i32 0]
  531729 = icmp ne i32 %52.ret1728, i32 0
  br i1 %531729, bb %next_token.while.body491731, bb %next_token.while.exit501739
next_token.while.body491731:
  num.load1732 = load i32 from ptr @num
  551733 = mul i32 %num.load1732, i32 10
  last_char.load561734 = load i32 from ptr @last_char
  571735 = add i32 %551733, i32 %last_char.load561734
  581736 = sub i32 %571735, i32 48
  store i32 %581736 to ptr @num
  br bb %next_token.while.cond481724
next_token.while.exit501739:
  store i32 0 to ptr @cur_token
  br bb %eval.while.cond277
next_token.is_num.select.then221745:
  2710121746 = icmp sle i32 %last_char.load401704, i32 57
  br bb %next_token.is_num.select.exit241750
next_token.is_num.select.else231748:
  br bb %next_token.is_num.select.exit241750
next_token.is_num.select.exit241750:
  select25.phi10171751 = phi [bb %next_token.is_num.select.else231748, i1 0, bb %next_token.is_num.select.then221745, i1 %2710121746]
  br i1 %select25.phi10171751, bb %next_token.is_num.then291753, bb %next_token.is_num.else311755
next_token.is_num.then291753:
  br bb %next_token.while.exit.split1706
next_token.is_num.else311755:
  br bb %next_token.while.exit.split1706
next_token.is_num.select.then2210281760:
  2710291761 = icmp sle i32 %12124, i32 57
  br bb %next_token.is_num.select.exit2410331765
next_token.is_num.select.else2310311763:
  br bb %next_token.is_num.select.exit2410331765
next_token.is_num.select.exit2410331765:
  select25.phi10341766 = phi [bb %next_token.is_num.select.else2310311763, i1 0, bb %next_token.is_num.select.then2210281760, i1 %2710291761]
  br i1 %select25.phi10341766, bb %next_token.is_num.then2910361768, bb %next_token.is_num.else3110381770
next_token.is_num.then2910361768:
  br bb %next_token.while.cond48.split1727
next_token.is_num.else3110381770:
  br bb %next_token.while.cond48.split1727
next_token.is_space.select.then1775:
  br bb %next_token.is_space.select.exit1780
next_token.is_space.select.else1777:
  1210481778 = icmp eq i32 %last_char.load361694, i32 10
  br bb %next_token.is_space.select.exit1780
next_token.is_space.select.exit1780:
  select.phi10511781 = phi [bb %next_token.is_space.select.else1777, i1 %1210481778, bb %next_token.is_space.select.then1775, i1 1]
  br i1 %select.phi10511781, bb %next_token.is_space.then1783, bb %next_token.is_space.else1785
next_token.is_space.then1783:
  br bb %next_token.while.cond.split1696
next_token.is_space.else1785:
  br bb %next_token.while.cond.split1696
next_token.while.cond1791:
  last_char.load361792 = load i32 from ptr @last_char
  610431871 = icmp eq i32 %last_char.load361792, i32 32
  br i1 %610431871, bb %next_token.is_space.select.then1873, bb %next_token.is_space.select.else1875
next_token.while.cond.split1794:
  37.ret1795 = phi [bb %next_token.is_space.then1881, i32 1, bb %next_token.is_space.else1883, i32 0]
  381796 = icmp ne i32 %37.ret1795, i32 0
  br i1 %381796, bb %next_token.while.body1798, bb %next_token.while.exit1801
next_token.while.body1798:
  12130 = call i32 getch()
  store i32 %12130 to ptr @last_char
  br bb %next_token.while.cond1791
next_token.while.exit1801:
  last_char.load401802 = load i32 from ptr @last_char
  2110091841 = icmp sge i32 %last_char.load401802, i32 48
  br i1 %2110091841, bb %next_token.is_num.select.then221843, bb %next_token.is_num.select.else231846
next_token.while.exit.split1804:
  41.ret1805 = phi [bb %next_token.is_num.then291851, i32 1, bb %next_token.is_num.else311853, i32 0]
  421806 = icmp ne i32 %41.ret1805, i32 0
  br i1 %421806, bb %next_token.then431808, bb %next_token.else451816
next_token.then431808:
  last_char.load461809 = load i32 from ptr @last_char
  471810 = sub i32 %last_char.load461809, i32 48
  store i32 %471810 to ptr @num
  br bb %next_token.while.cond481822
next_token.if.exit441813:
  br bb %eval.while.cond238
next_token.else451816:
  last_char.load601817 = load i32 from ptr @last_char
  store i32 %last_char.load601817 to ptr @other
  12136 = call i32 getch()
  store i32 %12136 to ptr @last_char
  store i32 1 to ptr @cur_token
  br bb %next_token.if.exit441813
next_token.while.cond481822:
  12142 = call i32 getch()
  store i32 %12142 to ptr @last_char
  2110261856 = icmp sge i32 %12142, i32 48
  br i1 %2110261856, bb %next_token.is_num.select.then2210281858, bb %next_token.is_num.select.else2310311861
next_token.while.cond48.split1825:
  52.ret1826 = phi [bb %next_token.is_num.then2910361866, i32 1, bb %next_token.is_num.else3110381868, i32 0]
  531827 = icmp ne i32 %52.ret1826, i32 0
  br i1 %531827, bb %next_token.while.body491829, bb %next_token.while.exit501837
next_token.while.body491829:
  num.load1830 = load i32 from ptr @num
  551831 = mul i32 %num.load1830, i32 10
  last_char.load561832 = load i32 from ptr @last_char
  571833 = add i32 %551831, i32 %last_char.load561832
  581834 = sub i32 %571833, i32 48
  store i32 %581834 to ptr @num
  br bb %next_token.while.cond481822
next_token.while.exit501837:
  store i32 0 to ptr @cur_token
  br bb %next_token.if.exit441813
next_token.is_num.select.then221843:
  2710121844 = icmp sle i32 %last_char.load401802, i32 57
  br bb %next_token.is_num.select.exit241848
next_token.is_num.select.else231846:
  br bb %next_token.is_num.select.exit241848
next_token.is_num.select.exit241848:
  select25.phi10171849 = phi [bb %next_token.is_num.select.else231846, i1 0, bb %next_token.is_num.select.then221843, i1 %2710121844]
  br i1 %select25.phi10171849, bb %next_token.is_num.then291851, bb %next_token.is_num.else311853
next_token.is_num.then291851:
  br bb %next_token.while.exit.split1804
next_token.is_num.else311853:
  br bb %next_token.while.exit.split1804
next_token.is_num.select.then2210281858:
  2710291859 = icmp sle i32 %12142, i32 57
  br bb %next_token.is_num.select.exit2410331863
next_token.is_num.select.else2310311861:
  br bb %next_token.is_num.select.exit2410331863
next_token.is_num.select.exit2410331863:
  select25.phi10341864 = phi [bb %next_token.is_num.select.else2310311861, i1 0, bb %next_token.is_num.select.then2210281858, i1 %2710291859]
  br i1 %select25.phi10341864, bb %next_token.is_num.then2910361866, bb %next_token.is_num.else3110381868
next_token.is_num.then2910361866:
  br bb %next_token.while.cond48.split1825
next_token.is_num.else3110381868:
  br bb %next_token.while.cond48.split1825
next_token.is_space.select.then1873:
  br bb %next_token.is_space.select.exit1878
next_token.is_space.select.else1875:
  1210481876 = icmp eq i32 %last_char.load361792, i32 10
  br bb %next_token.is_space.select.exit1878
next_token.is_space.select.exit1878:
  select.phi10511879 = phi [bb %next_token.is_space.select.else1875, i1 %1210481876, bb %next_token.is_space.select.then1873, i1 1]
  br i1 %select.phi10511879, bb %next_token.is_space.then1881, bb %next_token.is_space.else1883
next_token.is_space.then1881:
  br bb %next_token.while.cond.split1794
next_token.is_space.else1883:
  br bb %next_token.while.cond.split1794
next_token.while.cond1889:
  last_char.load361890 = load i32 from ptr @last_char
  610431969 = icmp eq i32 %last_char.load361890, i32 32
  br i1 %610431969, bb %next_token.is_space.select.then1971, bb %next_token.is_space.select.else1973
next_token.while.cond.split1892:
  37.ret1893 = phi [bb %next_token.is_space.then1979, i32 1, bb %next_token.is_space.else1981, i32 0]
  381894 = icmp ne i32 %37.ret1893, i32 0
  br i1 %381894, bb %next_token.while.body1896, bb %next_token.while.exit1899
next_token.while.body1896:
  12148 = call i32 getch()
  store i32 %12148 to ptr @last_char
  br bb %next_token.while.cond1889
next_token.while.exit1899:
  last_char.load401900 = load i32 from ptr @last_char
  2110091939 = icmp sge i32 %last_char.load401900, i32 48
  br i1 %2110091939, bb %next_token.is_num.select.then221941, bb %next_token.is_num.select.else231944
next_token.while.exit.split1902:
  41.ret1903 = phi [bb %next_token.is_num.then291949, i32 1, bb %next_token.is_num.else311951, i32 0]
  421904 = icmp ne i32 %41.ret1903, i32 0
  br i1 %421904, bb %next_token.then431906, bb %next_token.else451914
next_token.then431906:
  last_char.load461907 = load i32 from ptr @last_char
  471908 = sub i32 %last_char.load461907, i32 48
  store i32 %471908 to ptr @num
  br bb %next_token.while.cond481920
next_token.if.exit441911:
  br bb %eval.while.cond220
next_token.else451914:
  last_char.load601915 = load i32 from ptr @last_char
  store i32 %last_char.load601915 to ptr @other
  12154 = call i32 getch()
  store i32 %12154 to ptr @last_char
  store i32 1 to ptr @cur_token
  br bb %next_token.if.exit441911
next_token.while.cond481920:
  12160 = call i32 getch()
  store i32 %12160 to ptr @last_char
  2110261954 = icmp sge i32 %12160, i32 48
  br i1 %2110261954, bb %next_token.is_num.select.then2210281956, bb %next_token.is_num.select.else2310311959
next_token.while.cond48.split1923:
  52.ret1924 = phi [bb %next_token.is_num.then2910361964, i32 1, bb %next_token.is_num.else3110381966, i32 0]
  531925 = icmp ne i32 %52.ret1924, i32 0
  br i1 %531925, bb %next_token.while.body491927, bb %next_token.while.exit501935
next_token.while.body491927:
  num.load1928 = load i32 from ptr @num
  551929 = mul i32 %num.load1928, i32 10
  last_char.load561930 = load i32 from ptr @last_char
  571931 = add i32 %551929, i32 %last_char.load561930
  581932 = sub i32 %571931, i32 48
  store i32 %581932 to ptr @num
  br bb %next_token.while.cond481920
next_token.while.exit501935:
  store i32 0 to ptr @cur_token
  br bb %next_token.if.exit441911
next_token.is_num.select.then221941:
  2710121942 = icmp sle i32 %last_char.load401900, i32 57
  br bb %next_token.is_num.select.exit241946
next_token.is_num.select.else231944:
  br bb %next_token.is_num.select.exit241946
next_token.is_num.select.exit241946:
  select25.phi10171947 = phi [bb %next_token.is_num.select.else231944, i1 0, bb %next_token.is_num.select.then221941, i1 %2710121942]
  br i1 %select25.phi10171947, bb %next_token.is_num.then291949, bb %next_token.is_num.else311951
next_token.is_num.then291949:
  br bb %next_token.while.exit.split1902
next_token.is_num.else311951:
  br bb %next_token.while.exit.split1902
next_token.is_num.select.then2210281956:
  2710291957 = icmp sle i32 %12160, i32 57
  br bb %next_token.is_num.select.exit2410331961
next_token.is_num.select.else2310311959:
  br bb %next_token.is_num.select.exit2410331961
next_token.is_num.select.exit2410331961:
  select25.phi10341962 = phi [bb %next_token.is_num.select.else2310311959, i1 0, bb %next_token.is_num.select.then2210281956, i1 %2710291957]
  br i1 %select25.phi10341962, bb %next_token.is_num.then2910361964, bb %next_token.is_num.else3110381966
next_token.is_num.then2910361964:
  br bb %next_token.while.cond48.split1923
next_token.is_num.else3110381966:
  br bb %next_token.while.cond48.split1923
next_token.is_space.select.then1971:
  br bb %next_token.is_space.select.exit1976
next_token.is_space.select.else1973:
  1210481974 = icmp eq i32 %last_char.load361890, i32 10
  br bb %next_token.is_space.select.exit1976
next_token.is_space.select.exit1976:
  select.phi10511977 = phi [bb %next_token.is_space.select.else1973, i1 %1210481974, bb %next_token.is_space.select.then1971, i1 1]
  br i1 %select.phi10511977, bb %next_token.is_space.then1979, bb %next_token.is_space.else1981
next_token.is_space.then1979:
  br bb %next_token.while.cond.split1892
next_token.is_space.else1981:
  br bb %next_token.while.cond.split1892
}

i32 panic() {
entry64:
  call void putch(i32 112)
  call void putch(i32 97)
  call void putch(i32 110)
  call void putch(i32 105)
  call void putch(i32 99)
  call void putch(i32 33)
  call void putch(i32 10)
  ret i32 -1
}

external float getfloat()

external void putfloat(float )

i32 next_token() {
entry32:
  br bb %while.cond
while.cond:
  last_char.load36 = load i32 from ptr @last_char
  61043 = icmp eq i32 %last_char.load36, i32 32
  br i1 %61043, bb %is_space.select.then, bb %is_space.select.else
while.cond.split:
  37.ret = phi [bb %is_space.then, i32 1, bb %is_space.else, i32 0]
  38 = icmp ne i32 %37.ret, i32 0
  br i1 %38, bb %while.body, bb %while.exit
while.body:
  11986 = call i32 getch()
  store i32 %11986 to ptr @last_char
  br bb %while.cond
while.exit:
  last_char.load40 = load i32 from ptr @last_char
  211009 = icmp sge i32 %last_char.load40, i32 48
  br i1 %211009, bb %is_num.select.then22, bb %is_num.select.else23
while.exit.split:
  41.ret = phi [bb %is_num.then29, i32 1, bb %is_num.else31, i32 0]
  42 = icmp ne i32 %41.ret, i32 0
  br i1 %42, bb %then43, bb %else45
then43:
  last_char.load46 = load i32 from ptr @last_char
  47 = sub i32 %last_char.load46, i32 48
  store i32 %47 to ptr @num
  br bb %while.cond48
if.exit44:
  cur_token.load = load i32 from ptr @cur_token
  ret i32 %cur_token.load
else45:
  last_char.load60 = load i32 from ptr @last_char
  store i32 %last_char.load60 to ptr @other
  11998 = call i32 getch()
  store i32 %11998 to ptr @last_char
  store i32 1 to ptr @cur_token
  br bb %if.exit44
while.cond48:
  11992 = call i32 getch()
  store i32 %11992 to ptr @last_char
  211026 = icmp sge i32 %11992, i32 48
  br i1 %211026, bb %is_num.select.then221028, bb %is_num.select.else231031
while.cond48.split:
  52.ret = phi [bb %is_num.then291036, i32 1, bb %is_num.else311038, i32 0]
  53 = icmp ne i32 %52.ret, i32 0
  br i1 %53, bb %while.body49, bb %while.exit50
while.body49:
  num.load = load i32 from ptr @num
  55 = mul i32 %num.load, i32 10
  last_char.load56 = load i32 from ptr @last_char
  57 = add i32 %55, i32 %last_char.load56
  58 = sub i32 %57, i32 48
  store i32 %58 to ptr @num
  br bb %while.cond48
while.exit50:
  store i32 0 to ptr @cur_token
  br bb %if.exit44
is_num.select.then22:
  271012 = icmp sle i32 %last_char.load40, i32 57
  br bb %is_num.select.exit24
is_num.select.else23:
  br bb %is_num.select.exit24
is_num.select.exit24:
  select25.phi1017 = phi [bb %is_num.select.else23, i1 0, bb %is_num.select.then22, i1 %271012]
  br i1 %select25.phi1017, bb %is_num.then29, bb %is_num.else31
is_num.then29:
  br bb %while.exit.split
is_num.else31:
  br bb %while.exit.split
is_num.select.then221028:
  271029 = icmp sle i32 %11992, i32 57
  br bb %is_num.select.exit241033
is_num.select.else231031:
  br bb %is_num.select.exit241033
is_num.select.exit241033:
  select25.phi1034 = phi [bb %is_num.select.else231031, i1 0, bb %is_num.select.then221028, i1 %271029]
  br i1 %select25.phi1034, bb %is_num.then291036, bb %is_num.else311038
is_num.then291036:
  br bb %while.cond48.split
is_num.else311038:
  br bb %while.cond48.split
is_space.select.then:
  br bb %is_space.select.exit
is_space.select.else:
  121048 = icmp eq i32 %last_char.load36, i32 10
  br bb %is_space.select.exit
is_space.select.exit:
  select.phi1051 = phi [bb %is_space.select.else, i1 %121048, bb %is_space.select.then, i1 1]
  br i1 %select.phi1051, bb %is_space.then, bb %is_space.else
is_space.then:
  br bb %while.cond.split
is_space.else:
  br bb %while.cond.split
}

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

external void putarray(i32 , ptr )

i32 next_char() {
entry:
  1 = call i32 getch()
  store i32 %1 to ptr @last_char
  ret i32 %1
}


