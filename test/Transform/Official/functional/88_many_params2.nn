external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry50:
  %b = stack 12508
  %a = stack 16348
  br bb %init.cond
init.cond:
  cnt_ptr.phi = phi [bb %entry50, i32 4087, bb %init, i32 %cnt.dec]
  57 = icmp ne i32 %cnt_ptr.phi, i32 0
  br i1 %57, bb %init, bb %init.exit
init:
  cnt.dec = sub i32 %cnt_ptr.phi, i32 1
  offset = mul i32 %cnt.dec, i32 4
  arr.index62 = ptradd ptr %a, i32 %offset
  store i32 0 to ptr %arr.index62
  br bb %init.cond
init.exit:
  br bb %init.cond64
init.cond64:
  cnt_ptr67.phi = phi [bb %init.exit, i32 3127, bb %init65, i32 %cnt.dec71]
  69 = icmp ne i32 %cnt_ptr67.phi, i32 0
  br i1 %69, bb %init65, bb %init.exit66
init65:
  cnt.dec71 = sub i32 %cnt_ptr67.phi, i32 1
  offset72 = mul i32 %cnt.dec71, i32 4
  arr.index74 = ptradd ptr %b, i32 %offset72
  store i32 0 to ptr %arr.index74
  br bb %init.cond64
init.exit66:
  174 = ptradd ptr %a, i32 4560
  store i32 6 to ptr %174
  176 = ptradd ptr %a, i32 4568
  store i32 7 to ptr %176
  178 = ptradd ptr %a, i32 4572
  store i32 4 to ptr %178
  180 = ptradd ptr %a, i32 4584
  store i32 9 to ptr %180
  182 = ptradd ptr %a, i32 4600
  store i32 11 to ptr %182
  184 = ptradd ptr %b, i32 1420
  store i32 1 to ptr %184
  186 = ptradd ptr %b, i32 1424
  store i32 2 to ptr %186
  188 = ptradd ptr %b, i32 1428
  store i32 3 to ptr %188
  190 = ptradd ptr %b, i32 1452
  store i32 9 to ptr %190
  115.load = load i32 from ptr %174
  120.load = load i32 from ptr %176
  123 = ptradd ptr %a, i32 4556
  127.load = load i32 from ptr %188
  198 = ptradd ptr %b, i32 1416
  132.load = load i32 from ptr %198
  200 = ptradd ptr %b, i32 8040
  139.load = load i32 from ptr %200
  202 = ptradd ptr %b, i32 12108
  144.load = load i32 from ptr %202
  br bb %func.while.cond
while.cond148:
  ret.phi = phi [bb %func.while.exit33, i32 %147, bb %while.body149, i32 %163]
  152 = icmp sge i32 %ret.phi, i32 0
  br i1 %152, bb %while.body149, bb %while.exit150
while.body149:
  157 = mul i32 %ret.phi, i32 4
  158 = ptradd ptr %198, i32 %157
  158.load = load i32 from ptr %158
  call void putint(i32 %158.load)
  call void putch(i32 32)
  163 = sub i32 %ret.phi, i32 1
  br bb %while.cond148
while.exit150:
  call void putch(i32 10)
  ret i32 0
func.while.cond:
  index.phi207 = phi [bb %init.exit66, i32 0, bb %func.while.body, i32 %23217]
  12208 = icmp slt i32 %index.phi207, i32 10
  br i1 %12208, bb %func.while.body, bb %func.while.exit
func.while.body:
  15211 = mul i32 %115.load, i32 236
  16212 = ptradd ptr %b, i32 %15211
  18213 = mul i32 %index.phi207, i32 4
  19214 = ptradd ptr %16212, i32 %18213
  19.load215 = load i32 from ptr %19214
  call void putint(i32 %19.load215)
  23217 = add i32 %index.phi207, i32 1
  br bb %func.while.cond
func.while.exit:
  call void putch(i32 10)
  26221 = mul i32 %120.load, i32 4
  27222 = ptradd ptr %123, i32 %26221
  27.load223 = load i32 from ptr %27222
  call void putint(i32 %27.load223)
  call void putch(i32 10)
  br bb %func.while.cond31
func.while.cond31:
  i.stack.phi228 = phi [bb %func.while.exit, i32 %144.load, bb %func.while.body32, i32 %44238]
  h.stack.phi229 = phi [bb %func.while.exit, i32 %139.load, bb %func.while.body32, i32 %46239]
  35230 = icmp slt i32 %i.stack.phi228, i32 10
  br i1 %35230, bb %func.while.body32, bb %func.while.exit33
func.while.body32:
  38233 = mul i32 %i.stack.phi228, i32 4
  39234 = ptradd ptr %198, i32 %38233
  41235 = mul i32 %h.stack.phi229, i32 128875
  42236 = srem i32 %41235, i32 3724
  store i32 %42236 to ptr %39234
  44238 = add i32 %i.stack.phi228, i32 1
  46239 = add i32 %h.stack.phi229, i32 7
  br bb %func.while.cond31
func.while.exit33:
  49242 = add i32 %127.load, i32 %132.load
  147 = mul i32 %49242, i32 3
  br bb %while.cond148
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

i32 func(i32 a, ptr b, i32 c, ptr d, i32 e, i32 f, ptr g, i32 h, i32 i) {
entry:
  br bb %while.cond
while.cond:
  index.phi = phi [bb %entry, i32 0, bb %while.body, i32 %23]
  12 = icmp slt i32 %index.phi, i32 10
  br i1 %12, bb %while.body, bb %while.exit
while.body:
  15 = mul i32 %a, i32 236
  16 = ptradd ptr %b, i32 %15
  18 = mul i32 %index.phi, i32 4
  19 = ptradd ptr %16, i32 %18
  19.load = load i32 from ptr %19
  call void putint(i32 %19.load)
  23 = add i32 %index.phi, i32 1
  br bb %while.cond
while.exit:
  call void putch(i32 10)
  26 = mul i32 %c, i32 4
  27 = ptradd ptr %d, i32 %26
  27.load = load i32 from ptr %27
  call void putint(i32 %27.load)
  call void putch(i32 10)
  br bb %while.cond31
while.cond31:
  i.stack.phi = phi [bb %while.exit, i32 %i, bb %while.body32, i32 %44]
  h.stack.phi = phi [bb %while.exit, i32 %h, bb %while.body32, i32 %46]
  35 = icmp slt i32 %i.stack.phi, i32 10
  br i1 %35, bb %while.body32, bb %while.exit33
while.body32:
  38 = mul i32 %i.stack.phi, i32 4
  39 = ptradd ptr %g, i32 %38
  41 = mul i32 %h.stack.phi, i32 128875
  42 = srem i32 %41, i32 3724
  store i32 %42 to ptr %39
  44 = add i32 %i.stack.phi, i32 1
  46 = add i32 %h.stack.phi, i32 7
  br bb %while.cond31
while.exit33:
  49 = add i32 %e, i32 %f
  ret i32 %49
}


