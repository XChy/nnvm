global ptr g init with i32 0
external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry8:
  %select76 = stack 1
  %select59 = stack 1
  %select44 = stack 1
  %select30 = stack 1
  %select = stack 1
  %i = stack 4
  10 = call i32 getint()
  store i32 %10 to ptr %i
  12 = icmp sgt i32 %10, i32 10
  br i1 %12, bb %select.then, bb %select.else
select.then:
  i.load17 = load i32 from ptr %i
  18 = call i32 func(i32 %i.load17)
  19 = icmp ne i32 %18, i32 0
  store i1 %19 to ptr %select
  br bb %select.exit
select.else:
  store i1 0 to ptr %select
  br bb %select.exit
select.exit:
  20 = load i1 from ptr %select
  br i1 %20, bb %then, bb %else
then:
  store i32 1 to ptr %i
  br bb %if.exit
if.exit:
  24 = call i32 getint()
  store i32 %24 to ptr %i
  26 = icmp sgt i32 %24, i32 11
  br i1 %26, bb %select.then27, bb %select.else28
else:
  store i32 0 to ptr %i
  br bb %if.exit
select.then27:
  i.load31 = load i32 from ptr %i
  32 = call i32 func(i32 %i.load31)
  33 = icmp ne i32 %32, i32 0
  store i1 %33 to ptr %select30
  br bb %select.exit29
select.else28:
  store i1 0 to ptr %select30
  br bb %select.exit29
select.exit29:
  34 = load i1 from ptr %select30
  br i1 %34, bb %then35, bb %else37
then35:
  store i32 1 to ptr %i
  br bb %if.exit36
if.exit36:
  38 = call i32 getint()
  store i32 %38 to ptr %i
  40 = icmp sle i32 %38, i32 99
  br i1 %40, bb %select.then41, bb %select.else42
else37:
  store i32 0 to ptr %i
  br bb %if.exit36
select.then41:
  store i1 1 to ptr %select44
  br bb %select.exit43
select.else42:
  i.load45 = load i32 from ptr %i
  46 = call i32 func(i32 %i.load45)
  47 = icmp ne i32 %46, i32 0
  48 = icmp ne i1 %47, i1 0
  store i1 %48 to ptr %select44
  br bb %select.exit43
select.exit43:
  49 = load i1 from ptr %select44
  br i1 %49, bb %then50, bb %else52
then50:
  store i32 1 to ptr %i
  br bb %if.exit51
if.exit51:
  53 = call i32 getint()
  store i32 %53 to ptr %i
  55 = icmp sle i32 %53, i32 100
  br i1 %55, bb %select.then56, bb %select.else57
else52:
  store i32 0 to ptr %i
  br bb %if.exit51
select.then56:
  store i1 1 to ptr %select59
  br bb %select.exit58
select.else57:
  i.load60 = load i32 from ptr %i
  61 = call i32 func(i32 %i.load60)
  62 = icmp ne i32 %61, i32 0
  63 = icmp ne i1 %62, i1 0
  store i1 %63 to ptr %select59
  br bb %select.exit58
select.exit58:
  64 = load i1 from ptr %select59
  br i1 %64, bb %then65, bb %else67
then65:
  store i32 1 to ptr %i
  br bb %if.exit66
if.exit66:
  68 = call i32 func(i32 99)
  69 = icmp ne i32 %68, i32 0
  70 =  i1 %69, i1 1
  71 = zext i1 %70 to i32
  72 = icmp ne i32 %71, i32 0
  br i1 %72, bb %select.then73, bb %select.else74
else67:
  store i32 0 to ptr %i
  br bb %if.exit66
select.then73:
  77 = call i32 func(i32 100)
  78 = icmp ne i32 %77, i32 0
  store i1 %78 to ptr %select76
  br bb %select.exit75
select.else74:
  store i1 0 to ptr %select76
  br bb %select.exit75
select.exit75:
  79 = load i1 from ptr %select76
  br i1 %79, bb %then80, bb %else82
then80:
  store i32 1 to ptr %i
  br bb %if.exit81
if.exit81:
  ret i32 0
else82:
  store i32 0 to ptr %i
  br bb %if.exit81
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

i32 func(i32 n) {
entry:
  %n.stack = stack 4
  store i32 %n to ptr %n.stack
  g.load = load i32 from ptr @g
  4 = add i32 %g.load, i32 %n
  store i32 %4 to ptr @g
  call void putint(i32 %4)
  g.load7 = load i32 from ptr @g
  ret i32 %g.load7
}


