immutable internal global ptr len init with i32 20
i32 main() {
entry:  pred()
  %result = stack 160
  %c2 = stack 100
  %c1 = stack 100
  %mult2 = stack 80
  %mult1 = stack 80
  store i32 1 to ptr %mult1
  arr.index8 = ptradd ptr %mult1, i32 4
  store i32 2 to ptr %arr.index8
  arr.index9 = ptradd ptr %mult1, i32 8
  store i32 3 to ptr %arr.index9
  arr.index10 = ptradd ptr %mult1, i32 12
  store i32 4 to ptr %arr.index10
  arr.index11 = ptradd ptr %mult1, i32 16
  store i32 5 to ptr %arr.index11
  arr.index12 = ptradd ptr %mult1, i32 20
  store i32 6 to ptr %arr.index12
  arr.index13 = ptradd ptr %mult1, i32 24
  store i32 7 to ptr %arr.index13
  arr.index14 = ptradd ptr %mult1, i32 28
  store i32 8 to ptr %arr.index14
  arr.index15 = ptradd ptr %mult1, i32 32
  store i32 9 to ptr %arr.index15
  arr.index16 = ptradd ptr %mult1, i32 36
  store i32 0 to ptr %arr.index16
  arr.index17 = ptradd ptr %mult1, i32 40
  store i32 1 to ptr %arr.index17
  arr.index18 = ptradd ptr %mult1, i32 44
  store i32 2 to ptr %arr.index18
  arr.index19 = ptradd ptr %mult1, i32 48
  store i32 3 to ptr %arr.index19
  arr.index20 = ptradd ptr %mult1, i32 52
  store i32 4 to ptr %arr.index20
  arr.index21 = ptradd ptr %mult1, i32 56
  store i32 5 to ptr %arr.index21
  arr.index22 = ptradd ptr %mult1, i32 60
  store i32 6 to ptr %arr.index22
  arr.index23 = ptradd ptr %mult1, i32 64
  store i32 7 to ptr %arr.index23
  arr.index24 = ptradd ptr %mult1, i32 68
  store i32 8 to ptr %arr.index24
  arr.index25 = ptradd ptr %mult1, i32 72
  store i32 9 to ptr %arr.index25
  arr.index26 = ptradd ptr %mult1, i32 76
  store i32 0 to ptr %arr.index26
  store i32 2 to ptr %mult2
  arr.index29 = ptradd ptr %mult2, i32 4
  store i32 3 to ptr %arr.index29
  arr.index30 = ptradd ptr %mult2, i32 8
  store i32 4 to ptr %arr.index30
  arr.index31 = ptradd ptr %mult2, i32 12
  store i32 2 to ptr %arr.index31
  arr.index32 = ptradd ptr %mult2, i32 16
  store i32 5 to ptr %arr.index32
  arr.index33 = ptradd ptr %mult2, i32 20
  store i32 7 to ptr %arr.index33
  arr.index34 = ptradd ptr %mult2, i32 24
  store i32 9 to ptr %arr.index34
  arr.index35 = ptradd ptr %mult2, i32 28
  store i32 9 to ptr %arr.index35
  arr.index36 = ptradd ptr %mult2, i32 32
  store i32 0 to ptr %arr.index36
  arr.index37 = ptradd ptr %mult2, i32 36
  store i32 1 to ptr %arr.index37
  arr.index38 = ptradd ptr %mult2, i32 40
  store i32 9 to ptr %arr.index38
  arr.index39 = ptradd ptr %mult2, i32 44
  store i32 8 to ptr %arr.index39
  arr.index40 = ptradd ptr %mult2, i32 48
  store i32 7 to ptr %arr.index40
  arr.index41 = ptradd ptr %mult2, i32 52
  store i32 6 to ptr %arr.index41
  arr.index42 = ptradd ptr %mult2, i32 56
  store i32 4 to ptr %arr.index42
  arr.index43 = ptradd ptr %mult2, i32 60
  store i32 3 to ptr %arr.index43
  arr.index44 = ptradd ptr %mult2, i32 64
  store i32 2 to ptr %arr.index44
  arr.index45 = ptradd ptr %mult2, i32 68
  store i32 1 to ptr %arr.index45
  arr.index46 = ptradd ptr %mult2, i32 72
  store i32 2 to ptr %arr.index46
  arr.index47 = ptradd ptr %mult2, i32 76
  store i32 2 to ptr %arr.index47
  br bb %init
init:  pred(init, entry)
  cnt_ptr.phi282 = phi [bb %init, i32 %cnt.dec, bb %entry, i32 40]
  cnt.dec = sub i32 %cnt_ptr.phi282, i32 1
  246 = shl i32 %cnt.dec, i32 2
  arr.index65 = ptradd ptr %result, i32 %246
  store i32 0 to ptr %arr.index65
  60 = icmp ne i32 %cnt.dec, i32 0
  br i1 %60, bb %init, bb %init.exit
init.exit:  pred(init)
  br bb %while.body
while.body:  pred(while.body, init.exit)
  i.phi242280 = phi [bb %while.body, i32 %84, bb %init.exit, i32 0]
  248 = shl i32 %i.phi242280, i32 2
  76 = ptradd ptr %c1, i32 %248
  80 = ptradd ptr %mult1, i32 %248
  80.load = load i32 from ptr %80
  store i32 %80.load to ptr %76
  84 = add i32 %i.phi242280, i32 1
  72 = icmp slt i32 %84, i32 20
  br i1 %72, bb %while.body, bb %while.exit
while.exit:  pred(while.body)
  br bb %while.body87
while.body87:  pred(while.body87, while.exit)
  i.phi241278 = phi [bb %while.body87, i32 %103, bb %while.exit, i32 0]
  250 = shl i32 %i.phi241278, i32 2
  95 = ptradd ptr %c2, i32 %250
  99 = ptradd ptr %mult2, i32 %250
  99.load = load i32 from ptr %99
  store i32 %99.load to ptr %95
  103 = add i32 %i.phi241278, i32 1
  91 = icmp slt i32 %103, i32 20
  br i1 %91, bb %while.body87, bb %while.exit88
while.exit88:  pred(while.body87)
  115275 = icmp sle i32 0, i32 39
  br i1 %115275, bb %while.body111_preheader, bb %while.exit112
while.body111_preheader:  pred(while.exit88)
  br bb %while.body111
while.body111:  pred(while.body111, while.body111_preheader)
  i.phi240276 = phi [bb %while.body111, i32 %123, bb %while.body111_preheader, i32 0]
  252 = shl i32 %i.phi240276, i32 2
  119 = ptradd ptr %result, i32 %252
  store i32 0 to ptr %119
  123 = add i32 %i.phi240276, i32 1
  115 = icmp sle i32 %123, i32 39
  br i1 %115, bb %while.body111, bb %while.exit112
while.exit112:  pred(while.body111, while.exit88)
  br bb %while.body129
while.body129:  pred(while.exit145, while.exit112)
  temp.phi236274 = phi [bb %while.exit145, i32 %temp.phi236265, bb %while.exit112, i32 0]
  i.phi239273 = phi [bb %while.exit145, i32 %203, bb %while.exit112, i32 19]
  n.phi244272 = phi [bb %while.exit145, i32 %257, bb %while.exit112, i32 39]
  253 = shl i32 %i.phi239273, i32 2
  138 = ptradd ptr %c2, i32 %253
  138.load = load i32 from ptr %138
  br bb %while.body144
while.exit130:  pred(while.exit145)
  205.load = load i32 from ptr %result
  207 = icmp ne i32 %205.load, i32 0
  br i1 %207, bb %then208, bb %if.exit209
while.body144:  pred(if.exit, while.body129)
  j.phi268 = phi [bb %if.exit, i32 %192, bb %while.body129, i32 19]
  n.phi266 = phi [bb %if.exit, i32 %195, bb %while.body129, i32 %n.phi244272]
  254 = shl i32 %n.phi266, i32 2
  153 = ptradd ptr %result, i32 %254
  153.load = load i32 from ptr %153
  255 = shl i32 %j.phi268, i32 2
  158 = ptradd ptr %c1, i32 %255
  158.load = load i32 from ptr %158
  160 = mul i32 %138.load, i32 %158.load
  161 = add i32 %153.load, i32 %160
  163 = icmp sge i32 %161, i32 10
  br i1 %163, bb %then, bb %else
while.exit145:  pred(if.exit)
  temp.phi236265 = phi [bb %if.exit, i32 %161]
  n.phi244264 = phi [bb %if.exit, i32 %195]
  257 = add i32 %n.phi244264, i32 19
  203 = sub i32 %i.phi239273, i32 1
  133 = icmp sgt i32 %203, i32 -1
  br i1 %133, bb %while.body129, bb %while.exit130
then:  pred(while.body144)
  store i32 %161 to ptr %153
  173 = sub i32 %n.phi266, i32 1
  259 = shl i32 %173, i32 2
  175 = ptradd ptr %result, i32 %259
  180.load = load i32 from ptr %175
  183 = sdiv i32 %161, i32 10
  184 = add i32 %180.load, i32 %183
  store i32 %184 to ptr %175
  br bb %if.exit
if.exit:  pred(then, else)
  192 = sub i32 %j.phi268, i32 1
  195 = sub i32 %n.phi266, i32 1
  148 = icmp sgt i32 %192, i32 -1
  br i1 %148, bb %while.body144, bb %while.exit145
else:  pred(while.body144)
  store i32 %161 to ptr %153
  br bb %if.exit
then208:  pred(while.exit130)
  211.load = load i32 from ptr %result
  call void putint(i32 %211.load)
  br bb %if.exit209
if.exit209:  pred(while.exit130, then208)
  223269 = icmp sle i32 1, i32 39
  br i1 %223269, bb %while.body216_preheader, bb %while.exit217
while.body216_preheader:  pred(if.exit209)
  br bb %while.body216
while.body216:  pred(while.body216, while.body216_preheader)
  i.phi270 = phi [bb %while.body216, i32 %232, bb %while.body216_preheader, i32 1]
  262 = shl i32 %i.phi270, i32 2
  227 = ptradd ptr %result, i32 %262
  227.load = load i32 from ptr %227
  call void putint(i32 %227.load)
  232 = add i32 %i.phi270, i32 1
  223 = icmp sle i32 %232, i32 39
  br i1 %223, bb %while.body216, bb %while.exit217
while.exit217:  pred(while.body216, if.exit209)
  ret i32 0
}

external void putfarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putarray(i32 , ptr )

external void _sysy_stoptime(i32 )

external void putch(i32 )

external void putfloat(float )

external i32 getfarray(ptr )

external i32 getarray(ptr )

external void putint(i32 )

external float getfloat()

external i32 getch()

external i32 getint()


