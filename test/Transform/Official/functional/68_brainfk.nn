global ptr ptr init with i32 0
global ptr program init with 32768 x i32 zeros
global ptr tape init with 65536 x i32 zeros
immutable global ptr BUFFER_LEN init with i32 32768
immutable global ptr TAPE_LEN init with i32 65536
external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry136:
  3179 = call i32 getint()
  br bb %read_program.while.cond
read_program.while.cond:
  i.phi182 = phi [bb %entry136, i32 0, bb %read_program.while.body, i32 %16190]
  9183 = icmp slt i32 %i.phi182, i32 %3179
  br i1 %9183, bb %read_program.while.body, bb %read_program.while.exit
read_program.while.body:
  12186 = mul i32 %i.phi182, i32 4
  13187 = ptradd ptr @program, i32 %12186
  14188 = call i32 getch()
  store i32 %14188 to ptr %13187
  16190 = add i32 %i.phi182, i32 1
  br bb %read_program.while.cond
read_program.while.exit:
  18193 = mul i32 %i.phi182, i32 4
  19194 = ptradd ptr @program, i32 %18193
  store i32 0 to ptr %19194
  call void interpret(ptr @program)
  ret i32 0
}

external float getfloat()

external void putfloat(float )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

void interpret(ptr input) {
entry20:
  br bb %while.cond24
while.cond24:
  select.phi175 = phi [bb %entry20, i1 ub, bb %if.exit, i1 %select.phi174]
  i23.phi167 = phi [bb %entry20, i32 0, bb %if.exit, i32 %135]
  loop.phi158 = phi [bb %entry20, i32 ub, bb %if.exit, i32 %loop.phi157]
  28 = mul i32 %i23.phi167, i32 4
  29 = ptradd ptr %input, i32 %28
  29.load = load i32 from ptr %29
  31 = icmp ne i32 %29.load, i32 0
  br i1 %31, bb %while.body25, bb %while.exit26
while.body25:
  34.load = load i32 from ptr %29
  37 = icmp eq i32 %34.load, i32 62
  br i1 %37, bb %then, bb %else
while.exit26:
  ret 
then:
  ptr.load = load i32 from ptr @ptr
  42 = add i32 %ptr.load, i32 1
  store i32 %42 to ptr @ptr
  br bb %if.exit
if.exit:
  select.phi174 = phi [bb %if.exit46, i1 %select.phi173, bb %then, i1 %select.phi175]
  i23.phi166 = phi [bb %if.exit46, i32 %i23.phi165, bb %then, i32 %i23.phi167]
  loop.phi157 = phi [bb %if.exit46, i32 %loop.phi156, bb %then, i32 %loop.phi158]
  135 = add i32 %i23.phi166, i32 1
  br bb %while.cond24
else:
  44 = icmp eq i32 %34.load, i32 60
  br i1 %44, bb %then45, bb %else47
then45:
  ptr.load48 = load i32 from ptr @ptr
  49 = sub i32 %ptr.load48, i32 1
  store i32 %49 to ptr @ptr
  br bb %if.exit46
if.exit46:
  select.phi173 = phi [bb %if.exit53, i1 %select.phi172, bb %then45, i1 %select.phi175]
  i23.phi165 = phi [bb %if.exit53, i32 %i23.phi164, bb %then45, i32 %i23.phi167]
  loop.phi156 = phi [bb %if.exit53, i32 %loop.phi155, bb %then45, i32 %loop.phi158]
  br bb %if.exit
else47:
  51 = icmp eq i32 %34.load, i32 43
  br i1 %51, bb %then52, bb %else54
then52:
  ptr.load55 = load i32 from ptr @ptr
  56 = mul i32 %ptr.load55, i32 4
  57 = ptradd ptr @tape, i32 %56
  ptr.load58 = load i32 from ptr @ptr
  59 = mul i32 %ptr.load58, i32 4
  60 = ptradd ptr @tape, i32 %59
  60.load = load i32 from ptr %60
  62 = add i32 %60.load, i32 1
  store i32 %62 to ptr %57
  br bb %if.exit53
if.exit53:
  select.phi172 = phi [bb %if.exit66, i1 %select.phi171, bb %then52, i1 %select.phi175]
  i23.phi164 = phi [bb %if.exit66, i32 %i23.phi163, bb %then52, i32 %i23.phi167]
  loop.phi155 = phi [bb %if.exit66, i32 %loop.phi154, bb %then52, i32 %loop.phi158]
  br bb %if.exit46
else54:
  64 = icmp eq i32 %34.load, i32 45
  br i1 %64, bb %then65, bb %else67
then65:
  ptr.load68 = load i32 from ptr @ptr
  69 = mul i32 %ptr.load68, i32 4
  70 = ptradd ptr @tape, i32 %69
  ptr.load71 = load i32 from ptr @ptr
  72 = mul i32 %ptr.load71, i32 4
  73 = ptradd ptr @tape, i32 %72
  73.load = load i32 from ptr %73
  75 = sub i32 %73.load, i32 1
  store i32 %75 to ptr %70
  br bb %if.exit66
if.exit66:
  select.phi171 = phi [bb %if.exit79, i1 %select.phi170, bb %then65, i1 %select.phi175]
  i23.phi163 = phi [bb %if.exit79, i32 %i23.phi162, bb %then65, i32 %i23.phi167]
  loop.phi154 = phi [bb %if.exit79, i32 %loop.phi153, bb %then65, i32 %loop.phi158]
  br bb %if.exit53
else67:
  77 = icmp eq i32 %34.load, i32 46
  br i1 %77, bb %then78, bb %else80
then78:
  ptr.load81 = load i32 from ptr @ptr
  82 = mul i32 %ptr.load81, i32 4
  83 = ptradd ptr @tape, i32 %82
  83.load = load i32 from ptr %83
  call void putch(i32 %83.load)
  br bb %if.exit79
if.exit79:
  select.phi170 = phi [bb %if.exit89, i1 %select.phi169, bb %then78, i1 %select.phi175]
  i23.phi162 = phi [bb %if.exit89, i32 %i23.phi161, bb %then78, i32 %i23.phi167]
  loop.phi153 = phi [bb %if.exit89, i32 %loop.phi152, bb %then78, i32 %loop.phi158]
  br bb %if.exit66
else80:
  87 = icmp eq i32 %34.load, i32 44
  br i1 %87, bb %then88, bb %else90
then88:
  ptr.load91 = load i32 from ptr @ptr
  92 = mul i32 %ptr.load91, i32 4
  93 = ptradd ptr @tape, i32 %92
  94 = call i32 getch()
  store i32 %94 to ptr %93
  br bb %if.exit89
if.exit89:
  select.phi169 = phi [bb %if.exit108, i1 %select.phi, bb %then88, i1 %select.phi175]
  i23.phi161 = phi [bb %if.exit108, i32 %i23.phi160, bb %then88, i32 %i23.phi167]
  loop.phi152 = phi [bb %if.exit108, i32 %loop.phi151, bb %then88, i32 %loop.phi158]
  br bb %if.exit79
else90:
  96 = icmp eq i32 %34.load, i32 93
  br i1 %96, bb %select.then, bb %select.else
select.then:
  ptr.load101 = load i32 from ptr @ptr
  102 = mul i32 %ptr.load101, i32 4
  103 = ptradd ptr @tape, i32 %102
  103.load = load i32 from ptr %103
  105 = icmp ne i32 %103.load, i32 0
  br bb %select.exit
select.else:
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 0, bb %select.then, i1 %105]
  br i1 %select.phi, bb %then107, bb %if.exit108
then107:
  br bb %while.cond109
if.exit108:
  i23.phi160 = phi [bb %select.exit, i32 %i23.phi167, bb %while.exit111, i32 %i23.phi]
  loop.phi151 = phi [bb %select.exit, i32 %loop.phi158, bb %while.exit111, i32 %loop.phi150]
  br bb %if.exit89
while.cond109:
  i23.phi = phi [bb %then107, i32 %i23.phi167, bb %if.exit124, i32 %116]
  loop.phi150 = phi [bb %then107, i32 1, bb %if.exit124, i32 %loop.phi149]
  113 = icmp sgt i32 %loop.phi150, i32 0
  br i1 %113, bb %while.body110, bb %while.exit111
while.body110:
  116 = sub i32 %i23.phi, i32 1
  118 = mul i32 %116, i32 4
  119 = ptradd ptr %input, i32 %118
  119.load = load i32 from ptr %119
  122 = icmp eq i32 %119.load, i32 91
  br i1 %122, bb %then123, bb %else125
while.exit111:
  br bb %if.exit108
then123:
  127 = sub i32 %loop.phi150, i32 1
  br bb %if.exit124
if.exit124:
  loop.phi149 = phi [bb %if.exit131, i32 %loop.phi, bb %then123, i32 %127]
  br bb %while.cond109
else125:
  129 = icmp eq i32 %119.load, i32 93
  br i1 %129, bb %then130, bb %if.exit131
then130:
  133 = add i32 %loop.phi150, i32 1
  br bb %if.exit131
if.exit131:
  loop.phi = phi [bb %else125, i32 %loop.phi150, bb %then130, i32 %133]
  br bb %if.exit124
}

external void putch(i32 )

void read_program() {
entry:
  3 = call i32 getint()
  br bb %while.cond
while.cond:
  i.phi = phi [bb %entry, i32 0, bb %while.body, i32 %16]
  9 = icmp slt i32 %i.phi, i32 %3
  br i1 %9, bb %while.body, bb %while.exit
while.body:
  12 = mul i32 %i.phi, i32 4
  13 = ptradd ptr @program, i32 %12
  14 = call i32 getch()
  store i32 %14 to ptr %13
  16 = add i32 %i.phi, i32 1
  br bb %while.cond
while.exit:
  18 = mul i32 %i.phi, i32 4
  19 = ptradd ptr @program, i32 %18
  store i32 0 to ptr %19
  ret 
}


