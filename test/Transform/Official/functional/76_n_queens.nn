global ptr line2 init with 100 x i32 zeros
global ptr line1 init with 50 x i32 zeros
global ptr row init with 50 x i32 zeros
global ptr n init with i32 0
global ptr sum init with i32 0
global ptr ans init with 50 x i32 zeros
external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry117:  pred()
  119 = call i32 getint()
  124177 = icmp sgt i32 %119, i32 0
  br i1 %124177, bb %while.body121, bb %while.exit122
while.cond120:  pred(while.body121)
  N.phi = phi [bb %while.body121, i32 %129]
  124 = icmp sgt i32 %N.phi, i32 0
  br i1 %124, bb %while.body121, bb %while.exit122
while.body121:  pred(while.cond120, entry117)
  N.phi178 = phi [bb %entry117, i32 %119, bb %while.cond120, i32 %N.phi]
  126 = call i32 getint()
  store i32 %126 to ptr @n
  call void f(i32 1)
  129 = sub i32 %N.phi178, i32 1
  br bb %while.cond120
while.exit122:  pred(while.cond120, entry117)
  sum.load130 = load i32 from ptr @sum
  ret i32 %sum.load130
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

void f(i32 step) {
entry26:  pred()
  n.load33179 = load i32 from ptr @n
  34180 = icmp sle i32 1, i32 %n.load33179
  br i1 %34180, bb %while.body30, bb %while.exit31
while.cond29:  pred(if.exit71)
  i28.phi = phi [bb %if.exit71, i32 %116]
  n.load33 = load i32 from ptr @n
  34 = icmp sle i32 %i28.phi, i32 %n.load33
  br i1 %34, bb %while.body30, bb %while.exit31
while.body30:  pred(while.cond29, entry26)
  n.load33179182 = phi [bb %while.cond29, i32 %n.load33, bb %entry26, i32 %n.load33179]
  i28.phi181 = phi [bb %entry26, i32 1, bb %while.cond29, i32 %i28.phi]
  138 = shl i32 %i28.phi181, i32 2
  38 = ptradd ptr @row, i32 %138
  38.load = load i32 from ptr %38
  40 = icmp ne i32 %38.load, i32 1
  br i1 %40, bb %select.then, bb %select.else
while.exit31:  pred(while.cond29, entry26)
  ret 
select.then:  pred(while.body30)
  47 = add i32 %step, i32 %i28.phi181
  139 = shl i32 %47, i32 2
  49 = ptradd ptr @line1, i32 %139
  49.load = load i32 from ptr %49
  51 = icmp eq i32 %49.load, i32 0
  br bb %select.exit
select.else:  pred(while.body30)
  br bb %select.exit
select.exit:  pred(select.then, select.else)
  select.phi = phi [bb %select.else, i1 0, bb %select.then, i1 %51]
  br i1 %select.phi, bb %select.then53, bb %select.else54
select.then53:  pred(select.exit)
  59 = add i32 %n.load33179182, i32 %step
  61 = sub i32 %59, i32 %i28.phi181
  140 = shl i32 %61, i32 2
  63 = ptradd ptr @line2, i32 %140
  63.load = load i32 from ptr %63
  65 = icmp ne i32 %63.load, i32 0
  66 = xor i1 %65, i1 -1
  67 = zext i1 %66 to i32
  68 = icmp ne i32 %67, i32 0
  br bb %select.exit55
select.else54:  pred(select.exit)
  br bb %select.exit55
select.exit55:  pred(select.then53, select.else54)
  select56.phi = phi [bb %select.else54, i1 0, bb %select.then53, i1 %68]
  br i1 %select56.phi, bb %then70, bb %if.exit71
then70:  pred(select.exit55)
  141 = shl i32 %step, i32 2
  74 = ptradd ptr @ans, i32 %141
  store i32 %i28.phi181 to ptr %74
  78 = icmp eq i32 %step, i32 %n.load33179182
  br i1 %78, bb %then79, bb %if.exit80
if.exit71:  pred(select.exit55, if.exit80)
  116 = add i32 %i28.phi181, i32 1
  br bb %while.cond29
then79:  pred(then70)
  sum.load151 = load i32 from ptr @sum
  2152 = add i32 %sum.load151, i32 1
  store i32 %2152 to ptr @sum
  br bb %printans.while.cond
if.exit80:  pred(then70, printans.then, printans.while.cond)
  store i32 1 to ptr %38
  87 = add i32 %step, i32 %i28.phi181
  143 = shl i32 %87, i32 2
  89 = ptradd ptr @line1, i32 %143
  store i32 1 to ptr %89
  n.load90 = load i32 from ptr @n
  92 = add i32 %n.load90, i32 %step
  94 = sub i32 %92, i32 %i28.phi181
  144 = shl i32 %94, i32 2
  96 = ptradd ptr @line2, i32 %144
  store i32 1 to ptr %96
  98 = add i32 %step, i32 1
  call void f(i32 %98)
  store i32 0 to ptr %38
  store i32 0 to ptr %89
  n.load108 = load i32 from ptr @n
  110 = add i32 %n.load108, i32 %step
  112 = sub i32 %110, i32 %i28.phi181
  147 = shl i32 %112, i32 2
  114 = ptradd ptr @line2, i32 %147
  store i32 0 to ptr %114
  br bb %if.exit71
printans.while.cond:  pred(then79, printans.else)
  i.phi156 = phi [bb %then79, i32 1, bb %printans.else, i32 %25175]
  n.load157 = load i32 from ptr @n
  9158 = icmp sle i32 %i.phi156, i32 %n.load157
  br i1 %9158, bb %printans.while.body, bb %if.exit80
printans.while.body:  pred(printans.while.cond)
  148161 = shl i32 %i.phi156, i32 2
  13162 = ptradd ptr @ans, i32 %148161
  13.load163 = load i32 from ptr %13162
  call void putint(i32 %13.load163)
  n.load17165 = load i32 from ptr @n
  18166 = icmp eq i32 %i.phi156, i32 %n.load17165
  br i1 %18166, bb %printans.then, bb %printans.else
printans.then:  pred(printans.while.body)
  call void putch(i32 10)
  br bb %if.exit80
printans.else:  pred(printans.while.body)
  call void putch(i32 32)
  25175 = add i32 %i.phi156, i32 1
  br bb %printans.while.cond
}

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

void printans() {
entry:  pred()
  sum.load = load i32 from ptr @sum
  2 = add i32 %sum.load, i32 1
  store i32 %2 to ptr @sum
  br bb %while.cond
while.cond:  pred(entry, else)
  i.phi = phi [bb %entry, i32 1, bb %else, i32 %25]
  n.load = load i32 from ptr @n
  9 = icmp sle i32 %i.phi, i32 %n.load
  br i1 %9, bb %while.body, bb %while.exit
while.body:  pred(while.cond)
  148 = shl i32 %i.phi, i32 2
  13 = ptradd ptr @ans, i32 %148
  13.load = load i32 from ptr %13
  call void putint(i32 %13.load)
  n.load17 = load i32 from ptr @n
  18 = icmp eq i32 %i.phi, i32 %n.load17
  br i1 %18, bb %then, bb %else
while.exit:  pred(while.cond)
  ret 
then:  pred(while.body)
  call void putch(i32 10)
  ret 
else:  pred(while.body)
  call void putch(i32 32)
  25 = add i32 %i.phi, i32 1
  br bb %while.cond
}


