global ptr line2 init with 100 x i32 zeros
global ptr line1 init with 50 x i32 zeros
global ptr row init with 50 x i32 zeros
global ptr n init with i32 0
global ptr sum init with i32 0
global ptr ans init with 50 x i32 zeros
external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry117:
  119 = call i32 getint()
  br bb %while.cond120
while.cond120:
  N.phi = phi [bb %entry117, i32 %119, bb %while.body121, i32 %129]
  124 = icmp sgt i32 %N.phi, i32 0
  br i1 %124, bb %while.body121, bb %while.exit122
while.body121:
  126 = call i32 getint()
  store i32 %126 to ptr @n
  call void f(i32 1)
  129 = sub i32 %N.phi, i32 1
  br bb %while.cond120
while.exit122:
  sum.load130 = load i32 from ptr @sum
  ret i32 %sum.load130
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

void f(i32 step) {
entry26:
  br bb %while.cond29
while.cond29:
  i28.phi = phi [bb %entry26, i32 1, bb %if.exit71, i32 %116]
  n.load33 = load i32 from ptr @n
  34 = icmp sle i32 %i28.phi, i32 %n.load33
  br i1 %34, bb %while.body30, bb %while.exit31
while.body30:
  37 = mul i32 %i28.phi, i32 4
  38 = ptradd ptr @row, i32 %37
  38.load = load i32 from ptr %38
  40 = icmp ne i32 %38.load, i32 1
  br i1 %40, bb %select.then, bb %select.else
while.exit31:
  ret 
select.then:
  47 = add i32 %step, i32 %i28.phi
  48 = mul i32 %47, i32 4
  49 = ptradd ptr @line1, i32 %48
  49.load = load i32 from ptr %49
  51 = icmp eq i32 %49.load, i32 0
  br bb %select.exit
select.else:
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 0, bb %select.then, i1 %51]
  br i1 %select.phi, bb %select.then53, bb %select.else54
select.then53:
  n.load57 = load i32 from ptr @n
  59 = add i32 %n.load57, i32 %step
  61 = sub i32 %59, i32 %i28.phi
  62 = mul i32 %61, i32 4
  63 = ptradd ptr @line2, i32 %62
  63.load = load i32 from ptr %63
  65 = icmp ne i32 %63.load, i32 0
  66 =  i1 %65, i1 1
  67 = zext i1 %66 to i32
  68 = icmp ne i32 %67, i32 0
  br bb %select.exit55
select.else54:
  br bb %select.exit55
select.exit55:
  select56.phi = phi [bb %select.else54, i1 0, bb %select.then53, i1 %68]
  br i1 %select56.phi, bb %then70, bb %if.exit71
then70:
  73 = mul i32 %step, i32 4
  74 = ptradd ptr @ans, i32 %73
  store i32 %i28.phi to ptr %74
  n.load77 = load i32 from ptr @n
  78 = icmp eq i32 %step, i32 %n.load77
  br i1 %78, bb %then79, bb %if.exit80
if.exit71:
  116 = add i32 %i28.phi, i32 1
  br bb %while.cond29
then79:
  sum.load140 = load i32 from ptr @sum
  2141 = add i32 %sum.load140, i32 1
  store i32 %2141 to ptr @sum
  br bb %printans.while.cond
then79.split:
  br bb %if.exit80
if.exit80:
  store i32 1 to ptr %38
  87 = add i32 %step, i32 %i28.phi
  88 = mul i32 %87, i32 4
  89 = ptradd ptr @line1, i32 %88
  store i32 1 to ptr %89
  n.load90 = load i32 from ptr @n
  92 = add i32 %n.load90, i32 %step
  94 = sub i32 %92, i32 %i28.phi
  95 = mul i32 %94, i32 4
  96 = ptradd ptr @line2, i32 %95
  store i32 1 to ptr %96
  98 = add i32 %step, i32 1
  call void f(i32 %98)
  store i32 0 to ptr %38
  store i32 0 to ptr %89
  n.load108 = load i32 from ptr @n
  110 = add i32 %n.load108, i32 %step
  112 = sub i32 %110, i32 %i28.phi
  113 = mul i32 %112, i32 4
  114 = ptradd ptr @line2, i32 %113
  store i32 0 to ptr %114
  br bb %if.exit71
printans.while.cond:
  i.phi145 = phi [bb %then79, i32 1, bb %printans.else, i32 %25164]
  n.load146 = load i32 from ptr @n
  9147 = icmp sle i32 %i.phi145, i32 %n.load146
  br i1 %9147, bb %printans.while.body, bb %printans.while.exit
printans.while.body:
  12150 = mul i32 %i.phi145, i32 4
  13151 = ptradd ptr @ans, i32 %12150
  13.load152 = load i32 from ptr %13151
  call void putint(i32 %13.load152)
  n.load17154 = load i32 from ptr @n
  18155 = icmp eq i32 %i.phi145, i32 %n.load17154
  br i1 %18155, bb %printans.then, bb %printans.else
printans.while.exit:
  br bb %then79.split
printans.then:
  call void putch(i32 10)
  br bb %then79.split
printans.else:
  call void putch(i32 32)
  25164 = add i32 %i.phi145, i32 1
  br bb %printans.while.cond
}

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

void printans() {
entry:
  sum.load = load i32 from ptr @sum
  2 = add i32 %sum.load, i32 1
  store i32 %2 to ptr @sum
  br bb %while.cond
while.cond:
  i.phi = phi [bb %entry, i32 1, bb %else, i32 %25]
  n.load = load i32 from ptr @n
  9 = icmp sle i32 %i.phi, i32 %n.load
  br i1 %9, bb %while.body, bb %while.exit
while.body:
  12 = mul i32 %i.phi, i32 4
  13 = ptradd ptr @ans, i32 %12
  13.load = load i32 from ptr %13
  call void putint(i32 %13.load)
  n.load17 = load i32 from ptr @n
  18 = icmp eq i32 %i.phi, i32 %n.load17
  br i1 %18, bb %then, bb %else
while.exit:
  ret 
then:
  call void putch(i32 10)
  ret 
else:
  call void putch(i32 32)
  25 = add i32 %i.phi, i32 1
  br bb %while.cond
}


