global ptr n init with i32 0
i32 avgPooling(ptr arr, i32 stride) {
entry377:
  br bb %while.cond382
while.cond382:
  lastnum.phi654 = phi [bb %entry377, i32 ub, bb %if.exit394, i32 %lastnum.phi653]
  i380.phi651 = phi [bb %entry377, i32 0, bb %if.exit394, i32 %442]
  sum379.phi649 = phi [bb %entry377, i32 0, bb %if.exit394, i32 %sum379.phi648]
  n.load386 = load i32 from ptr @n
  387 = icmp slt i32 %i380.phi651, i32 %n.load386
  br i1 %387, bb %while.body383, bb %while.exit384
while.body383:
  391 = sub i32 %stride, i32 1
  392 = icmp slt i32 %i380.phi651, i32 %391
  br i1 %392, bb %then393, bb %else395
while.exit384:
  445 = sub i32 %n.load386, i32 %stride
  446 = add i32 %445, i32 1
  br bb %while.cond447
then393:
  714 = shl i32 %i380.phi651, i32 2
  399 = ptradd ptr %arr, i32 %714
  399.load = load i32 from ptr %399
  401 = add i32 %sum379.phi649, i32 %399.load
  br bb %if.exit394
if.exit394:
  lastnum.phi653 = phi [bb %if.exit407, i32 %lastnum.phi, bb %then393, i32 %lastnum.phi654]
  sum379.phi648 = phi [bb %if.exit407, i32 %sum379.phi, bb %then393, i32 %401]
  442 = add i32 %i380.phi651, i32 1
  br bb %while.cond382
else395:
  405 = icmp eq i32 %i380.phi651, i32 %391
  br i1 %405, bb %then406, bb %else408
then406:
  410.load = load i32 from ptr %arr
  416 = sdiv i32 %sum379.phi649, i32 %stride
  store i32 %416 to ptr %arr
  br bb %if.exit407
if.exit407:
  lastnum.phi = phi [bb %else408, i32 %430.load, bb %then406, i32 %410.load]
  sum379.phi = phi [bb %else408, i32 %424, bb %then406, i32 %sum379.phi649]
  br bb %if.exit394
else408:
  715 = shl i32 %i380.phi651, i32 2
  420 = ptradd ptr %arr, i32 %715
  420.load = load i32 from ptr %420
  422 = add i32 %sum379.phi649, i32 %420.load
  424 = sub i32 %422, i32 %lastnum.phi654
  427 = sub i32 %i380.phi651, i32 %stride
  428 = add i32 %427, i32 1
  716 = shl i32 %428, i32 2
  430 = ptradd ptr %arr, i32 %716
  430.load = load i32 from ptr %430
  440 = sdiv i32 %424, i32 %stride
  store i32 %440 to ptr %430
  br bb %if.exit407
while.cond447:
  i380.phi = phi [bb %while.exit384, i32 %446, bb %while.body448, i32 %458]
  n.load451 = load i32 from ptr @n
  452 = icmp slt i32 %i380.phi, i32 %n.load451
  br i1 %452, bb %while.body448, bb %while.exit449
while.body448:
  718 = shl i32 %i380.phi, i32 2
  456 = ptradd ptr %arr, i32 %718
  store i32 0 to ptr %456
  458 = add i32 %i380.phi, i32 1
  br bb %while.cond447
while.exit449:
  ret i32 0
}

i32 arrCopy(ptr src, ptr target) {
entry324:
  br bb %while.cond326
while.cond326:
  i325.phi = phi [bb %entry324, i32 0, bb %while.body327, i32 %341]
  n.load330 = load i32 from ptr @n
  331 = icmp slt i32 %i325.phi, i32 %n.load330
  br i1 %331, bb %while.body327, bb %while.exit328
while.body327:
  719 = shl i32 %i325.phi, i32 2
  335 = ptradd ptr %target, i32 %719
  338 = ptradd ptr %src, i32 %719
  338.load = load i32 from ptr %338
  store i32 %338.load to ptr %335
  341 = add i32 %i325.phi, i32 1
  br bb %while.cond326
while.exit328:
  ret i32 0
}

i32 getMost(ptr arr) {
entry242:
  %count = stack 4000
  br bb %while.cond245
while.cond245:
  i244.phi659 = phi [bb %entry242, i32 0, bb %while.body246, i32 %255]
  249 = icmp slt i32 %i244.phi659, i32 1000
  br i1 %249, bb %while.body246, bb %while.exit247
while.body246:
  721 = shl i32 %i244.phi659, i32 2
  253 = ptradd ptr %count, i32 %721
  store i32 0 to ptr %253
  255 = add i32 %i244.phi659, i32 1
  br bb %while.cond245
while.exit247:
  br bb %while.cond258
while.cond258:
  number.phi661 = phi [bb %while.exit247, i32 ub, bb %if.exit285, i32 %number.phi]
  i244.phi = phi [bb %while.exit247, i32 0, bb %if.exit285, i32 %292]
  max.phi657 = phi [bb %while.exit247, i32 0, bb %if.exit285, i32 %max.phi]
  n.load262 = load i32 from ptr @n
  263 = icmp slt i32 %i244.phi, i32 %n.load262
  br i1 %263, bb %while.body259, bb %while.exit260
while.body259:
  722 = shl i32 %i244.phi, i32 2
  268 = ptradd ptr %arr, i32 %722
  268.load = load i32 from ptr %268
  723 = shl i32 %268.load, i32 2
  272 = ptradd ptr %count, i32 %723
  275.load = load i32 from ptr %272
  277 = add i32 %275.load, i32 1
  store i32 %277 to ptr %272
  283 = icmp sgt i32 %277, i32 %max.phi657
  br i1 %283, bb %then284, bb %if.exit285
while.exit260:
  ret i32 %number.phi661
then284:
  br bb %if.exit285
if.exit285:
  number.phi = phi [bb %while.body259, i32 %number.phi661, bb %then284, i32 %268.load]
  max.phi = phi [bb %while.body259, i32 %max.phi657, bb %then284, i32 %277]
  292 = add i32 %i244.phi, i32 1
  br bb %while.cond258
}

pure i32 getMid(ptr arr) {
entry215:
  n.load217 = load i32 from ptr @n
  218 = srem i32 %n.load217, i32 2
  219 = icmp eq i32 %218, i32 0
  br i1 %219, bb %then220, bb %else
then220:
  224 = sdiv i32 %n.load217, i32 2
  727 = shl i32 %224, i32 2
  227 = ptradd ptr %arr, i32 %727
  227.load = load i32 from ptr %227
  230 = sub i32 %224, i32 1
  728 = shl i32 %230, i32 2
  232 = ptradd ptr %arr, i32 %728
  232.load = load i32 from ptr %232
  234 = add i32 %227.load, i32 %232.load
  235 = sdiv i32 %234, i32 2
  ret i32 %235
else:
  237 = sdiv i32 %n.load217, i32 2
  729 = shl i32 %237, i32 2
  240 = ptradd ptr %arr, i32 %729
  240.load = load i32 from ptr %240
  ret i32 %240.load
}

i32 insertsort(ptr a) {
entry55:
  br bb %while.cond57
while.cond57:
  i56.phi = phi [bb %entry55, i32 1, bb %while.exit74, i32 %106]
  n.load61 = load i32 from ptr @n
  62 = icmp slt i32 %i56.phi, i32 %n.load61
  br i1 %62, bb %while.body58, bb %while.exit59
while.body58:
  730 = shl i32 %i56.phi, i32 2
  67 = ptradd ptr %a, i32 %730
  67.load = load i32 from ptr %67
  71 = sub i32 %i56.phi, i32 1
  br bb %while.cond72
while.exit59:
  ret i32 0
while.cond72:
  j69.phi = phi [bb %while.body58, i32 %71, bb %while.body73, i32 %99]
  77 = icmp sgt i32 %j69.phi, i32 -1
  br i1 %77, bb %select.then, bb %select.else
while.body73:
  91 = add i32 %j69.phi, i32 1
  731 = shl i32 %91, i32 2
  93 = ptradd ptr %a, i32 %731
  732 = shl i32 %j69.phi, i32 2
  96 = ptradd ptr %a, i32 %732
  96.load = load i32 from ptr %96
  store i32 %96.load to ptr %93
  99 = sub i32 %j69.phi, i32 1
  br bb %while.cond72
while.exit74:
  101 = add i32 %j69.phi, i32 1
  733 = shl i32 %101, i32 2
  103 = ptradd ptr %a, i32 %733
  store i32 %67.load to ptr %103
  106 = add i32 %i56.phi, i32 1
  br bb %while.cond57
select.then:
  734 = shl i32 %j69.phi, i32 2
  85 = ptradd ptr %a, i32 %734
  85.load = load i32 from ptr %85
  87 = icmp slt i32 %67.load, i32 %85.load
  br bb %select.exit
select.else:
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 0, bb %select.then, i1 %87]
  br i1 %select.phi, bb %while.body73, bb %while.exit74
}

i32 revert(ptr arr) {
entry294:
  br bb %while.cond298
while.cond298:
  j297.phi = phi [bb %entry294, i32 0, bb %while.body299, i32 %323]
  i296.phi = phi [bb %entry294, i32 0, bb %while.body299, i32 %321]
  303 = icmp slt i32 %i296.phi, i32 %j297.phi
  br i1 %303, bb %while.body299, bb %while.exit300
while.body299:
  735 = shl i32 %i296.phi, i32 2
  307 = ptradd ptr %arr, i32 %735
  307.load = load i32 from ptr %307
  737 = shl i32 %j297.phi, i32 2
  314 = ptradd ptr %arr, i32 %737
  314.load = load i32 from ptr %314
  store i32 %314.load to ptr %307
  store i32 %307.load to ptr %314
  321 = add i32 %i296.phi, i32 1
  323 = sub i32 %j297.phi, i32 1
  br bb %while.cond298
while.exit300:
  ret i32 0
}

external i32 getint()

external i32 getch()

external void putint(i32 )

i32 QuickSort(ptr arr, i32 low, i32 high) {
entry107:
  112 = icmp slt i32 %low, i32 %high
  br i1 %112, bb %then113, bb %if.exit114
then113:
  739 = shl i32 %low, i32 2
  122 = ptradd ptr %arr, i32 %739
  122.load = load i32 from ptr %122
  br bb %while.cond124
if.exit114:
  ret i32 0
while.cond124:
  j117.phi678 = phi [bb %then113, i32 %high, bb %if.exit190, i32 %j117.phi]
  i115.phi674 = phi [bb %then113, i32 %low, bb %if.exit190, i32 %i115.phi]
  129 = icmp slt i32 %i115.phi674, i32 %j117.phi678
  br i1 %129, bb %while.body125, bb %while.exit126
while.body125:
  br bb %while.cond131
while.exit126:
  740 = shl i32 %i115.phi674, i32 2
  202 = ptradd ptr %arr, i32 %740
  store i32 %122.load to ptr %202
  206 = sub i32 %i115.phi674, i32 1
  209 = call i32 QuickSort(ptr %arr, i32 %low, i32 %206)
  211 = add i32 %i115.phi674, i32 1
  214 = call i32 QuickSort(ptr %arr, i32 %211, i32 %high)
  br bb %if.exit114
while.cond131:
  j117.phi680 = phi [bb %while.body125, i32 %j117.phi678, bb %while.body132, i32 %151]
  136 = icmp slt i32 %i115.phi674, i32 %j117.phi680
  br i1 %136, bb %select.then137, bb %select.else138
while.body132:
  151 = sub i32 %j117.phi680, i32 1
  br bb %while.cond131
while.exit133:
  br i1 %136, bb %then155, bb %if.exit156
select.then137:
  741 = shl i32 %j117.phi680, i32 2
  143 = ptradd ptr %arr, i32 %741
  143.load = load i32 from ptr %143
  146 = sub i32 %122.load, i32 1
  147 = icmp sgt i32 %143.load, i32 %146
  br bb %select.exit139
select.else138:
  br bb %select.exit139
select.exit139:
  select140.phi = phi [bb %select.else138, i1 0, bb %select.then137, i1 %147]
  br i1 %select140.phi, bb %while.body132, bb %while.exit133
then155:
  742 = shl i32 %i115.phi674, i32 2
  159 = ptradd ptr %arr, i32 %742
  743 = shl i32 %j117.phi680, i32 2
  162 = ptradd ptr %arr, i32 %743
  162.load = load i32 from ptr %162
  store i32 %162.load to ptr %159
  165 = add i32 %i115.phi674, i32 1
  br bb %if.exit156
if.exit156:
  i115.phi676 = phi [bb %while.exit133, i32 %i115.phi674, bb %then155, i32 %165]
  br bb %while.cond166
while.cond166:
  i115.phi = phi [bb %if.exit156, i32 %i115.phi676, bb %while.body167, i32 %185]
  171 = icmp slt i32 %i115.phi, i32 %j117.phi680
  br i1 %171, bb %select.then172, bb %select.else173
while.body167:
  185 = add i32 %i115.phi, i32 1
  br bb %while.cond166
while.exit168:
  br i1 %171, bb %then189, bb %if.exit190
select.then172:
  744 = shl i32 %i115.phi, i32 2
  178 = ptradd ptr %arr, i32 %744
  178.load = load i32 from ptr %178
  181 = icmp slt i32 %178.load, i32 %122.load
  br bb %select.exit174
select.else173:
  br bb %select.exit174
select.exit174:
  select175.phi = phi [bb %select.else173, i1 0, bb %select.then172, i1 %181]
  br i1 %select175.phi, bb %while.body167, bb %while.exit168
then189:
  745 = shl i32 %j117.phi680, i32 2
  193 = ptradd ptr %arr, i32 %745
  746 = shl i32 %i115.phi, i32 2
  196 = ptradd ptr %arr, i32 %746
  196.load = load i32 from ptr %196
  store i32 %196.load to ptr %193
  199 = sub i32 %j117.phi680, i32 1
  br bb %if.exit190
if.exit190:
  j117.phi = phi [bb %while.exit168, i32 %j117.phi680, bb %then189, i32 %199]
  br bb %while.cond124
}

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry459:
  %count949 = stack 4000
  %result = stack 128
  %arr = stack 128
  store i32 32 to ptr @n
  store i32 7 to ptr %arr
  465 = ptradd ptr %arr, i32 4
  store i32 23 to ptr %465
  467 = ptradd ptr %arr, i32 8
  store i32 89 to ptr %467
  469 = ptradd ptr %arr, i32 12
  store i32 26 to ptr %469
  471 = ptradd ptr %arr, i32 16
  store i32 282 to ptr %471
  473 = ptradd ptr %arr, i32 20
  store i32 254 to ptr %473
  475 = ptradd ptr %arr, i32 24
  store i32 27 to ptr %475
  477 = ptradd ptr %arr, i32 28
  store i32 5 to ptr %477
  479 = ptradd ptr %arr, i32 32
  store i32 83 to ptr %479
  481 = ptradd ptr %arr, i32 36
  store i32 273 to ptr %481
  483 = ptradd ptr %arr, i32 40
  store i32 574 to ptr %483
  485 = ptradd ptr %arr, i32 44
  store i32 905 to ptr %485
  487 = ptradd ptr %arr, i32 48
  store i32 354 to ptr %487
  489 = ptradd ptr %arr, i32 52
  store i32 657 to ptr %489
  491 = ptradd ptr %arr, i32 56
  store i32 935 to ptr %491
  493 = ptradd ptr %arr, i32 60
  store i32 264 to ptr %493
  495 = ptradd ptr %arr, i32 64
  store i32 639 to ptr %495
  497 = ptradd ptr %arr, i32 68
  store i32 459 to ptr %497
  499 = ptradd ptr %arr, i32 72
  store i32 29 to ptr %499
  501 = ptradd ptr %arr, i32 76
  store i32 68 to ptr %501
  503 = ptradd ptr %arr, i32 80
  store i32 929 to ptr %503
  505 = ptradd ptr %arr, i32 84
  store i32 756 to ptr %505
  507 = ptradd ptr %arr, i32 88
  store i32 452 to ptr %507
  509 = ptradd ptr %arr, i32 92
  store i32 279 to ptr %509
  511 = ptradd ptr %arr, i32 96
  store i32 58 to ptr %511
  513 = ptradd ptr %arr, i32 100
  store i32 87 to ptr %513
  515 = ptradd ptr %arr, i32 104
  store i32 96 to ptr %515
  517 = ptradd ptr %arr, i32 108
  store i32 36 to ptr %517
  519 = ptradd ptr %arr, i32 112
  store i32 39 to ptr %519
  521 = ptradd ptr %arr, i32 116
  store i32 28 to ptr %521
  523 = ptradd ptr %arr, i32 120
  store i32 1 to ptr %523
  525 = ptradd ptr %arr, i32 124
  store i32 290 to ptr %525
  br bb %arrCopy.while.cond326
while.cond530:
  i529.phi703 = phi [bb %revert.while.exit300, i32 0, bb %while.body531, i32 %543]
  534 = icmp slt i32 %i529.phi703, i32 32
  br i1 %534, bb %while.body531, bb %while.exit532
while.body531:
  747 = shl i32 %i529.phi703, i32 2
  538 = ptradd ptr %result, i32 %747
  538.load = load i32 from ptr %538
  call void putint(i32 %538.load)
  543 = add i32 %i529.phi703, i32 1
  br bb %while.cond530
while.exit532:
  br bb %bubblesort.while.cond
while.cond545:
  i529.phi704 = phi [bb %bubblesort.while.exit, i32 0, bb %while.body546, i32 %558]
  549 = icmp slt i32 %i529.phi704, i32 32
  br i1 %549, bb %while.body546, bb %while.exit547
while.body546:
  748 = shl i32 %i529.phi704, i32 2
  553 = ptradd ptr %result, i32 %748
  553.load = load i32 from ptr %553
  call void putint(i32 %553.load)
  558 = add i32 %i529.phi704, i32 1
  br bb %while.cond545
while.exit547:
  n.load217994 = load i32 from ptr @n
  218995 = srem i32 %n.load217994, i32 2
  219996 = icmp eq i32 %218995, i32 0
  br i1 %219996, bb %getMid.then220, bb %getMid.else
while.exit547.split992:
  559.ret = phi [bb %getMid.then220, i32 %2351009, bb %getMid.else, i32 %240.load1016]
  call void putint(i32 %559.ret)
  br bb %getMost.while.cond245
while.cond567:
  i529.phi702 = phi [bb %bubblesort.while.exit1179, i32 0, bb %while.body568, i32 %580]
  571 = icmp slt i32 %i529.phi702, i32 32
  br i1 %571, bb %while.body568, bb %while.exit569
while.body568:
  749 = shl i32 %i529.phi702, i32 2
  575 = ptradd ptr %result, i32 %749
  575.load = load i32 from ptr %575
  call void putint(i32 %575.load)
  580 = add i32 %i529.phi702, i32 1
  br bb %while.cond567
while.exit569:
  br bb %arrCopy.while.cond326874
while.cond583:
  i529.phi701 = phi [bb %insertsort.while.exit59, i32 0, bb %while.body584, i32 %596]
  587 = icmp slt i32 %i529.phi701, i32 32
  br i1 %587, bb %while.body584, bb %while.exit585
while.body584:
  750 = shl i32 %i529.phi701, i32 2
  591 = ptradd ptr %result, i32 %750
  591.load = load i32 from ptr %591
  call void putint(i32 %591.load)
  596 = add i32 %i529.phi701, i32 1
  br bb %while.cond583
while.exit585:
  br bb %arrCopy.while.cond326893
while.cond601:
  i529.phi700 = phi [bb %arrCopy.while.exit328906, i32 0, bb %while.body602, i32 %614]
  605 = icmp slt i32 %i529.phi700, i32 32
  br i1 %605, bb %while.body602, bb %while.exit603
while.body602:
  751 = shl i32 %i529.phi700, i32 2
  609 = ptradd ptr %result, i32 %751
  609.load = load i32 from ptr %609
  call void putint(i32 %609.load)
  614 = add i32 %i529.phi700, i32 1
  br bb %while.cond601
while.exit603:
  br bb %arrCopy.while.cond326912
while.cond617:
  i529.phi699 = phi [bb %calSum.while.exit348, i32 0, bb %while.body618, i32 %630]
  621 = icmp slt i32 %i529.phi699, i32 32
  br i1 %621, bb %while.body618, bb %while.exit619
while.body618:
  752 = shl i32 %i529.phi699, i32 2
  625 = ptradd ptr %result, i32 %752
  625.load = load i32 from ptr %625
  call void putint(i32 %625.load)
  630 = add i32 %i529.phi699, i32 1
  br bb %while.cond617
while.exit619:
  br bb %arrCopy.while.cond326931
while.cond633:
  i529.phi = phi [bb %avgPooling.while.exit449, i32 0, bb %while.body634, i32 %646]
  637 = icmp slt i32 %i529.phi, i32 32
  br i1 %637, bb %while.body634, bb %while.exit635
while.body634:
  753 = shl i32 %i529.phi, i32 2
  641 = ptradd ptr %result, i32 %753
  641.load = load i32 from ptr %641
  call void putint(i32 %641.load)
  646 = add i32 %i529.phi, i32 1
  br bb %while.cond633
while.exit635:
  ret i32 0
avgPooling.while.cond382:
  lastnum.phi654767 = phi [bb %arrCopy.while.exit328944, i32 ub, bb %avgPooling.if.exit394, i32 %lastnum.phi653789]
  i380.phi651768 = phi [bb %arrCopy.while.exit328944, i32 0, bb %avgPooling.if.exit394, i32 %442791]
  sum379.phi649769 = phi [bb %arrCopy.while.exit328944, i32 0, bb %avgPooling.if.exit394, i32 %sum379.phi648790]
  387771 = icmp slt i32 %i380.phi651768, i32 %n.load330933
  br i1 %387771, bb %avgPooling.while.body383, bb %avgPooling.while.exit384
avgPooling.while.body383:
  392775 = icmp slt i32 %i380.phi651768, i32 2
  br i1 %392775, bb %avgPooling.then393, bb %avgPooling.else395
avgPooling.while.exit384:
  1213 = add i32 %n.load330933, i32 -2
  br bb %avgPooling.while.cond447
avgPooling.then393:
  714783 = shl i32 %i380.phi651768, i32 2
  399784 = ptradd ptr %result, i32 %714783
  399.load785 = load i32 from ptr %399784
  401786 = add i32 %sum379.phi649769, i32 %399.load785
  br bb %avgPooling.if.exit394
avgPooling.if.exit394:
  lastnum.phi653789 = phi [bb %avgPooling.if.exit407, i32 %lastnum.phi802, bb %avgPooling.then393, i32 %lastnum.phi654767]
  sum379.phi648790 = phi [bb %avgPooling.if.exit407, i32 %sum379.phi803, bb %avgPooling.then393, i32 %401786]
  442791 = add i32 %i380.phi651768, i32 1
  br bb %avgPooling.while.cond382
avgPooling.else395:
  405794 = icmp eq i32 %i380.phi651768, i32 2
  br i1 %405794, bb %avgPooling.then406, bb %avgPooling.else408
avgPooling.then406:
  410.load797 = load i32 from ptr %result
  416798 = sdiv i32 %sum379.phi649769, i32 3
  store i32 %416798 to ptr %result
  br bb %avgPooling.if.exit407
avgPooling.if.exit407:
  lastnum.phi802 = phi [bb %avgPooling.else408, i32 %430.load815, bb %avgPooling.then406, i32 %410.load797]
  sum379.phi803 = phi [bb %avgPooling.else408, i32 %424810, bb %avgPooling.then406, i32 %sum379.phi649769]
  br bb %avgPooling.if.exit394
avgPooling.else408:
  715806 = shl i32 %i380.phi651768, i32 2
  420807 = ptradd ptr %result, i32 %715806
  420.load808 = load i32 from ptr %420807
  422809 = add i32 %sum379.phi649769, i32 %420.load808
  424810 = sub i32 %422809, i32 %lastnum.phi654767
  1215 = add i32 %i380.phi651768, i32 -2
  716813 = shl i32 %1215, i32 2
  430814 = ptradd ptr %result, i32 %716813
  430.load815 = load i32 from ptr %430814
  440816 = sdiv i32 %424810, i32 3
  store i32 %440816 to ptr %430814
  br bb %avgPooling.if.exit407
avgPooling.while.cond447:
  i380.phi820 = phi [bb %avgPooling.while.exit384, i32 %1213, bb %avgPooling.while.body448, i32 %458828]
  452822 = icmp slt i32 %i380.phi820, i32 %n.load330933
  br i1 %452822, bb %avgPooling.while.body448, bb %avgPooling.while.exit449
avgPooling.while.body448:
  718825 = shl i32 %i380.phi820, i32 2
  456826 = ptradd ptr %result, i32 %718825
  store i32 0 to ptr %456826
  458828 = add i32 %i380.phi820, i32 1
  br bb %avgPooling.while.cond447
avgPooling.while.exit449:
  br bb %while.cond633
arrCopy.while.cond326:
  i325.phi837 = phi [bb %entry459, i32 0, bb %arrCopy.while.body327, i32 %341847]
  331839 = icmp slt i32 %i325.phi837, i32 32
  br i1 %331839, bb %arrCopy.while.body327, bb %arrCopy.while.exit328
arrCopy.while.body327:
  719842 = shl i32 %i325.phi837, i32 2
  335843 = ptradd ptr %result, i32 %719842
  338844 = ptradd ptr %arr, i32 %719842
  338.load845 = load i32 from ptr %338844
  store i32 %338.load845 to ptr %335843
  341847 = add i32 %i325.phi837, i32 1
  br bb %arrCopy.while.cond326
arrCopy.while.exit328:
  br bb %revert.while.cond298
arrCopy.while.cond326855:
  i325.phi856 = phi [bb %getMost.while.exit260, i32 0, bb %arrCopy.while.body327860, i32 %341866]
  n.load330857 = load i32 from ptr @n
  331858 = icmp slt i32 %i325.phi856, i32 %n.load330857
  br i1 %331858, bb %arrCopy.while.body327860, bb %arrCopy.while.exit328868
arrCopy.while.body327860:
  719861 = shl i32 %i325.phi856, i32 2
  335862 = ptradd ptr %result, i32 %719861
  338863 = ptradd ptr %arr, i32 %719861
  338.load864 = load i32 from ptr %338863
  store i32 %338.load864 to ptr %335862
  341866 = add i32 %i325.phi856, i32 1
  br bb %arrCopy.while.cond326855
arrCopy.while.exit328868:
  81174 = sub i32 %n.load330857, i32 1
  br bb %bubblesort.while.cond1170
arrCopy.while.cond326874:
  i325.phi875 = phi [bb %while.exit569, i32 0, bb %arrCopy.while.body327879, i32 %341885]
  n.load330876 = load i32 from ptr @n
  331877 = icmp slt i32 %i325.phi875, i32 %n.load330876
  br i1 %331877, bb %arrCopy.while.body327879, bb %arrCopy.while.exit328887
arrCopy.while.body327879:
  719880 = shl i32 %i325.phi875, i32 2
  335881 = ptradd ptr %result, i32 %719880
  338882 = ptradd ptr %arr, i32 %719880
  338.load883 = load i32 from ptr %338882
  store i32 %338.load883 to ptr %335881
  341885 = add i32 %i325.phi875, i32 1
  br bb %arrCopy.while.cond326874
arrCopy.while.exit328887:
  br bb %insertsort.while.cond57
arrCopy.while.cond326893:
  i325.phi894 = phi [bb %while.exit585, i32 0, bb %arrCopy.while.body327898, i32 %341904]
  n.load330895 = load i32 from ptr @n
  331896 = icmp slt i32 %i325.phi894, i32 %n.load330895
  br i1 %331896, bb %arrCopy.while.body327898, bb %arrCopy.while.exit328906
arrCopy.while.body327898:
  719899 = shl i32 %i325.phi894, i32 2
  335900 = ptradd ptr %result, i32 %719899
  338901 = ptradd ptr %arr, i32 %719899
  338.load902 = load i32 from ptr %338901
  store i32 %338.load902 to ptr %335900
  341904 = add i32 %i325.phi894, i32 1
  br bb %arrCopy.while.cond326893
arrCopy.while.exit328906:
  600 = call i32 QuickSort(ptr %result, i32 0, i32 31)
  br bb %while.cond601
arrCopy.while.cond326912:
  i325.phi913 = phi [bb %while.exit603, i32 0, bb %arrCopy.while.body327917, i32 %341923]
  n.load330914 = load i32 from ptr @n
  331915 = icmp slt i32 %i325.phi913, i32 %n.load330914
  br i1 %331915, bb %arrCopy.while.body327917, bb %arrCopy.while.exit328925
arrCopy.while.body327917:
  719918 = shl i32 %i325.phi913, i32 2
  335919 = ptradd ptr %result, i32 %719918
  338920 = ptradd ptr %arr, i32 %719918
  338.load921 = load i32 from ptr %338920
  store i32 %338.load921 to ptr %335919
  341923 = add i32 %i325.phi913, i32 1
  br bb %arrCopy.while.cond326912
arrCopy.while.exit328925:
  br bb %calSum.while.cond346
arrCopy.while.cond326931:
  i325.phi932 = phi [bb %while.exit619, i32 0, bb %arrCopy.while.body327936, i32 %341942]
  n.load330933 = load i32 from ptr @n
  331934 = icmp slt i32 %i325.phi932, i32 %n.load330933
  br i1 %331934, bb %arrCopy.while.body327936, bb %arrCopy.while.exit328944
arrCopy.while.body327936:
  719937 = shl i32 %i325.phi932, i32 2
  335938 = ptradd ptr %result, i32 %719937
  338939 = ptradd ptr %arr, i32 %719937
  338.load940 = load i32 from ptr %338939
  store i32 %338.load940 to ptr %335938
  341942 = add i32 %i325.phi932, i32 1
  br bb %arrCopy.while.cond326931
arrCopy.while.exit328944:
  br bb %avgPooling.while.cond382
getMost.while.cond245:
  i244.phi659952 = phi [bb %while.exit547.split992, i32 0, bb %getMost.while.body246, i32 %255959]
  249953 = icmp slt i32 %i244.phi659952, i32 1000
  br i1 %249953, bb %getMost.while.body246, bb %getMost.while.exit247
getMost.while.body246:
  721956 = shl i32 %i244.phi659952, i32 2
  253957 = ptradd ptr %count949, i32 %721956
  store i32 0 to ptr %253957
  255959 = add i32 %i244.phi659952, i32 1
  br bb %getMost.while.cond245
getMost.while.exit247:
  br bb %getMost.while.cond258
getMost.while.cond258:
  number.phi661964 = phi [bb %getMost.while.exit247, i32 ub, bb %getMost.if.exit285, i32 %number.phi987]
  i244.phi965 = phi [bb %getMost.while.exit247, i32 0, bb %getMost.if.exit285, i32 %292989]
  max.phi657966 = phi [bb %getMost.while.exit247, i32 0, bb %getMost.if.exit285, i32 %max.phi988]
  n.load262967 = load i32 from ptr @n
  263968 = icmp slt i32 %i244.phi965, i32 %n.load262967
  br i1 %263968, bb %getMost.while.body259, bb %getMost.while.exit260
getMost.while.body259:
  722971 = shl i32 %i244.phi965, i32 2
  268972 = ptradd ptr %result, i32 %722971
  268.load973 = load i32 from ptr %268972
  723974 = shl i32 %268.load973, i32 2
  272975 = ptradd ptr %count949, i32 %723974
  275.load976 = load i32 from ptr %272975
  277977 = add i32 %275.load976, i32 1
  store i32 %277977 to ptr %272975
  283979 = icmp sgt i32 %277977, i32 %max.phi657966
  br i1 %283979, bb %getMost.then284, bb %getMost.if.exit285
getMost.while.exit260:
  call void putint(i32 %number.phi661964)
  br bb %arrCopy.while.cond326855
getMost.then284:
  br bb %getMost.if.exit285
getMost.if.exit285:
  number.phi987 = phi [bb %getMost.while.body259, i32 %number.phi661964, bb %getMost.then284, i32 %268.load973]
  max.phi988 = phi [bb %getMost.while.body259, i32 %max.phi657966, bb %getMost.then284, i32 %277977]
  292989 = add i32 %i244.phi965, i32 1
  br bb %getMost.while.cond258
getMid.then220:
  n.load223999 = load i32 from ptr @n
  2241000 = sdiv i32 %n.load223999, i32 2
  7271001 = shl i32 %2241000, i32 2
  2271002 = ptradd ptr %result, i32 %7271001
  227.load1003 = load i32 from ptr %2271002
  2301004 = sub i32 %2241000, i32 1
  7281005 = shl i32 %2301004, i32 2
  2321006 = ptradd ptr %result, i32 %7281005
  232.load1007 = load i32 from ptr %2321006
  2341008 = add i32 %227.load1003, i32 %232.load1007
  2351009 = sdiv i32 %2341008, i32 2
  br bb %while.exit547.split992
getMid.else:
  n.load2361012 = load i32 from ptr @n
  2371013 = sdiv i32 %n.load2361012, i32 2
  7291014 = shl i32 %2371013, i32 2
  2401015 = ptradd ptr %result, i32 %7291014
  240.load1016 = load i32 from ptr %2401015
  br bb %while.exit547.split992
insertsort.while.cond57:
  i56.phi1023 = phi [bb %arrCopy.while.exit328887, i32 1, bb %insertsort.while.exit74, i32 %1061054]
  621025 = icmp slt i32 %i56.phi1023, i32 %n.load330876
  br i1 %621025, bb %insertsort.while.body58, bb %insertsort.while.exit59
insertsort.while.body58:
  7301028 = shl i32 %i56.phi1023, i32 2
  671029 = ptradd ptr %result, i32 %7301028
  67.load1030 = load i32 from ptr %671029
  711031 = sub i32 %i56.phi1023, i32 1
  br bb %insertsort.while.cond72
insertsort.while.exit59:
  br bb %while.cond583
insertsort.while.cond72:
  j69.phi1036 = phi [bb %insertsort.while.body58, i32 %711031, bb %insertsort.while.body73, i32 %991047]
  771037 = icmp sgt i32 %j69.phi1036, i32 -1
  br i1 %771037, bb %insertsort.select.then, bb %insertsort.select.else
insertsort.while.body73:
  911040 = add i32 %j69.phi1036, i32 1
  7311041 = shl i32 %911040, i32 2
  931042 = ptradd ptr %result, i32 %7311041
  7321043 = shl i32 %j69.phi1036, i32 2
  961044 = ptradd ptr %result, i32 %7321043
  96.load1045 = load i32 from ptr %961044
  store i32 %96.load1045 to ptr %931042
  991047 = sub i32 %j69.phi1036, i32 1
  br bb %insertsort.while.cond72
insertsort.while.exit74:
  1011050 = add i32 %j69.phi1036, i32 1
  7331051 = shl i32 %1011050, i32 2
  1031052 = ptradd ptr %result, i32 %7331051
  store i32 %67.load1030 to ptr %1031052
  1061054 = add i32 %i56.phi1023, i32 1
  br bb %insertsort.while.cond57
insertsort.select.then:
  7341057 = shl i32 %j69.phi1036, i32 2
  851058 = ptradd ptr %result, i32 %7341057
  85.load1059 = load i32 from ptr %851058
  871060 = icmp slt i32 %67.load1030, i32 %85.load1059
  br bb %insertsort.select.exit
insertsort.select.else:
  br bb %insertsort.select.exit
insertsort.select.exit:
  select.phi1065 = phi [bb %insertsort.select.else, i1 0, bb %insertsort.select.then, i1 %871060]
  br i1 %select.phi1065, bb %insertsort.while.body73, bb %insertsort.while.exit74
revert.while.cond298:
  j297.phi1072 = phi [bb %arrCopy.while.exit328, i32 0, bb %revert.while.body299, i32 %3231086]
  i296.phi1073 = phi [bb %arrCopy.while.exit328, i32 0, bb %revert.while.body299, i32 %3211085]
  3031074 = icmp slt i32 %i296.phi1073, i32 %j297.phi1072
  br i1 %3031074, bb %revert.while.body299, bb %revert.while.exit300
revert.while.body299:
  7351077 = shl i32 %i296.phi1073, i32 2
  3071078 = ptradd ptr %result, i32 %7351077
  307.load1079 = load i32 from ptr %3071078
  7371080 = shl i32 %j297.phi1072, i32 2
  3141081 = ptradd ptr %result, i32 %7371080
  314.load1082 = load i32 from ptr %3141081
  store i32 %314.load1082 to ptr %3071078
  store i32 %307.load1079 to ptr %3141081
  3211085 = add i32 %i296.phi1073, i32 1
  3231086 = sub i32 %j297.phi1072, i32 1
  br bb %revert.while.cond298
revert.while.exit300:
  br bb %while.cond530
calSum.while.cond346:
  i345.phi1095 = phi [bb %arrCopy.while.exit328925, i32 0, bb %calSum.if.exit366, i32 %3761116]
  sum.phi7061096 = phi [bb %arrCopy.while.exit328925, i32 0, bb %calSum.if.exit366, i32 %sum.phi1115]
  3511098 = icmp slt i32 %i345.phi1095, i32 %n.load330914
  br i1 %3511098, bb %calSum.while.body347, bb %calSum.while.exit348
calSum.while.body347:
  7541101 = shl i32 %i345.phi1095, i32 2
  3561102 = ptradd ptr %result, i32 %7541101
  356.load1103 = load i32 from ptr %3561102
  3581104 = add i32 %sum.phi7061096, i32 %356.load1103
  3611105 = srem i32 %i345.phi1095, i32 4
  3641107 = icmp ne i32 %3611105, i32 3
  br i1 %3641107, bb %calSum.then365, bb %calSum.else367
calSum.while.exit348:
  br bb %while.cond617
calSum.then365:
  store i32 0 to ptr %3561102
  br bb %calSum.if.exit366
calSum.if.exit366:
  sum.phi1115 = phi [bb %calSum.else367, i32 0, bb %calSum.then365, i32 %3581104]
  3761116 = add i32 %i345.phi1095, i32 1
  br bb %calSum.while.cond346
calSum.else367:
  store i32 %3581104 to ptr %3561102
  br bb %calSum.if.exit366
bubblesort.while.cond:
  tmp.phi7131126 = phi [bb %while.exit532, i32 ub, bb %bubblesort.while.exit13, i32 %tmp.phi7121137]
  i.phi1127 = phi [bb %while.exit532, i32 0, bb %bubblesort.while.exit13, i32 %541155]
  n.load1128 = load i32 from ptr @n
  81129 = sub i32 %n.load1128, i32 1
  91130 = icmp slt i32 %i.phi1127, i32 %81129
  br i1 %91130, bb %bubblesort.while.body, bb %bubblesort.while.exit
bubblesort.while.body:
  br bb %bubblesort.while.cond11
bubblesort.while.exit:
  br bb %while.cond545
bubblesort.while.cond11:
  tmp.phi7121137 = phi [bb %bubblesort.while.body, i32 %tmp.phi7131126, bb %bubblesort.if.exit, i32 %tmp.phi1164]
  j.phi1138 = phi [bb %bubblesort.while.body, i32 0, bb %bubblesort.if.exit, i32 %261148]
  n.load151139 = load i32 from ptr @n
  171140 = sub i32 %n.load151139, i32 %i.phi1127
  181141 = sub i32 %171140, i32 1
  191142 = icmp slt i32 %j.phi1138, i32 %181141
  br i1 %191142, bb %bubblesort.while.body12, bb %bubblesort.while.exit13
bubblesort.while.body12:
  7571145 = shl i32 %j.phi1138, i32 2
  231146 = ptradd ptr %result, i32 %7571145
  23.load1147 = load i32 from ptr %231146
  261148 = add i32 %j.phi1138, i32 1
  7581149 = shl i32 %261148, i32 2
  281150 = ptradd ptr %result, i32 %7581149
  28.load1151 = load i32 from ptr %281150
  301152 = icmp sgt i32 %23.load1147, i32 %28.load1151
  br i1 %301152, bb %bubblesort.then, bb %bubblesort.if.exit
bubblesort.while.exit13:
  541155 = add i32 %i.phi1127, i32 1
  br bb %bubblesort.while.cond
bubblesort.then:
  37.load1158 = load i32 from ptr %281150
  45.load1159 = load i32 from ptr %231146
  store i32 %45.load1159 to ptr %281150
  store i32 %37.load1158 to ptr %231146
  br bb %bubblesort.if.exit
bubblesort.if.exit:
  tmp.phi1164 = phi [bb %bubblesort.while.body12, i32 %tmp.phi7121137, bb %bubblesort.then, i32 %37.load1158]
  br bb %bubblesort.while.cond11
bubblesort.while.cond1170:
  tmp.phi7131171 = phi [bb %arrCopy.while.exit328868, i32 ub, bb %bubblesort.while.exit131199, i32 %tmp.phi7121182]
  i.phi1172 = phi [bb %arrCopy.while.exit328868, i32 0, bb %bubblesort.while.exit131199, i32 %541200]
  91175 = icmp slt i32 %i.phi1172, i32 %81174
  br i1 %91175, bb %bubblesort.while.body1177, bb %bubblesort.while.exit1179
bubblesort.while.body1177:
  171185 = sub i32 %n.load330857, i32 %i.phi1172
  br bb %bubblesort.while.cond111181
bubblesort.while.exit1179:
  br bb %while.cond567
bubblesort.while.cond111181:
  tmp.phi7121182 = phi [bb %bubblesort.while.body1177, i32 %tmp.phi7131171, bb %bubblesort.if.exit1208, i32 %tmp.phi1209]
  j.phi1183 = phi [bb %bubblesort.while.body1177, i32 0, bb %bubblesort.if.exit1208, i32 %261193]
  181186 = sub i32 %171185, i32 1
  191187 = icmp slt i32 %j.phi1183, i32 %181186
  br i1 %191187, bb %bubblesort.while.body121189, bb %bubblesort.while.exit131199
bubblesort.while.body121189:
  7571190 = shl i32 %j.phi1183, i32 2
  231191 = ptradd ptr %result, i32 %7571190
  23.load1192 = load i32 from ptr %231191
  261193 = add i32 %j.phi1183, i32 1
  7581194 = shl i32 %261193, i32 2
  281195 = ptradd ptr %result, i32 %7581194
  28.load1196 = load i32 from ptr %281195
  301197 = icmp sgt i32 %23.load1192, i32 %28.load1196
  br i1 %301197, bb %bubblesort.then1202, bb %bubblesort.if.exit1208
bubblesort.while.exit131199:
  541200 = add i32 %i.phi1172, i32 1
  br bb %bubblesort.while.cond1170
bubblesort.then1202:
  37.load1203 = load i32 from ptr %281195
  45.load1204 = load i32 from ptr %231191
  store i32 %45.load1204 to ptr %281195
  store i32 %37.load1203 to ptr %231191
  br bb %bubblesort.if.exit1208
bubblesort.if.exit1208:
  tmp.phi1209 = phi [bb %bubblesort.while.body121189, i32 %tmp.phi7121182, bb %bubblesort.then1202, i32 %37.load1203]
  br bb %bubblesort.while.cond111181
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

i32 calSum(ptr arr, i32 stride) {
entry342:
  br bb %while.cond346
while.cond346:
  i345.phi = phi [bb %entry342, i32 0, bb %if.exit366, i32 %376]
  sum.phi706 = phi [bb %entry342, i32 0, bb %if.exit366, i32 %sum.phi]
  n.load350 = load i32 from ptr @n
  351 = icmp slt i32 %i345.phi, i32 %n.load350
  br i1 %351, bb %while.body347, bb %while.exit348
while.body347:
  754 = shl i32 %i345.phi, i32 2
  356 = ptradd ptr %arr, i32 %754
  356.load = load i32 from ptr %356
  358 = add i32 %sum.phi706, i32 %356.load
  361 = srem i32 %i345.phi, i32 %stride
  363 = sub i32 %stride, i32 1
  364 = icmp ne i32 %361, i32 %363
  br i1 %364, bb %then365, bb %else367
while.exit348:
  ret i32 0
then365:
  store i32 0 to ptr %356
  br bb %if.exit366
if.exit366:
  sum.phi = phi [bb %else367, i32 0, bb %then365, i32 %358]
  376 = add i32 %i345.phi, i32 1
  br bb %while.cond346
else367:
  store i32 %358 to ptr %356
  br bb %if.exit366
}

i32 bubblesort(ptr arr) {
entry:
  br bb %while.cond
while.cond:
  tmp.phi713 = phi [bb %entry, i32 ub, bb %while.exit13, i32 %tmp.phi712]
  i.phi = phi [bb %entry, i32 0, bb %while.exit13, i32 %54]
  n.load = load i32 from ptr @n
  8 = sub i32 %n.load, i32 1
  9 = icmp slt i32 %i.phi, i32 %8
  br i1 %9, bb %while.body, bb %while.exit
while.body:
  br bb %while.cond11
while.exit:
  ret i32 0
while.cond11:
  tmp.phi712 = phi [bb %while.body, i32 %tmp.phi713, bb %if.exit, i32 %tmp.phi]
  j.phi = phi [bb %while.body, i32 0, bb %if.exit, i32 %26]
  n.load15 = load i32 from ptr @n
  17 = sub i32 %n.load15, i32 %i.phi
  18 = sub i32 %17, i32 1
  19 = icmp slt i32 %j.phi, i32 %18
  br i1 %19, bb %while.body12, bb %while.exit13
while.body12:
  757 = shl i32 %j.phi, i32 2
  23 = ptradd ptr %arr, i32 %757
  23.load = load i32 from ptr %23
  26 = add i32 %j.phi, i32 1
  758 = shl i32 %26, i32 2
  28 = ptradd ptr %arr, i32 %758
  28.load = load i32 from ptr %28
  30 = icmp sgt i32 %23.load, i32 %28.load
  br i1 %30, bb %then, bb %if.exit
while.exit13:
  54 = add i32 %i.phi, i32 1
  br bb %while.cond
then:
  37.load = load i32 from ptr %28
  45.load = load i32 from ptr %23
  store i32 %45.load to ptr %28
  store i32 %37.load to ptr %23
  br bb %if.exit
if.exit:
  tmp.phi = phi [bb %while.body12, i32 %tmp.phi712, bb %then, i32 %37.load]
  br bb %while.cond11
}


