global ptr w init with i32 0
global ptr v2 init with i32 0
global ptr v1 init with i32 0
global ptr m init with i32 0
global ptr book init with 16 x i32 zeros
global ptr n init with i32 0
global ptr e init with 256 x i32 zeros
global ptr dis init with 16 x i32 zeros
global ptr INF init with i32 65535
external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry130:
  132 = call i32 getint()
  store i32 %132 to ptr @n
  133 = call i32 getint()
  store i32 %133 to ptr @m
  br bb %while.cond134
while.cond134:
  i131.phi211 = phi [bb %entry130, i32 1, bb %while.exit144, i32 %171]
  n.load138 = load i32 from ptr @n
  139 = icmp sle i32 %i131.phi211, i32 %n.load138
  140 = icmp ne i1 %139, i1 0
  br i1 %140, bb %while.body135, bb %while.exit136
while.body135:
  br bb %while.cond142
while.exit136:
  br bb %while.cond172
while.cond142:
  j141.phi = phi [bb %while.body135, i32 1, bb %if.exit153, i32 %169]
  n.load146 = load i32 from ptr @n
  147 = icmp sle i32 %j141.phi, i32 %n.load146
  148 = icmp ne i1 %147, i1 0
  br i1 %148, bb %while.body143, bb %while.exit144
while.body143:
  151 = icmp eq i32 %i131.phi211, i32 %j141.phi
  br i1 %151, bb %then152, bb %else
while.exit144:
  171 = add i32 %i131.phi211, i32 1
  br bb %while.cond134
then152:
  156 = mul i32 %i131.phi211, i32 64
  157 = ptradd ptr @e, i32 %156
  159 = mul i32 %j141.phi, i32 4
  160 = ptradd ptr %157, i32 %159
  store i32 0 to ptr %160
  br bb %if.exit153
if.exit153:
  169 = add i32 %j141.phi, i32 1
  br bb %while.cond142
else:
  162 = mul i32 %i131.phi211, i32 64
  163 = ptradd ptr @e, i32 %162
  165 = mul i32 %j141.phi, i32 4
  166 = ptradd ptr %163, i32 %165
  INF.load167 = load i32 from ptr @INF
  store i32 %INF.load167 to ptr %166
  br bb %if.exit153
while.cond172:
  i131.phi210 = phi [bb %while.exit136, i32 1, bb %while.body173, i32 %191]
  m.load = load i32 from ptr @m
  177 = icmp sle i32 %i131.phi210, i32 %m.load
  178 = icmp ne i1 %177, i1 0
  br i1 %178, bb %while.body173, bb %while.exit174
while.body173:
  180 = call i32 getint()
  182 = call i32 getint()
  184 = mul i32 %180, i32 64
  185 = ptradd ptr @e, i32 %184
  187 = mul i32 %182, i32 4
  188 = ptradd ptr %185, i32 %187
  189 = call i32 getint()
  store i32 %189 to ptr %188
  191 = add i32 %i131.phi210, i32 1
  br bb %while.cond172
while.exit174:
  call void Dijkstra()
  br bb %while.cond193
while.cond193:
  i131.phi = phi [bb %while.exit174, i32 1, bb %while.body194, i32 %207]
  n.load197 = load i32 from ptr @n
  198 = icmp sle i32 %i131.phi, i32 %n.load197
  199 = icmp ne i1 %198, i1 0
  br i1 %199, bb %while.body194, bb %while.exit195
while.body194:
  201 = mul i32 %i131.phi, i32 4
  202 = ptradd ptr @dis, i32 %201
  202.load = load i32 from ptr %202
  call void putint(i32 %202.load)
  call void putch(i32 32)
  207 = add i32 %i131.phi, i32 1
  br bb %while.cond193
while.exit195:
  call void putch(i32 10)
  ret i32 0
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

void Dijkstra() {
entry:
  br bb %while.cond
while.cond:
  i.phi217 = phi [bb %entry, i32 1, bb %while.body, i32 %23]
  n.load = load i32 from ptr @n
  8 = icmp sle i32 %i.phi217, i32 %n.load
  9 = icmp ne i1 %8, i1 0
  br i1 %9, bb %while.body, bb %while.exit
while.body:
  11 = mul i32 %i.phi217, i32 4
  12 = ptradd ptr @dis, i32 %11
  14 = ptradd ptr @e, i32 64
  17 = ptradd ptr %14, i32 %11
  17.load = load i32 from ptr %17
  store i32 %17.load to ptr %12
  21 = ptradd ptr @book, i32 %11
  store i32 0 to ptr %21
  23 = add i32 %i.phi217, i32 1
  br bb %while.cond
while.exit:
  25 = ptradd ptr @book, i32 4
  store i32 1 to ptr %25
  br bb %while.cond26
while.cond26:
  select.phi228 = phi [bb %while.exit, i1 ub, bb %while.exit76, i1 %select.phi227]
  i.phi = phi [bb %while.exit, i32 1, bb %while.exit76, i32 %129]
  n.load30 = load i32 from ptr @n
  31 = sub i32 %n.load30, i32 1
  32 = icmp sle i32 %i.phi, i32 %31
  33 = icmp ne i1 %32, i1 0
  br i1 %33, bb %while.body27, bb %while.exit28
while.body27:
  INF.load = load i32 from ptr @INF
  br bb %while.cond38
while.exit28:
  ret 
while.cond38:
  select.phi227 = phi [bb %while.body27, i1 %select.phi228, bb %if.exit, i1 %select.phi]
  k.phi = phi [bb %while.body27, i32 1, bb %if.exit, i32 %69]
  min_index.phi222 = phi [bb %while.body27, i32 0, bb %if.exit, i32 %min_index.phi]
  min_num.phi219 = phi [bb %while.body27, i32 %INF.load, bb %if.exit, i32 %min_num.phi]
  n.load42 = load i32 from ptr @n
  43 = icmp sle i32 %k.phi, i32 %n.load42
  44 = icmp ne i1 %43, i1 0
  br i1 %44, bb %while.body39, bb %while.exit40
while.body39:
  47 = mul i32 %k.phi, i32 4
  48 = ptradd ptr @dis, i32 %47
  48.load = load i32 from ptr %48
  50 = icmp sgt i32 %min_num.phi219, i32 %48.load
  br i1 %50, bb %select.then, bb %select.else
while.exit40:
  71 = mul i32 %min_index.phi222, i32 4
  72 = ptradd ptr @book, i32 %71
  store i32 1 to ptr %72
  br bb %while.cond74
select.then:
  57 = ptradd ptr @book, i32 %47
  57.load = load i32 from ptr %57
  59 = icmp eq i32 %57.load, i32 0
  br bb %select.exit
select.else:
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 0, bb %select.then, i1 %59]
  br i1 %select.phi, bb %then, bb %if.exit
then:
  65.load = load i32 from ptr %48
  br bb %if.exit
if.exit:
  min_index.phi = phi [bb %select.exit, i32 %min_index.phi222, bb %then, i32 %k.phi]
  min_num.phi = phi [bb %select.exit, i32 %min_num.phi219, bb %then, i32 %65.load]
  69 = add i32 %k.phi, i32 1
  br bb %while.cond38
while.cond74:
  j73.phi = phi [bb %while.exit40, i32 1, bb %if.exit91, i32 %127]
  n.load78 = load i32 from ptr @n
  79 = icmp sle i32 %j73.phi, i32 %n.load78
  80 = icmp ne i1 %79, i1 0
  br i1 %80, bb %while.body75, bb %while.exit76
while.body75:
  82 = mul i32 %min_index.phi222, i32 64
  83 = ptradd ptr @e, i32 %82
  85 = mul i32 %j73.phi, i32 4
  86 = ptradd ptr %83, i32 %85
  86.load = load i32 from ptr %86
  INF.load88 = load i32 from ptr @INF
  89 = icmp slt i32 %86.load, i32 %INF.load88
  br i1 %89, bb %then90, bb %if.exit91
while.exit76:
  129 = add i32 %i.phi, i32 1
  br bb %while.cond26
then90:
  94 = ptradd ptr @dis, i32 %85
  94.load = load i32 from ptr %94
  98 = ptradd ptr @dis, i32 %71
  98.load = load i32 from ptr %98
  105.load = load i32 from ptr %86
  107 = add i32 %98.load, i32 %105.load
  108 = icmp sgt i32 %94.load, i32 %107
  br i1 %108, bb %then109, bb %if.exit110
if.exit91:
  127 = add i32 %j73.phi, i32 1
  br bb %while.cond74
then109:
  116.load = load i32 from ptr %98
  123.load = load i32 from ptr %86
  125 = add i32 %116.load, i32 %123.load
  store i32 %125 to ptr %94
  br bb %if.exit110
if.exit110:
  br bb %if.exit91
}

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


