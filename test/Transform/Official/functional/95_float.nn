external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry77:  pred()
  %arr = stack 40
  3539 = si2f i32 0 to float
  4540 = fcmp olt float 33000.078125, float %3539
  br i1 %4540, bb %float_abs.then542, bb %float_abs.if.exit545
entry77.split386:  pred(float_eq.then37, float_eq.else)
  80.ret = phi [bb %float_eq.then37, i32 %44397, bb %float_eq.else, i32 0]
  71211 = icmp ne i32 %80.ret, i32 0
  br i1 %71211, bb %assert_not.then72, bb %assert_not.else74
entry77.split.split402:  pred(float_eq.then37408, float_eq.else415)
  84.ret = phi [bb %float_eq.then37408, i32 %44413, bb %float_eq.else415, i32 0]
  71223 = icmp ne i32 %84.ret, i32 0
  br i1 %71223, bb %assert_not.then72225, bb %assert_not.else74230
entry77.split.split.split418:  pred(float_eq.then37424, float_eq.else431)
  88.ret = phi [bb %float_eq.then37424, i32 %44429, bb %float_eq.else431, i32 0]
  59468 = icmp ne i32 %88.ret, i32 0
  60469 = xor i1 %59468, i1 -1
  61470 = zext i1 %60469 to i32
  62471 = icmp ne i32 %61470, i32 0
  br i1 %62471, bb %assert.then63, bb %assert.else65
entry77.split.split.split347.split.split:  pred(float_eq.then37440, float_eq.else447)
  95.ret = phi [bb %float_eq.then37440, i32 %44445, bb %float_eq.else447, i32 0]
  59498 = icmp ne i32 %95.ret, i32 0
  60499 = xor i1 %59498, i1 -1
  61500 = zext i1 %60499 to i32
  62501 = icmp ne i32 %61500, i32 0
  br i1 %62501, bb %assert.then63503, bb %assert.else65509
entry77.split.split.split347.split.split.split:  pred(float_eq.then37456, float_eq.else463)
  99.ret = phi [bb %float_eq.then37456, i32 %44461, bb %float_eq.else463, i32 0]
  71235 = icmp ne i32 %99.ret, i32 0
  br i1 %71235, bb %assert_not.then72237, bb %assert_not.else74242
then102:  pred(assert_not.if.exit73240)
  call void putch(i32 111)
  call void putch(i32 107)
  call void putch(i32 10)
  br bb %if.exit103
if.exit103:  pred(assert_not.if.exit73240, then102)
  105 = fcmp one float 3.300000, float 0.000000
  106 = xor i1 %105, i1 -1
  107 = zext i1 %106 to i32
  108 = icmp ne i32 %107, i32 0
  109 = xor i1 %108, i1 -1
  110 = zext i1 %109 to i32
  111 = icmp ne i32 %110, i32 0
  br i1 %111, bb %then112, bb %if.exit113
then112:  pred(if.exit103)
  call void putch(i32 111)
  call void putch(i32 107)
  call void putch(i32 10)
  br bb %if.exit113
if.exit113:  pred(if.exit103, then112)
  115 = fcmp one float 0.000000, float 0.000000
  br i1 %115, bb %select.then, bb %select.else
select.then:  pred(if.exit113)
  br bb %select.exit
select.else:  pred(if.exit113)
  br bb %select.exit
select.exit:  pred(select.then, select.else)
  select.phi = phi [bb %select.else, i1 0, bb %select.then, i1 -1]
  br i1 %select.phi, bb %then122, bb %if.exit123
then122:  pred(select.exit)
  call void putch(i32 101)
  call void putch(i32 114)
  call void putch(i32 114)
  call void putch(i32 111)
  call void putch(i32 114)
  call void putch(i32 10)
  br bb %if.exit123
if.exit123:  pred(select.exit, then122)
  130 = fcmp one float 0.300000, float 0.000000
  br i1 %130, bb %then133, bb %if.exit134
then133:  pred(if.exit123)
  call void putch(i32 111)
  call void putch(i32 107)
  call void putch(i32 10)
  br bb %if.exit134
if.exit134:  pred(if.exit123, then133)
  store float 1.000000 to ptr %arr
  arr.index141 = ptradd ptr %arr, i32 4
  store float %42395 to ptr %arr.index141
  arr.index142 = ptradd ptr %arr, i32 8
  store float 0.000000 to ptr %arr.index142
  arr.index143 = ptradd ptr %arr, i32 12
  store float 0.000000 to ptr %arr.index143
  arr.index144 = ptradd ptr %arr, i32 16
  store float 0.000000 to ptr %arr.index144
  arr.index145 = ptradd ptr %arr, i32 20
  store float 0.000000 to ptr %arr.index145
  arr.index146 = ptradd ptr %arr, i32 24
  store float 0.000000 to ptr %arr.index146
  arr.index147 = ptradd ptr %arr, i32 28
  store float 0.000000 to ptr %arr.index147
  arr.index148 = ptradd ptr %arr, i32 32
  store float 0.000000 to ptr %arr.index148
  arr.index149 = ptradd ptr %arr, i32 36
  store float 0.000000 to ptr %arr.index149
  151 = call i32 getfarray(ptr %arr)
  190 = fneg float 10.000000
  191 = fneg float %190
  br bb %while.body
while.body:  pred(while.body, if.exit134)
  i.phi594 = phi [bb %while.body, i32 %194, bb %if.exit134, i32 1]
  p.phi593 = phi [bb %while.body, i32 %197, bb %if.exit134, i32 0]
  160 = call float getfloat()
  164 = fmul float 3.141593, float %160
  166 = fmul float %164, float %160
  169 = f2si float %160 to i32
  14375 = si2f i32 %169 to float
  15376 = fmul float 3.141593, float %14375
  18377 = fmul float %15376, float %14375
  21378 = mul i32 %169, i32 %169
  23379 = si2f i32 %21378 to float
  24380 = fmul float %23379, float 3.141593
  25381 = fadd float %18377, float %24380
  27383 = fdiv float %25381, float %42395
  207 = shl i32 %p.phi593, i32 2
  173 = ptradd ptr %arr, i32 %207
  177.load = load float from ptr %173
  180 = fadd float %177.load, float %160
  store float %180 to ptr %173
  call void putfloat(float %166)
  call void putch(i32 32)
  185 = f2si float %27383 to i32
  call void putint(i32 %185)
  call void putch(i32 10)
  192 = si2f i32 %i.phi594 to float
  193 = fmul float %192, float %191
  194 = f2si float %193 to i32
  197 = add i32 %p.phi593, i32 1
  157 = icmp slt i32 %194, i32 1000000000
  br i1 %157, bb %while.body, bb %while.exit
while.exit:  pred(while.body)
  call void putfarray(i32 %151, ptr %arr)
  ret i32 0
assert_not.then72:  pred(entry77.split386)
  call void putch(i32 101)
  call void putch(i32 114)
  call void putch(i32 114)
  call void putch(i32 111)
  call void putch(i32 114)
  call void putch(i32 10)
  br bb %assert_not.if.exit73
assert_not.if.exit73:  pred(assert_not.then72, assert_not.else74)
  4551 = fcmp olt float 60.475666, float %3539
  br i1 %4551, bb %float_abs.then553, bb %float_abs.if.exit556
assert_not.else74:  pred(entry77.split386)
  call void putch(i32 111)
  call void putch(i32 107)
  call void putch(i32 10)
  br bb %assert_not.if.exit73
assert_not.then72225:  pred(entry77.split.split402)
  call void putch(i32 101)
  call void putch(i32 114)
  call void putch(i32 114)
  call void putch(i32 111)
  call void putch(i32 114)
  call void putch(i32 10)
  br bb %assert_not.if.exit73228
assert_not.if.exit73228:  pred(assert_not.then72225, assert_not.else74230)
  4562 = fcmp olt float 0.000000, float %3539
  br i1 %4562, bb %float_abs.then564, bb %float_abs.if.exit567
assert_not.else74230:  pred(entry77.split.split402)
  call void putch(i32 111)
  call void putch(i32 107)
  call void putch(i32 10)
  br bb %assert_not.if.exit73228
assert_not.then72237:  pred(entry77.split.split.split347.split.split.split)
  call void putch(i32 101)
  call void putch(i32 114)
  call void putch(i32 114)
  call void putch(i32 111)
  call void putch(i32 114)
  call void putch(i32 10)
  br bb %assert_not.if.exit73240
assert_not.if.exit73240:  pred(assert_not.then72237, assert_not.else74242)
  101 = fcmp one float 1.500000, float 0.000000
  br i1 %101, bb %then102, bb %if.exit103
assert_not.else74242:  pred(entry77.split.split.split347.split.split.split)
  call void putch(i32 111)
  call void putch(i32 107)
  call void putch(i32 10)
  br bb %assert_not.if.exit73240
float_eq.entry28.split:  pred(float_abs.then542, float_abs.if.exit545)
  34389.ret = phi [bb %float_abs.then542, float %8543, bb %float_abs.if.exit545, float 33000.078125]
  36390 = fcmp olt float %34389.ret, float 0.000001
  40393 = si2f i32 1 to float
  42395 = si2f i32 2 to float
  br i1 %36390, bb %float_eq.then37, bb %float_eq.else
float_eq.then37:  pred(float_eq.entry28.split)
  41394 = fmul float %40393, float 2.000000
  43396 = fdiv float %41394, float %42395
  44397 = f2si float %43396 to i32
  br bb %entry77.split386
float_eq.else:  pred(float_eq.entry28.split)
  br bb %entry77.split386
float_eq.entry28403.split:  pred(float_abs.then553, float_abs.if.exit556)
  34405.ret = phi [bb %float_abs.then553, float %8554, bb %float_abs.if.exit556, float 60.475666]
  36406 = fcmp olt float %34405.ret, float 0.000001
  br i1 %36406, bb %float_eq.then37408, bb %float_eq.else415
float_eq.then37408:  pred(float_eq.entry28403.split)
  41410 = fmul float %40393, float 2.000000
  43412 = fdiv float %41410, float %42395
  44413 = f2si float %43412 to i32
  br bb %entry77.split.split402
float_eq.else415:  pred(float_eq.entry28403.split)
  br bb %entry77.split.split402
float_eq.entry28419.split:  pred(float_abs.then564, float_abs.if.exit567)
  34421.ret = phi [bb %float_abs.then564, float %8565, bb %float_abs.if.exit567, float 0.000000]
  36422 = fcmp olt float %34421.ret, float 0.000001
  br i1 %36422, bb %float_eq.then37424, bb %float_eq.else431
float_eq.then37424:  pred(float_eq.entry28419.split)
  41426 = fmul float %40393, float 2.000000
  43428 = fdiv float %41426, float %42395
  44429 = f2si float %43428 to i32
  br bb %entry77.split.split.split418
float_eq.else431:  pred(float_eq.entry28419.split)
  br bb %entry77.split.split.split418
float_eq.entry28435.split:  pred(float_abs.then575, float_abs.if.exit578)
  34437.ret = phi [bb %float_abs.then575, float %8576, bb %float_abs.if.exit578, float %33436]
  36438 = fcmp olt float %34437.ret, float 0.000001
  br i1 %36438, bb %float_eq.then37440, bb %float_eq.else447
float_eq.then37440:  pred(float_eq.entry28435.split)
  41442 = fmul float %40393, float 2.000000
  43444 = fdiv float %41442, float %42395
  44445 = f2si float %43444 to i32
  br bb %entry77.split.split.split347.split.split
float_eq.else447:  pred(float_eq.entry28435.split)
  br bb %entry77.split.split.split347.split.split
float_eq.entry28451.split:  pred(float_abs.then586, float_abs.if.exit589)
  34453.ret = phi [bb %float_abs.then586, float %8587, bb %float_abs.if.exit589, float -3862.000000]
  36454 = fcmp olt float %34453.ret, float 0.000001
  br i1 %36454, bb %float_eq.then37456, bb %float_eq.else463
float_eq.then37456:  pred(float_eq.entry28451.split)
  41458 = fmul float %40393, float 2.000000
  43460 = fdiv float %41458, float %42395
  44461 = f2si float %43460 to i32
  br bb %entry77.split.split.split347.split.split.split
float_eq.else463:  pred(float_eq.entry28451.split)
  br bb %entry77.split.split.split347.split.split.split
assert.then63:  pred(entry77.split.split.split418)
  call void putch(i32 101)
  call void putch(i32 114)
  call void putch(i32 114)
  call void putch(i32 111)
  call void putch(i32 114)
  call void putch(i32 10)
  br bb %assert.if.exit64
assert.if.exit64:  pred(assert.then63, assert.else65)
  91 = f2si float 5.500000 to i32
  14349 = si2f i32 %91 to float
  15350 = fmul float 3.141593, float %14349
  18351 = fmul float %15350, float %14349
  21352 = mul i32 %91, i32 %91
  23353 = si2f i32 %21352 to float
  24354 = fmul float %23353, float 3.141593
  25355 = fadd float %18351, float %24354
  27357 = fdiv float %25355, float %42395
  14362 = si2f i32 5 to float
  15363 = fmul float 3.141593, float %14362
  18364 = fmul float %15363, float %14362
  23366 = si2f i32 25 to float
  24367 = fmul float %23366, float 3.141593
  25368 = fadd float %18364, float %24367
  27370 = fdiv float %25368, float %42395
  33436 = fsub float %27357, float %27370
  4573 = fcmp olt float %33436, float %3539
  br i1 %4573, bb %float_abs.then575, bb %float_abs.if.exit578
assert.else65:  pred(entry77.split.split.split418)
  call void putch(i32 111)
  call void putch(i32 107)
  call void putch(i32 10)
  br bb %assert.if.exit64
assert.then63503:  pred(entry77.split.split.split347.split.split)
  call void putch(i32 101)
  call void putch(i32 114)
  call void putch(i32 114)
  call void putch(i32 111)
  call void putch(i32 114)
  call void putch(i32 10)
  br bb %assert.if.exit64507
assert.if.exit64507:  pred(assert.then63503, assert.else65509)
  4584 = fcmp olt float -3862.000000, float %3539
  br i1 %4584, bb %float_abs.then586, bb %float_abs.if.exit589
assert.else65509:  pred(entry77.split.split.split347.split.split)
  call void putch(i32 111)
  call void putch(i32 107)
  call void putch(i32 10)
  br bb %assert.if.exit64507
float_abs.then542:  pred(entry77)
  8543 = fneg float 33000.078125
  br bb %float_eq.entry28.split
float_abs.if.exit545:  pred(entry77)
  br bb %float_eq.entry28.split
float_abs.then553:  pred(assert_not.if.exit73)
  8554 = fneg float 60.475666
  br bb %float_eq.entry28403.split
float_abs.if.exit556:  pred(assert_not.if.exit73)
  br bb %float_eq.entry28403.split
float_abs.then564:  pred(assert_not.if.exit73228)
  8565 = fneg float 0.000000
  br bb %float_eq.entry28419.split
float_abs.if.exit567:  pred(assert_not.if.exit73228)
  br bb %float_eq.entry28419.split
float_abs.then575:  pred(assert.if.exit64)
  8576 = fneg float %33436
  br bb %float_eq.entry28435.split
float_abs.if.exit578:  pred(assert.if.exit64)
  br bb %float_eq.entry28435.split
float_abs.then586:  pred(assert.if.exit64507)
  8587 = fneg float -3862.000000
  br bb %float_eq.entry28451.split
float_abs.if.exit589:  pred(assert.if.exit64507)
  br bb %float_eq.entry28451.split
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


