global ptr a init with i32 7
external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry13:  pred()
  a.load44 = load i32 from ptr @a
  645 = icmp eq i32 1, i32 %a.load44
  br bb %while.body
while.body:  pred(if.exit25, entry13)
  result.phi4055 = phi [bb %if.exit25, i32 %result.phi, bb %entry13, i32 0]
  i.phi54 = phi [bb %if.exit25, i32 %31, bb %entry13, i32 0]
  br i1 %645, bb %func.then, bb %func.else
while.body.split:  pred(func.then, func.else)
  22.ret = phi [bb %func.then, i32 1, bb %func.else, i32 0]
  23 = icmp eq i32 %22.ret, i32 1
  br i1 %23, bb %then24, bb %if.exit25
while.exit:  pred(if.exit25)
  33 = icmp slt i32 %result.phi, i32 100
  br i1 %33, bb %then34, bb %else36
then24:  pred(while.body.split)
  28 = add i32 %result.phi4055, i32 1
  br bb %if.exit25
if.exit25:  pred(while.body.split, then24)
  result.phi = phi [bb %while.body.split, i32 %result.phi4055, bb %then24, i32 %28]
  31 = add i32 %i.phi54, i32 1
  20 = icmp slt i32 %31, i32 100
  br i1 %20, bb %while.body, bb %while.exit
then34:  pred(while.exit)
  call void putint(i32 1)
  br bb %if.exit35
if.exit35:  pred(then34, else36)
  ret i32 0
else36:  pred(while.exit)
  call void putint(i32 0)
  br bb %if.exit35
func.then:  pred(while.body)
  br bb %while.body.split
func.else:  pred(while.body)
  br bb %while.body.split
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


