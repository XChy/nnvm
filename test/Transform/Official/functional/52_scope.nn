global ptr a init with i32 7
external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry12:
  br bb %while.cond
while.cond:
  i.phi = phi [bb %entry12, i32 0, bb %if.exit24, i32 %28]
  result.phi37 = phi [bb %entry12, i32 0, bb %if.exit24, i32 %result.phi]
  19 = icmp slt i32 %i.phi, i32 100
  20 = icmp ne i1 %19, i1 0
  br i1 %20, bb %while.body, bb %while.exit
while.body:
  21 = call i32 func()
  22 = icmp eq i32 %21, i32 1
  br i1 %22, bb %then23, bb %if.exit24
while.exit:
  30 = icmp slt i32 %result.phi37, i32 100
  br i1 %30, bb %then31, bb %else33
then23:
  26 = add i32 %result.phi37, i32 1
  br bb %if.exit24
if.exit24:
  result.phi = phi [bb %while.body, i32 %result.phi37, bb %then23, i32 %26]
  28 = add i32 %i.phi, i32 1
  br bb %while.cond
then31:
  call void putint(i32 1)
  br bb %if.exit32
if.exit32:
  ret i32 0
else33:
  call void putint(i32 0)
  br bb %if.exit32
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

i32 func() {
entry:
  a.load = load i32 from ptr @a
  6 = icmp eq i32 1, i32 %a.load
  br i1 %6, bb %then, bb %else
then:
  ret i32 1
else:
  ret i32 0
}


