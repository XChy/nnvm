external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry1911:
  %a = stack 100
  1913 = call i32 getint()
  br bb %while.cond
while.cond:
  j.phi1966 = phi [bb %entry1911, i32 ub, bb %if.exit1949, i32 %j.phi1965]
  N.phi = phi [bb %entry1911, i32 %1913, bb %if.exit1949, i32 %1960]
  1919 = icmp sgt i32 %N.phi, i32 0
  br i1 %1919, bb %while.body, bb %while.exit
while.body:
  br bb %while.cond1922
while.exit:
  ret i32 0
while.cond1922:
  j.phi1965 = phi [bb %while.body, i32 %j.phi1966, bb %while.exit1931, i32 %j.phi]
  i.phi = phi [bb %while.body, i32 0, bb %while.exit1931, i32 %1945]
  1926 = icmp slt i32 %i.phi, i32 5
  br i1 %1926, bb %while.body1923, bb %while.exit1924
while.body1923:
  br bb %while.cond1929
while.exit1924:
  15.load2375 = load i32 from ptr %a
  172376 = mul i32 %15.load2375, i32 85
  212377 = ptradd ptr %a, i32 4
  21.load2378 = load i32 from ptr %212377
  232379 = mul i32 %21.load2378, i32 23
  242380 = add i32 %172376, i32 %232379
  282381 = ptradd ptr %a, i32 8
  28.load2382 = load i32 from ptr %282381
  312383 = mul i32 %28.load2382, i32 -82
  322384 = add i32 %242380, i32 %312383
  362385 = ptradd ptr %a, i32 12
  36.load2386 = load i32 from ptr %362385
  392387 = mul i32 %36.load2386, i32 -103
  402388 = add i32 %322384, i32 %392387
  442389 = ptradd ptr %a, i32 16
  44.load2390 = load i32 from ptr %442389
  472391 = mul i32 %44.load2390, i32 -123
  482392 = add i32 %402388, i32 %472391
  19692393 = ptradd ptr %a, i32 20
  52.load2394 = load i32 from ptr %19692393
  19702395 = shl i32 %52.load2394, i32 6
  552396 = add i32 %482392, i32 %19702395
  19722397 = ptradd ptr %a, i32 24
  59.load2398 = load i32 from ptr %19722397
  622399 = mul i32 %59.load2398, i32 -120
  632400 = add i32 %552396, i32 %622399
  19742401 = ptradd ptr %a, i32 28
  67.load2402 = load i32 from ptr %19742401
  692403 = mul i32 %67.load2402, i32 50
  702404 = add i32 %632400, i32 %692403
  19762405 = ptradd ptr %a, i32 32
  74.load2406 = load i32 from ptr %19762405
  772407 = mul i32 %74.load2406, i32 -59
  782408 = add i32 %702404, i32 %772407
  19782409 = ptradd ptr %a, i32 36
  82.load2410 = load i32 from ptr %19782409
  842411 = mul i32 %82.load2410, i32 47
  852412 = add i32 %782408, i32 %842411
  19802413 = ptradd ptr %a, i32 40
  89.load2414 = load i32 from ptr %19802413
  922415 = mul i32 %89.load2414, i32 -111
  932416 = add i32 %852412, i32 %922415
  19822417 = ptradd ptr %a, i32 44
  97.load2418 = load i32 from ptr %19822417
  1002419 = mul i32 %97.load2418, i32 -67
  1012420 = add i32 %932416, i32 %1002419
  19842421 = ptradd ptr %a, i32 48
  105.load2422 = load i32 from ptr %19842421
  1082423 = mul i32 %105.load2422, i32 -106
  1092424 = add i32 %1012420, i32 %1082423
  19862425 = ptradd ptr %a, i32 52
  113.load2426 = load i32 from ptr %19862425
  1162427 = mul i32 %113.load2426, i32 -75
  1172428 = add i32 %1092424, i32 %1162427
  19882429 = ptradd ptr %a, i32 56
  121.load2430 = load i32 from ptr %19882429
  1242431 = mul i32 %121.load2430, i32 -102
  1252432 = add i32 %1172428, i32 %1242431
  19902433 = ptradd ptr %a, i32 60
  129.load2434 = load i32 from ptr %19902433
  1312435 = mul i32 %129.load2434, i32 34
  1322436 = add i32 %1252432, i32 %1312435
  19922437 = ptradd ptr %a, i32 64
  136.load2438 = load i32 from ptr %19922437
  1392439 = mul i32 %136.load2438, i32 -39
  1402440 = add i32 %1322436, i32 %1392439
  19942441 = ptradd ptr %a, i32 68
  144.load2442 = load i32 from ptr %19942441
  1462443 = mul i32 %144.load2442, i32 65
  1472444 = add i32 %1402440, i32 %1462443
  19962445 = ptradd ptr %a, i32 72
  151.load2446 = load i32 from ptr %19962445
  1532447 = mul i32 %151.load2446, i32 47
  1542448 = add i32 %1472444, i32 %1532447
  19982449 = ptradd ptr %a, i32 76
  158.load2450 = load i32 from ptr %19982449
  1602451 = mul i32 %158.load2450, i32 113
  1612452 = add i32 %1542448, i32 %1602451
  20002453 = ptradd ptr %a, i32 80
  165.load2454 = load i32 from ptr %20002453
  1672455 = mul i32 %165.load2454, i32 110
  1682456 = add i32 %1612452, i32 %1672455
  20022457 = ptradd ptr %a, i32 84
  172.load2458 = load i32 from ptr %20022457
  1742459 = mul i32 %172.load2458, i32 47
  1752460 = add i32 %1682456, i32 %1742459
  20042461 = ptradd ptr %a, i32 88
  179.load2462 = load i32 from ptr %20042461
  1822463 = mul i32 %179.load2462, i32 -4
  1832464 = add i32 %1752460, i32 %1822463
  20062465 = ptradd ptr %a, i32 92
  187.load2466 = load i32 from ptr %20062465
  1892467 = mul i32 %187.load2466, i32 80
  1902468 = add i32 %1832464, i32 %1892467
  20082469 = ptradd ptr %a, i32 96
  194.load2470 = load i32 from ptr %20082469
  1962471 = mul i32 %194.load2470, i32 46
  1972472 = add i32 %1902468, i32 %1962471
  33084 = icmp sgt i32 %1972472, i32 127
  br i1 %33084, bb %relu_reg.then3086, bb %relu_reg.if.exit3088
while.exit1924.split:
  1946.ret = phi [bb %model.then1909, i32 1, bb %model.if.exit1910, i32 0]
  1947 = icmp ne i32 %1946.ret, i32 0
  br i1 %1947, bb %then1948, bb %else
while.cond1929:
  j.phi = phi [bb %while.body1923, i32 0, bb %while.body1930, i32 %1943]
  1933 = icmp slt i32 %j.phi, i32 5
  br i1 %1933, bb %while.body1930, bb %while.exit1931
while.body1930:
  1936 = mul i32 %i.phi, i32 20
  1937 = ptradd ptr %a, i32 %1936
  1967 = shl i32 %j.phi, i32 2
  1940 = ptradd ptr %1937, i32 %1967
  1941 = call i32 getint()
  store i32 %1941 to ptr %1940
  1943 = add i32 %j.phi, i32 1
  br bb %while.cond1929
while.exit1931:
  1945 = add i32 %i.phi, i32 1
  br bb %while.cond1922
then1948:
  call void putch(i32 99)
  call void putch(i32 97)
  call void putch(i32 116)
  call void putch(i32 10)
  br bb %if.exit1949
if.exit1949:
  1960 = sub i32 %N.phi, i32 1
  br bb %while.cond
else:
  call void putch(i32 100)
  call void putch(i32 111)
  call void putch(i32 103)
  call void putch(i32 10)
  br bb %if.exit1949
model.entry11.split:
  1982473.ret = phi [bb %relu_reg.then3086, i32 127, bb %relu_reg.then83091, i32 0, bb %relu_reg.if.exit93093, i32 %1972472]
  1992474 = mul i32 %1982473.ret, i32 39
  2062475 = mul i32 %15.load2375, i32 -106
  2122476 = mul i32 %21.load2378, i32 126
  2132477 = add i32 %2062475, i32 %2122476
  2202478 = mul i32 %28.load2382, i32 -18
  2212479 = add i32 %2132477, i32 %2202478
  2282480 = mul i32 %36.load2386, i32 -31
  2292481 = add i32 %2212479, i32 %2282480
  2362482 = mul i32 %44.load2390, i32 -8
  2372483 = add i32 %2292481, i32 %2362482
  2432484 = mul i32 %52.load2394, i32 47
  2442485 = add i32 %2372483, i32 %2432484
  2512486 = mul i32 %59.load2398, i32 -4
  2522487 = add i32 %2442485, i32 %2512486
  2582488 = mul i32 %67.load2402, i32 67
  2592489 = add i32 %2522487, i32 %2582488
  2662490 = mul i32 %74.load2406, i32 -94
  2672491 = add i32 %2592489, i32 %2662490
  2742492 = mul i32 %82.load2410, i32 -121
  2752493 = add i32 %2672491, i32 %2742492
  2812494 = mul i32 %89.load2414, i32 7
  2822495 = add i32 %2752493, i32 %2812494
  2892496 = mul i32 %97.load2418, i32 -21
  2902497 = add i32 %2822495, i32 %2892496
  2972498 = mul i32 %105.load2422, i32 -60
  2982499 = add i32 %2902497, i32 %2972498
  3052500 = mul i32 %113.load2426, i32 -43
  3062501 = add i32 %2982499, i32 %3052500
  3122502 = mul i32 %121.load2430, i32 105
  3132503 = add i32 %3062501, i32 %3122502
  3202504 = mul i32 %129.load2434, i32 -42
  3212505 = add i32 %3132503, i32 %3202504
  3272506 = mul i32 %136.load2438, i32 87
  3282507 = add i32 %3212505, i32 %3272506
  3342508 = mul i32 %144.load2442, i32 29
  3352509 = add i32 %3282507, i32 %3342508
  3422510 = mul i32 %151.load2446, i32 -106
  3432511 = add i32 %3352509, i32 %3422510
  3502512 = mul i32 %158.load2450, i32 -31
  3512513 = add i32 %3432511, i32 %3502512
  3582514 = mul i32 %165.load2454, i32 -110
  3592515 = add i32 %3512513, i32 %3582514
  3662516 = mul i32 %172.load2458, i32 -100
  3672517 = add i32 %3592515, i32 %3662516
  3742518 = mul i32 %179.load2462, i32 -22
  3752519 = add i32 %3672517, i32 %3742518
  3822520 = mul i32 %187.load2466, i32 -75
  3832521 = add i32 %3752519, i32 %3822520
  3902522 = mul i32 %194.load2470, i32 -125
  3912523 = add i32 %3832521, i32 %3902522
  33098 = icmp sgt i32 %3912523, i32 127
  br i1 %33098, bb %relu_reg.then3100, bb %relu_reg.if.exit3102
model.entry11.split.split:
  3922524.ret = phi [bb %relu_reg.then3100, i32 127, bb %relu_reg.then83105, i32 0, bb %relu_reg.if.exit93107, i32 %3912523]
  3932525 = mul i32 %3922524.ret, i32 77
  3942526 = add i32 %1992474, i32 %3932525
  4002527 = mul i32 %15.load2375, i32 26
  4062528 = mul i32 %21.load2378, i32 76
  4072529 = add i32 %4002527, i32 %4062528
  4142530 = mul i32 %28.load2382, i32 -70
  4152531 = add i32 %4072529, i32 %4142530
  4212532 = mul i32 %36.load2386, i32 29
  4222533 = add i32 %4152531, i32 %4212532
  4292534 = mul i32 %44.load2390, i32 -95
  4302535 = add i32 %4222533, i32 %4292534
  4362536 = mul i32 %52.load2394, i32 96
  4372537 = add i32 %4302535, i32 %4362536
  4432538 = mul i32 %59.load2398, i32 52
  4442539 = add i32 %4372537, i32 %4432538
  4512540 = mul i32 %67.load2402, i32 -68
  4522541 = add i32 %4442539, i32 %4512540
  4592542 = mul i32 %74.load2406, i32 -5
  4602543 = add i32 %4522541, i32 %4592542
  4662544 = mul i32 %82.load2410, i32 34
  4672545 = add i32 %4602543, i32 %4662544
  4742546 = mul i32 %89.load2414, i32 -34
  4752547 = add i32 %4672545, i32 %4742546
  4812548 = mul i32 %97.load2418, i32 102
  4822549 = add i32 %4752547, i32 %4812548
  4882550 = mul i32 %105.load2422, i32 6
  4892551 = add i32 %4822549, i32 %4882550
  4962552 = mul i32 %113.load2426, i32 -38
  4972553 = add i32 %4892551, i32 %4962552
  5032554 = mul i32 %121.load2430, i32 27
  5042555 = add i32 %4972553, i32 %5032554
  5102556 = mul i32 %129.load2434, i32 110
  5112557 = add i32 %5042555, i32 %5102556
  5172558 = mul i32 %136.load2438, i32 116
  5182559 = add i32 %5112557, i32 %5172558
  5242560 = mul i32 %144.load2442, i32 39
  5252561 = add i32 %5182559, i32 %5242560
  5322562 = mul i32 %151.load2446, i32 -63
  5332563 = add i32 %5252561, i32 %5322562
  5402564 = mul i32 %158.load2450, i32 -99
  5412565 = add i32 %5332563, i32 %5402564
  5472566 = mul i32 %165.load2454, i32 65
  5482567 = add i32 %5412565, i32 %5472566
  5542568 = mul i32 %172.load2458, i32 120
  5552569 = add i32 %5482567, i32 %5542568
  5622570 = mul i32 %179.load2462, i32 -39
  5632571 = add i32 %5552569, i32 %5622570
  5702572 = mul i32 %187.load2466, i32 -6
  5712573 = add i32 %5632571, i32 %5702572
  5772574 = mul i32 %194.load2470, i32 94
  5782575 = add i32 %5712573, i32 %5772574
  33112 = icmp sgt i32 %5782575, i32 127
  br i1 %33112, bb %relu_reg.then3114, bb %relu_reg.if.exit3116
model.entry11.split.split.split:
  5792576.ret = phi [bb %relu_reg.then3114, i32 127, bb %relu_reg.then83119, i32 0, bb %relu_reg.if.exit93121, i32 %5782575]
  5802577 = mul i32 %5792576.ret, i32 127
  5812578 = add i32 %3942526, i32 %5802577
  5882579 = mul i32 %15.load2375, i32 -23
  5952580 = mul i32 %21.load2378, i32 -63
  5962581 = add i32 %5882579, i32 %5952580
  6022582 = mul i32 %28.load2382, i32 49
  6032583 = add i32 %5962581, i32 %6022582
  6092584 = mul i32 %36.load2386, i32 50
  6102585 = add i32 %6032583, i32 %6092584
  6162586 = mul i32 %44.load2390, i32 72
  6172587 = add i32 %6102585, i32 %6162586
  6232588 = mul i32 %52.load2394, i32 85
  6242589 = add i32 %6172587, i32 %6232588
  6312590 = mul i32 %59.load2398, i32 -30
  6322591 = add i32 %6242589, i32 %6312590
  6382592 = mul i32 %67.load2402, i32 12
  6392593 = add i32 %6322591, i32 %6382592
  6452594 = mul i32 %74.load2406, i32 125
  6462595 = add i32 %6392593, i32 %6452594
  6532596 = mul i32 %82.load2410, i32 -117
  6542597 = add i32 %6462595, i32 %6532596
  6612598 = mul i32 %89.load2414, i32 -65
  6622599 = add i32 %6542597, i32 %6612598
  6702600 = add i32 %6622599, i32 %1002419
  6762601 = mul i32 %105.load2422, i32 125
  6772602 = add i32 %6702600, i32 %6762601
  6832603 = mul i32 %113.load2426, i32 110
  6842604 = add i32 %6772602, i32 %6832603
  6912605 = mul i32 %121.load2430, i32 -31
  6922606 = add i32 %6842604, i32 %6912605
  6992607 = mul i32 %129.load2434, i32 -123
  7002608 = add i32 %6922606, i32 %6992607
  7062609 = mul i32 %136.load2438, i32 83
  7072610 = add i32 %7002608, i32 %7062609
  7132611 = mul i32 %144.load2442, i32 122
  7142612 = add i32 %7072610, i32 %7132611
  7202613 = mul i32 %151.load2446, i32 11
  7212614 = add i32 %7142612, i32 %7202613
  7282615 = mul i32 %158.load2450, i32 -23
  7292616 = add i32 %7212614, i32 %7282615
  7362617 = mul i32 %165.load2454, i32 -47
  7372618 = add i32 %7292616, i32 %7362617
  7442619 = mul i32 %172.load2458, i32 -32
  7452620 = add i32 %7372618, i32 %7442619
  7522621 = mul i32 %179.load2462, i32 -117
  7532622 = add i32 %7452620, i32 %7522621
  7592623 = mul i32 %187.load2466, i32 95
  7602624 = add i32 %7532622, i32 %7592623
  7662625 = mul i32 %194.load2470, i32 118
  7672626 = add i32 %7602624, i32 %7662625
  33126 = icmp sgt i32 %7672626, i32 127
  br i1 %33126, bb %relu_reg.then3128, bb %relu_reg.if.exit3130
model.entry11.split.split.split.split:
  7682627.ret = phi [bb %relu_reg.then3128, i32 127, bb %relu_reg.then83133, i32 0, bb %relu_reg.if.exit93135, i32 %7672626]
  7702628 = mul i32 %7682627.ret, i32 -106
  7712629 = add i32 %5812578, i32 %7702628
  21292630 = shl i32 %15.load2375, i32 3
  7832631 = mul i32 %21.load2378, i32 82
  7842632 = add i32 %21292630, i32 %7832631
  7912633 = mul i32 %28.load2382, i32 -104
  7922634 = add i32 %7842632, i32 %7912633
  7982635 = mul i32 %36.load2386, i32 101
  7992636 = add i32 %7922634, i32 %7982635
  8062637 = mul i32 %44.load2390, i32 -116
  8072638 = add i32 %7992636, i32 %8062637
  8142639 = mul i32 %52.load2394, i32 -63
  8152640 = add i32 %8072638, i32 %8142639
  8222641 = mul i32 %59.load2398, i32 -16
  8232642 = add i32 %8152640, i32 %8222641
  8302643 = mul i32 %67.load2402, i32 -70
  8312644 = add i32 %8232642, i32 %8302643
  8382645 = add i32 %8312644, i32 %6452594
  8442646 = mul i32 %82.load2410, i32 75
  8452647 = add i32 %8382645, i32 %8442646
  8512648 = mul i32 %89.load2414, i32 66
  8522649 = add i32 %8452647, i32 %8512648
  8592650 = mul i32 %97.load2418, i32 -96
  8602651 = add i32 %8522649, i32 %8592650
  8672652 = mul i32 %105.load2422, i32 -101
  8682653 = add i32 %8602651, i32 %8672652
  8752654 = mul i32 %113.load2426, i32 -114
  8762655 = add i32 %8682653, i32 %8752654
  8822656 = mul i32 %121.load2430, i32 59
  8832657 = add i32 %8762655, i32 %8822656
  8892658 = mul i32 %129.load2434, i32 12
  8902659 = add i32 %8832657, i32 %8892658
  8962660 = mul i32 %136.load2438, i32 5
  8972661 = add i32 %8902659, i32 %8962660
  9042662 = mul i32 %144.load2442, i32 -95
  9052663 = add i32 %8972661, i32 %9042662
  9112664 = mul i32 %151.load2446, i32 116
  9122665 = add i32 %9052663, i32 %9112664
  9192666 = mul i32 %158.load2450, i32 -93
  9202667 = add i32 %9122665, i32 %9192666
  9262668 = mul i32 %165.load2454, i32 15
  9272669 = add i32 %9202667, i32 %9262668
  9332670 = mul i32 %172.load2458, i32 79
  9342671 = add i32 %9272669, i32 %9332670
  9402672 = mul i32 %179.load2462, i32 3
  9412673 = add i32 %9342671, i32 %9402672
  9472674 = mul i32 %187.load2466, i32 49
  9482675 = add i32 %9412673, i32 %9472674
  9552676 = mul i32 %194.load2470, i32 -124
  9562677 = add i32 %9482675, i32 %9552676
  33140 = icmp sgt i32 %9562677, i32 127
  br i1 %33140, bb %relu_reg.then3142, bb %relu_reg.if.exit3144
model.entry11.split.split.split.split.split:
  9572678.ret = phi [bb %relu_reg.then3142, i32 127, bb %relu_reg.then83147, i32 0, bb %relu_reg.if.exit93149, i32 %9562677]
  9592679 = mul i32 %9572678.ret, i32 -3
  9602680 = add i32 %7712629, i32 %9592679
  9662681 = mul i32 %15.load2375, i32 81
  9722682 = mul i32 %21.load2378, i32 68
  9732683 = add i32 %9662681, i32 %9722682
  9802684 = mul i32 %28.load2382, i32 -102
  9812685 = add i32 %9732683, i32 %9802684
  9882686 = mul i32 %36.load2386, i32 -74
  9892687 = add i32 %9812685, i32 %9882686
  9952688 = mul i32 %44.load2390, i32 121
  9962689 = add i32 %9892687, i32 %9952688
  10032690 = mul i32 %52.load2394, i32 -15
  10042691 = add i32 %9962689, i32 %10032690
  10102692 = mul i32 %59.load2398, i32 55
  10112693 = add i32 %10042691, i32 %10102692
  10172694 = mul i32 %67.load2402, i32 101
  10182695 = add i32 %10112693, i32 %10172694
  10252696 = mul i32 %74.load2406, i32 -13
  10262697 = add i32 %10182695, i32 %10252696
  10332698 = mul i32 %82.load2410, i32 -62
  10342699 = add i32 %10262697, i32 %10332698
  21822700 = shl i32 %89.load2414, i32 6
  10412701 = add i32 %10342699, i32 %21822700
  10472702 = mul i32 %97.load2418, i32 114
  10482703 = add i32 %10412701, i32 %10472702
  10542704 = mul i32 %105.load2422, i32 38
  10552705 = add i32 %10482703, i32 %10542704
  10622706 = mul i32 %113.load2426, i32 -21
  10632707 = add i32 %10552705, i32 %10622706
  10692708 = mul i32 %121.load2430, i32 112
  10702709 = add i32 %10632707, i32 %10692708
  10762710 = mul i32 %129.load2434, i32 114
  10772711 = add i32 %10702709, i32 %10762710
  10832712 = mul i32 %136.load2438, i32 112
  10842713 = add i32 %10772711, i32 %10832712
  10912714 = mul i32 %144.load2442, i32 -10
  10922715 = add i32 %10842713, i32 %10912714
  10992716 = mul i32 %151.load2446, i32 -16
  11002717 = add i32 %10922715, i32 %10992716
  11072718 = mul i32 %158.load2450, i32 -50
  11082719 = add i32 %11002717, i32 %11072718
  11152720 = mul i32 %165.load2454, i32 -112
  11162721 = add i32 %11082719, i32 %11152720
  11232722 = mul i32 %172.load2458, i32 -116
  11242723 = add i32 %11162721, i32 %11232722
  11312724 = mul i32 %179.load2462, i32 -54
  11322725 = add i32 %11242723, i32 %11312724
  11382726 = mul i32 %187.load2466, i32 82
  11392727 = add i32 %11322725, i32 %11382726
  11462728 = mul i32 %194.load2470, i32 -72
  11472729 = add i32 %11392727, i32 %11462728
  33154 = icmp sgt i32 %11472729, i32 127
  br i1 %33154, bb %relu_reg.then3156, bb %relu_reg.if.exit3158
model.entry11.split.split.split.split.split.split:
  11482730.ret = phi [bb %relu_reg.then3156, i32 127, bb %relu_reg.then83161, i32 0, bb %relu_reg.if.exit93163, i32 %11472729]
  22112731 = shl i32 %11482730.ret, i32 5
  11502732 = add i32 %9602680, i32 %22112731
  11562733 = mul i32 %15.load2375, i32 15
  11632734 = mul i32 %21.load2378, i32 -77
  11642735 = add i32 %11562733, i32 %11632734
  11702736 = mul i32 %28.load2382, i32 66
  11712737 = add i32 %11642735, i32 %11702736
  11782738 = mul i32 %36.load2386, i32 -90
  11792739 = add i32 %11712737, i32 %11782738
  11862740 = mul i32 %44.load2390, i32 -6
  11872741 = add i32 %11792739, i32 %11862740
  11942742 = mul i32 %52.load2394, i32 -30
  11952743 = add i32 %11872741, i32 %11942742
  12022744 = mul i32 %59.load2398, i32 -8
  12032745 = add i32 %11952743, i32 %12022744
  12092746 = mul i32 %67.load2402, i32 81
  12102747 = add i32 %12032745, i32 %12092746
  22202748 = shl i32 %74.load2406, i32 1
  12172749 = add i32 %12102747, i32 %22202748
  12242750 = mul i32 %82.load2410, i32 -110
  12252751 = add i32 %12172749, i32 %12242750
  12322752 = mul i32 %89.load2414, i32 -95
  12332753 = add i32 %12252751, i32 %12322752
  12392754 = mul i32 %97.load2418, i32 59
  12402755 = add i32 %12332753, i32 %12392754
  12462756 = mul i32 %105.load2422, i32 52
  12472757 = add i32 %12402755, i32 %12462756
  12532758 = mul i32 %113.load2426, i32 15
  12542759 = add i32 %12472757, i32 %12532758
  12602760 = mul i32 %121.load2430, i32 55
  12612761 = add i32 %12542759, i32 %12602760
  12682762 = mul i32 %129.load2434, i32 -33
  12692763 = add i32 %12612761, i32 %12682762
  12752764 = mul i32 %136.load2438, i32 14
  12762765 = add i32 %12692763, i32 %12752764
  12822766 = mul i32 %144.load2442, i32 58
  12832767 = add i32 %12762765, i32 %12822766
  12892768 = mul i32 %151.load2446, i32 67
  12902769 = add i32 %12832767, i32 %12892768
  12962770 = mul i32 %158.load2450, i32 86
  12972771 = add i32 %12902769, i32 %12962770
  13042772 = mul i32 %165.load2454, i32 -79
  13052773 = add i32 %12972771, i32 %13042772
  13112774 = mul i32 %172.load2458, i32 48
  13122775 = add i32 %13052773, i32 %13112774
  13192776 = mul i32 %179.load2462, i32 -13
  13202777 = add i32 %13122775, i32 %13192776
  13272778 = mul i32 %187.load2466, i32 -15
  13282779 = add i32 %13202777, i32 %13272778
  13342780 = mul i32 %194.load2470, i32 66
  13352781 = add i32 %13282779, i32 %13342780
  33168 = icmp sgt i32 %13352781, i32 127
  br i1 %33168, bb %relu_reg.then3170, bb %relu_reg.if.exit3172
model.entry11.split.split.split.split.split.split.split:
  13362782.ret = phi [bb %relu_reg.then3170, i32 127, bb %relu_reg.then83175, i32 0, bb %relu_reg.if.exit93177, i32 %13352781]
  13382783 = mul i32 %13362782.ret, i32 -95
  13392784 = add i32 %11502732, i32 %13382783
  13452785 = mul i32 %15.load2375, i32 33
  13522786 = add i32 %13452785, i32 %7832631
  13582787 = mul i32 %28.load2382, i32 67
  13592788 = add i32 %13522786, i32 %13582787
  13652789 = mul i32 %36.load2386, i32 30
  13662790 = add i32 %13592788, i32 %13652789
  13732791 = mul i32 %44.load2390, i32 -2
  13742792 = add i32 %13662790, i32 %13732791
  13802793 = mul i32 %52.load2394, i32 65
  13812794 = add i32 %13742792, i32 %13802793
  13872795 = mul i32 %59.load2398, i32 120
  13882796 = add i32 %13812794, i32 %13872795
  13952797 = mul i32 %67.load2402, i32 -13
  13962798 = add i32 %13882796, i32 %13952797
  14022799 = mul i32 %74.load2406, i32 18
  14032800 = add i32 %13962798, i32 %14022799
  14092801 = mul i32 %82.load2410, i32 5
  14102802 = add i32 %14032800, i32 %14092801
  14162803 = mul i32 %89.load2414, i32 104
  14172804 = add i32 %14102802, i32 %14162803
  14242805 = mul i32 %97.load2418, i32 -119
  14252806 = add i32 %14172804, i32 %14242805
  14322807 = mul i32 %105.load2422, i32 -7
  14332808 = add i32 %14252806, i32 %14322807
  14392809 = mul i32 %113.load2426, i32 71
  14402810 = add i32 %14332808, i32 %14392809
  14462811 = mul i32 %121.load2430, i32 107
  14472812 = add i32 %14402810, i32 %14462811
  14532813 = mul i32 %129.load2434, i32 24
  14542814 = add i32 %14472812, i32 %14532813
  14602815 = mul i32 %136.load2438, i32 82
  14612816 = add i32 %14542814, i32 %14602815
  14682817 = mul i32 %144.load2442, i32 -96
  14692818 = add i32 %14612816, i32 %14682817
  14762819 = mul i32 %151.load2446, i32 -104
  14772820 = add i32 %14692818, i32 %14762819
  14842821 = mul i32 %158.load2450, i32 -121
  14852822 = add i32 %14772820, i32 %14842821
  14922823 = add i32 %14852822, i32 %5472566
  14982824 = mul i32 %172.load2458, i32 97
  14992825 = add i32 %14922823, i32 %14982824
  15052826 = mul i32 %179.load2462, i32 83
  15062827 = add i32 %14992825, i32 %15052826
  15122828 = mul i32 %187.load2466, i32 46
  15132829 = add i32 %15062827, i32 %15122828
  15202830 = mul i32 %194.load2470, i32 -84
  15212831 = add i32 %15132829, i32 %15202830
  33182 = icmp sgt i32 %15212831, i32 127
  br i1 %33182, bb %relu_reg.then3184, bb %relu_reg.if.exit3186
model.entry11.split.split.split.split.split.split.split.split:
  15222832.ret = phi [bb %relu_reg.then3184, i32 127, bb %relu_reg.then83189, i32 0, bb %relu_reg.if.exit93191, i32 %15212831]
  15242833 = mul i32 %15222832.ret, i32 -50
  15252834 = add i32 %13392784, i32 %15242833
  15322835 = mul i32 %15.load2375, i32 -29
  15382836 = mul i32 %21.load2378, i32 7
  15392837 = add i32 %15322835, i32 %15382836
  15472838 = add i32 %15392837, i32 %4142530
  15532839 = mul i32 %36.load2386, i32 38
  15542840 = add i32 %15472838, i32 %15532839
  15612841 = mul i32 %44.load2390, i32 -90
  15622842 = add i32 %15542840, i32 %15612841
  15702843 = add i32 %15622842, i32 %10032690
  15772844 = mul i32 %59.load2398, i32 -32
  15782845 = add i32 %15702843, i32 %15772844
  15842846 = mul i32 %67.load2402, i32 37
  15852847 = add i32 %15782845, i32 %15842846
  15912848 = mul i32 %74.load2406, i32 36
  15922849 = add i32 %15852847, i32 %15912848
  16002850 = add i32 %15922849, i32 %10332698
  16072851 = mul i32 %89.load2414, i32 -125
  16082852 = add i32 %16002850, i32 %16072851
  16152853 = mul i32 %97.load2418, i32 -46
  16162854 = add i32 %16082852, i32 %16152853
  16232855 = mul i32 %105.load2422, i32 -70
  16242856 = add i32 %16162854, i32 %16232855
  16302857 = mul i32 %113.load2426, i32 37
  16312858 = add i32 %16242856, i32 %16302857
  16382859 = mul i32 %121.load2430, i32 -73
  16392860 = add i32 %16312858, i32 %16382859
  16462861 = mul i32 %129.load2434, i32 -34
  16472862 = add i32 %16392860, i32 %16462861
  16542863 = mul i32 %136.load2438, i32 -87
  16552864 = add i32 %16472862, i32 %16542863
  16622865 = mul i32 %144.load2442, i32 -75
  16632866 = add i32 %16552864, i32 %16622865
  16692867 = mul i32 %151.load2446, i32 71
  16702868 = add i32 %16632866, i32 %16692867
  16772869 = mul i32 %158.load2450, i32 -77
  16782870 = add i32 %16702868, i32 %16772869
  16842871 = mul i32 %165.load2454, i32 53
  16852872 = add i32 %16782870, i32 %16842871
  16912873 = mul i32 %172.load2458, i32 37
  16922874 = add i32 %16852872, i32 %16912873
  16992875 = mul i32 %179.load2462, i32 -103
  17002876 = add i32 %16922874, i32 %16992875
  17072877 = mul i32 %187.load2466, i32 -13
  17082878 = add i32 %17002876, i32 %17072877
  17152879 = mul i32 %194.load2470, i32 -114
  17162880 = add i32 %17082878, i32 %17152879
  33196 = icmp sgt i32 %17162880, i32 127
  br i1 %33196, bb %relu_reg.then3198, bb %relu_reg.if.exit3200
model.entry11.split.split.split.split.split.split.split.split.split:
  17172881.ret = phi [bb %relu_reg.then3198, i32 127, bb %relu_reg.then83203, i32 0, bb %relu_reg.if.exit93205, i32 %17162880]
  17192882 = mul i32 %17172881.ret, i32 -23
  17202883 = add i32 %15252834, i32 %17192882
  17262884 = mul i32 %15.load2375, i32 67
  17322885 = mul i32 %21.load2378, i32 42
  17332886 = add i32 %17262884, i32 %17322885
  17392887 = mul i32 %28.load2382, i32 41
  17402888 = add i32 %17332886, i32 %17392887
  17472889 = mul i32 %36.load2386, i32 -123
  17482890 = add i32 %17402888, i32 %17472889
  17552891 = mul i32 %44.load2390, i32 -92
  17562892 = add i32 %17482890, i32 %17552891
  17622893 = mul i32 %52.load2394, i32 10
  17632894 = add i32 %17562892, i32 %17622893
  17702895 = mul i32 %59.load2398, i32 -77
  17712896 = add i32 %17632894, i32 %17702895
  17772897 = mul i32 %67.load2402, i32 75
  17782898 = add i32 %17712896, i32 %17772897
  17842899 = mul i32 %74.load2406, i32 96
  17852900 = add i32 %17782898, i32 %17842899
  17922901 = mul i32 %82.load2410, i32 -51
  17932902 = add i32 %17852900, i32 %17922901
  17992903 = mul i32 %89.load2414, i32 109
  18002904 = add i32 %17932902, i32 %17992903
  18072905 = mul i32 %97.load2418, i32 -74
  18082906 = add i32 %18002904, i32 %18072905
  18162907 = add i32 %18082906, i32 %14322807
  18232908 = mul i32 %113.load2426, i32 -122
  18242909 = add i32 %18162907, i32 %18232908
  18302910 = mul i32 %121.load2430, i32 67
  18312911 = add i32 %18242909, i32 %18302910
  18372912 = mul i32 %129.load2434, i32 47
  18382913 = add i32 %18312911, i32 %18372912
  18442914 = mul i32 %136.load2438, i32 22
  18452915 = add i32 %18382913, i32 %18442914
  18522916 = mul i32 %144.load2442, i32 -68
  18532917 = add i32 %18452915, i32 %18522916
  18592918 = mul i32 %151.load2446, i32 38
  18602919 = add i32 %18532917, i32 %18592918
  18662920 = mul i32 %158.load2450, i32 29
  18672921 = add i32 %18602919, i32 %18662920
  18732922 = mul i32 %165.load2454, i32 115
  18742923 = add i32 %18672921, i32 %18732922
  18812924 = mul i32 %172.load2458, i32 -121
  18822925 = add i32 %18742923, i32 %18812924
  18882926 = mul i32 %179.load2462, i32 36
  18892927 = add i32 %18822925, i32 %18882926
  18962928 = mul i32 %187.load2466, i32 -49
  18972929 = add i32 %18892927, i32 %18962928
  19032930 = mul i32 %194.load2470, i32 85
  19042931 = add i32 %18972929, i32 %19032930
  33210 = icmp sgt i32 %19042931, i32 127
  br i1 %33210, bb %relu_reg.then3212, bb %relu_reg.if.exit3214
model.entry11.split.split.split.split.split.split.split.split.split.split:
  19052932.ret = phi [bb %relu_reg.then3212, i32 127, bb %relu_reg.then83217, i32 0, bb %relu_reg.if.exit93219, i32 %19042931]
  19062933 = mul i32 %19052932.ret, i32 46
  19072934 = add i32 %17202883, i32 %19062933
  19082935 = icmp sgt i32 %19072934, i32 0
  br i1 %19082935, bb %model.then1909, bb %model.if.exit1910
model.then1909:
  br bb %while.exit1924.split
model.if.exit1910:
  br bb %while.exit1924.split
relu_reg.then3086:
  br bb %model.entry11.split
relu_reg.if.exit3088:
  73089 = icmp slt i32 %1972472, i32 0
  br i1 %73089, bb %relu_reg.then83091, bb %relu_reg.if.exit93093
relu_reg.then83091:
  br bb %model.entry11.split
relu_reg.if.exit93093:
  br bb %model.entry11.split
relu_reg.then3100:
  br bb %model.entry11.split.split
relu_reg.if.exit3102:
  73103 = icmp slt i32 %3912523, i32 0
  br i1 %73103, bb %relu_reg.then83105, bb %relu_reg.if.exit93107
relu_reg.then83105:
  br bb %model.entry11.split.split
relu_reg.if.exit93107:
  br bb %model.entry11.split.split
relu_reg.then3114:
  br bb %model.entry11.split.split.split
relu_reg.if.exit3116:
  73117 = icmp slt i32 %5782575, i32 0
  br i1 %73117, bb %relu_reg.then83119, bb %relu_reg.if.exit93121
relu_reg.then83119:
  br bb %model.entry11.split.split.split
relu_reg.if.exit93121:
  br bb %model.entry11.split.split.split
relu_reg.then3128:
  br bb %model.entry11.split.split.split.split
relu_reg.if.exit3130:
  73131 = icmp slt i32 %7672626, i32 0
  br i1 %73131, bb %relu_reg.then83133, bb %relu_reg.if.exit93135
relu_reg.then83133:
  br bb %model.entry11.split.split.split.split
relu_reg.if.exit93135:
  br bb %model.entry11.split.split.split.split
relu_reg.then3142:
  br bb %model.entry11.split.split.split.split.split
relu_reg.if.exit3144:
  73145 = icmp slt i32 %9562677, i32 0
  br i1 %73145, bb %relu_reg.then83147, bb %relu_reg.if.exit93149
relu_reg.then83147:
  br bb %model.entry11.split.split.split.split.split
relu_reg.if.exit93149:
  br bb %model.entry11.split.split.split.split.split
relu_reg.then3156:
  br bb %model.entry11.split.split.split.split.split.split
relu_reg.if.exit3158:
  73159 = icmp slt i32 %11472729, i32 0
  br i1 %73159, bb %relu_reg.then83161, bb %relu_reg.if.exit93163
relu_reg.then83161:
  br bb %model.entry11.split.split.split.split.split.split
relu_reg.if.exit93163:
  br bb %model.entry11.split.split.split.split.split.split
relu_reg.then3170:
  br bb %model.entry11.split.split.split.split.split.split.split
relu_reg.if.exit3172:
  73173 = icmp slt i32 %13352781, i32 0
  br i1 %73173, bb %relu_reg.then83175, bb %relu_reg.if.exit93177
relu_reg.then83175:
  br bb %model.entry11.split.split.split.split.split.split.split
relu_reg.if.exit93177:
  br bb %model.entry11.split.split.split.split.split.split.split
relu_reg.then3184:
  br bb %model.entry11.split.split.split.split.split.split.split.split
relu_reg.if.exit3186:
  73187 = icmp slt i32 %15212831, i32 0
  br i1 %73187, bb %relu_reg.then83189, bb %relu_reg.if.exit93191
relu_reg.then83189:
  br bb %model.entry11.split.split.split.split.split.split.split.split
relu_reg.if.exit93191:
  br bb %model.entry11.split.split.split.split.split.split.split.split
relu_reg.then3198:
  br bb %model.entry11.split.split.split.split.split.split.split.split.split
relu_reg.if.exit3200:
  73201 = icmp slt i32 %17162880, i32 0
  br i1 %73201, bb %relu_reg.then83203, bb %relu_reg.if.exit93205
relu_reg.then83203:
  br bb %model.entry11.split.split.split.split.split.split.split.split.split
relu_reg.if.exit93205:
  br bb %model.entry11.split.split.split.split.split.split.split.split.split
relu_reg.then3212:
  br bb %model.entry11.split.split.split.split.split.split.split.split.split.split
relu_reg.if.exit3214:
  73215 = icmp slt i32 %19042931, i32 0
  br i1 %73215, bb %relu_reg.then83217, bb %relu_reg.if.exit93219
relu_reg.then83217:
  br bb %model.entry11.split.split.split.split.split.split.split.split.split.split
relu_reg.if.exit93219:
  br bb %model.entry11.split.split.split.split.split.split.split.split.split.split
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

i32 model(ptr a) {
entry11:
  15.load = load i32 from ptr %a
  17 = mul i32 %15.load, i32 85
  21 = ptradd ptr %a, i32 4
  21.load = load i32 from ptr %21
  23 = mul i32 %21.load, i32 23
  24 = add i32 %17, i32 %23
  28 = ptradd ptr %a, i32 8
  28.load = load i32 from ptr %28
  31 = mul i32 %28.load, i32 -82
  32 = add i32 %24, i32 %31
  36 = ptradd ptr %a, i32 12
  36.load = load i32 from ptr %36
  39 = mul i32 %36.load, i32 -103
  40 = add i32 %32, i32 %39
  44 = ptradd ptr %a, i32 16
  44.load = load i32 from ptr %44
  47 = mul i32 %44.load, i32 -123
  48 = add i32 %40, i32 %47
  1969 = ptradd ptr %a, i32 20
  52.load = load i32 from ptr %1969
  1970 = shl i32 %52.load, i32 6
  55 = add i32 %48, i32 %1970
  1972 = ptradd ptr %a, i32 24
  59.load = load i32 from ptr %1972
  62 = mul i32 %59.load, i32 -120
  63 = add i32 %55, i32 %62
  1974 = ptradd ptr %a, i32 28
  67.load = load i32 from ptr %1974
  69 = mul i32 %67.load, i32 50
  70 = add i32 %63, i32 %69
  1976 = ptradd ptr %a, i32 32
  74.load = load i32 from ptr %1976
  77 = mul i32 %74.load, i32 -59
  78 = add i32 %70, i32 %77
  1978 = ptradd ptr %a, i32 36
  82.load = load i32 from ptr %1978
  84 = mul i32 %82.load, i32 47
  85 = add i32 %78, i32 %84
  1980 = ptradd ptr %a, i32 40
  89.load = load i32 from ptr %1980
  92 = mul i32 %89.load, i32 -111
  93 = add i32 %85, i32 %92
  1982 = ptradd ptr %a, i32 44
  97.load = load i32 from ptr %1982
  100 = mul i32 %97.load, i32 -67
  101 = add i32 %93, i32 %100
  1984 = ptradd ptr %a, i32 48
  105.load = load i32 from ptr %1984
  108 = mul i32 %105.load, i32 -106
  109 = add i32 %101, i32 %108
  1986 = ptradd ptr %a, i32 52
  113.load = load i32 from ptr %1986
  116 = mul i32 %113.load, i32 -75
  117 = add i32 %109, i32 %116
  1988 = ptradd ptr %a, i32 56
  121.load = load i32 from ptr %1988
  124 = mul i32 %121.load, i32 -102
  125 = add i32 %117, i32 %124
  1990 = ptradd ptr %a, i32 60
  129.load = load i32 from ptr %1990
  131 = mul i32 %129.load, i32 34
  132 = add i32 %125, i32 %131
  1992 = ptradd ptr %a, i32 64
  136.load = load i32 from ptr %1992
  139 = mul i32 %136.load, i32 -39
  140 = add i32 %132, i32 %139
  1994 = ptradd ptr %a, i32 68
  144.load = load i32 from ptr %1994
  146 = mul i32 %144.load, i32 65
  147 = add i32 %140, i32 %146
  1996 = ptradd ptr %a, i32 72
  151.load = load i32 from ptr %1996
  153 = mul i32 %151.load, i32 47
  154 = add i32 %147, i32 %153
  1998 = ptradd ptr %a, i32 76
  158.load = load i32 from ptr %1998
  160 = mul i32 %158.load, i32 113
  161 = add i32 %154, i32 %160
  2000 = ptradd ptr %a, i32 80
  165.load = load i32 from ptr %2000
  167 = mul i32 %165.load, i32 110
  168 = add i32 %161, i32 %167
  2002 = ptradd ptr %a, i32 84
  172.load = load i32 from ptr %2002
  174 = mul i32 %172.load, i32 47
  175 = add i32 %168, i32 %174
  2004 = ptradd ptr %a, i32 88
  179.load = load i32 from ptr %2004
  182 = mul i32 %179.load, i32 -4
  183 = add i32 %175, i32 %182
  2006 = ptradd ptr %a, i32 92
  187.load = load i32 from ptr %2006
  189 = mul i32 %187.load, i32 80
  190 = add i32 %183, i32 %189
  2008 = ptradd ptr %a, i32 96
  194.load = load i32 from ptr %2008
  196 = mul i32 %194.load, i32 46
  197 = add i32 %190, i32 %196
  32944 = icmp sgt i32 %197, i32 127
  br i1 %32944, bb %relu_reg.then, bb %relu_reg.if.exit
entry11.split:
  198.ret = phi [bb %relu_reg.then, i32 127, bb %relu_reg.then8, i32 0, bb %relu_reg.if.exit9, i32 %197]
  199 = mul i32 %198.ret, i32 39
  206 = mul i32 %15.load, i32 -106
  212 = mul i32 %21.load, i32 126
  213 = add i32 %206, i32 %212
  220 = mul i32 %28.load, i32 -18
  221 = add i32 %213, i32 %220
  228 = mul i32 %36.load, i32 -31
  229 = add i32 %221, i32 %228
  236 = mul i32 %44.load, i32 -8
  237 = add i32 %229, i32 %236
  243 = mul i32 %52.load, i32 47
  244 = add i32 %237, i32 %243
  251 = mul i32 %59.load, i32 -4
  252 = add i32 %244, i32 %251
  258 = mul i32 %67.load, i32 67
  259 = add i32 %252, i32 %258
  266 = mul i32 %74.load, i32 -94
  267 = add i32 %259, i32 %266
  274 = mul i32 %82.load, i32 -121
  275 = add i32 %267, i32 %274
  281 = mul i32 %89.load, i32 7
  282 = add i32 %275, i32 %281
  289 = mul i32 %97.load, i32 -21
  290 = add i32 %282, i32 %289
  297 = mul i32 %105.load, i32 -60
  298 = add i32 %290, i32 %297
  305 = mul i32 %113.load, i32 -43
  306 = add i32 %298, i32 %305
  312 = mul i32 %121.load, i32 105
  313 = add i32 %306, i32 %312
  320 = mul i32 %129.load, i32 -42
  321 = add i32 %313, i32 %320
  327 = mul i32 %136.load, i32 87
  328 = add i32 %321, i32 %327
  334 = mul i32 %144.load, i32 29
  335 = add i32 %328, i32 %334
  342 = mul i32 %151.load, i32 -106
  343 = add i32 %335, i32 %342
  350 = mul i32 %158.load, i32 -31
  351 = add i32 %343, i32 %350
  358 = mul i32 %165.load, i32 -110
  359 = add i32 %351, i32 %358
  366 = mul i32 %172.load, i32 -100
  367 = add i32 %359, i32 %366
  374 = mul i32 %179.load, i32 -22
  375 = add i32 %367, i32 %374
  382 = mul i32 %187.load, i32 -75
  383 = add i32 %375, i32 %382
  390 = mul i32 %194.load, i32 -125
  391 = add i32 %383, i32 %390
  32958 = icmp sgt i32 %391, i32 127
  br i1 %32958, bb %relu_reg.then2960, bb %relu_reg.if.exit2962
entry11.split.split:
  392.ret = phi [bb %relu_reg.then2960, i32 127, bb %relu_reg.then82965, i32 0, bb %relu_reg.if.exit92967, i32 %391]
  393 = mul i32 %392.ret, i32 77
  394 = add i32 %199, i32 %393
  400 = mul i32 %15.load, i32 26
  406 = mul i32 %21.load, i32 76
  407 = add i32 %400, i32 %406
  414 = mul i32 %28.load, i32 -70
  415 = add i32 %407, i32 %414
  421 = mul i32 %36.load, i32 29
  422 = add i32 %415, i32 %421
  429 = mul i32 %44.load, i32 -95
  430 = add i32 %422, i32 %429
  436 = mul i32 %52.load, i32 96
  437 = add i32 %430, i32 %436
  443 = mul i32 %59.load, i32 52
  444 = add i32 %437, i32 %443
  451 = mul i32 %67.load, i32 -68
  452 = add i32 %444, i32 %451
  459 = mul i32 %74.load, i32 -5
  460 = add i32 %452, i32 %459
  466 = mul i32 %82.load, i32 34
  467 = add i32 %460, i32 %466
  474 = mul i32 %89.load, i32 -34
  475 = add i32 %467, i32 %474
  481 = mul i32 %97.load, i32 102
  482 = add i32 %475, i32 %481
  488 = mul i32 %105.load, i32 6
  489 = add i32 %482, i32 %488
  496 = mul i32 %113.load, i32 -38
  497 = add i32 %489, i32 %496
  503 = mul i32 %121.load, i32 27
  504 = add i32 %497, i32 %503
  510 = mul i32 %129.load, i32 110
  511 = add i32 %504, i32 %510
  517 = mul i32 %136.load, i32 116
  518 = add i32 %511, i32 %517
  524 = mul i32 %144.load, i32 39
  525 = add i32 %518, i32 %524
  532 = mul i32 %151.load, i32 -63
  533 = add i32 %525, i32 %532
  540 = mul i32 %158.load, i32 -99
  541 = add i32 %533, i32 %540
  547 = mul i32 %165.load, i32 65
  548 = add i32 %541, i32 %547
  554 = mul i32 %172.load, i32 120
  555 = add i32 %548, i32 %554
  562 = mul i32 %179.load, i32 -39
  563 = add i32 %555, i32 %562
  570 = mul i32 %187.load, i32 -6
  571 = add i32 %563, i32 %570
  577 = mul i32 %194.load, i32 94
  578 = add i32 %571, i32 %577
  32972 = icmp sgt i32 %578, i32 127
  br i1 %32972, bb %relu_reg.then2974, bb %relu_reg.if.exit2976
entry11.split.split.split:
  579.ret = phi [bb %relu_reg.then2974, i32 127, bb %relu_reg.then82979, i32 0, bb %relu_reg.if.exit92981, i32 %578]
  580 = mul i32 %579.ret, i32 127
  581 = add i32 %394, i32 %580
  588 = mul i32 %15.load, i32 -23
  595 = mul i32 %21.load, i32 -63
  596 = add i32 %588, i32 %595
  602 = mul i32 %28.load, i32 49
  603 = add i32 %596, i32 %602
  609 = mul i32 %36.load, i32 50
  610 = add i32 %603, i32 %609
  616 = mul i32 %44.load, i32 72
  617 = add i32 %610, i32 %616
  623 = mul i32 %52.load, i32 85
  624 = add i32 %617, i32 %623
  631 = mul i32 %59.load, i32 -30
  632 = add i32 %624, i32 %631
  638 = mul i32 %67.load, i32 12
  639 = add i32 %632, i32 %638
  645 = mul i32 %74.load, i32 125
  646 = add i32 %639, i32 %645
  653 = mul i32 %82.load, i32 -117
  654 = add i32 %646, i32 %653
  661 = mul i32 %89.load, i32 -65
  662 = add i32 %654, i32 %661
  670 = add i32 %662, i32 %100
  676 = mul i32 %105.load, i32 125
  677 = add i32 %670, i32 %676
  683 = mul i32 %113.load, i32 110
  684 = add i32 %677, i32 %683
  691 = mul i32 %121.load, i32 -31
  692 = add i32 %684, i32 %691
  699 = mul i32 %129.load, i32 -123
  700 = add i32 %692, i32 %699
  706 = mul i32 %136.load, i32 83
  707 = add i32 %700, i32 %706
  713 = mul i32 %144.load, i32 122
  714 = add i32 %707, i32 %713
  720 = mul i32 %151.load, i32 11
  721 = add i32 %714, i32 %720
  728 = mul i32 %158.load, i32 -23
  729 = add i32 %721, i32 %728
  736 = mul i32 %165.load, i32 -47
  737 = add i32 %729, i32 %736
  744 = mul i32 %172.load, i32 -32
  745 = add i32 %737, i32 %744
  752 = mul i32 %179.load, i32 -117
  753 = add i32 %745, i32 %752
  759 = mul i32 %187.load, i32 95
  760 = add i32 %753, i32 %759
  766 = mul i32 %194.load, i32 118
  767 = add i32 %760, i32 %766
  32986 = icmp sgt i32 %767, i32 127
  br i1 %32986, bb %relu_reg.then2988, bb %relu_reg.if.exit2990
entry11.split.split.split.split:
  768.ret = phi [bb %relu_reg.then2988, i32 127, bb %relu_reg.then82993, i32 0, bb %relu_reg.if.exit92995, i32 %767]
  770 = mul i32 %768.ret, i32 -106
  771 = add i32 %581, i32 %770
  2129 = shl i32 %15.load, i32 3
  783 = mul i32 %21.load, i32 82
  784 = add i32 %2129, i32 %783
  791 = mul i32 %28.load, i32 -104
  792 = add i32 %784, i32 %791
  798 = mul i32 %36.load, i32 101
  799 = add i32 %792, i32 %798
  806 = mul i32 %44.load, i32 -116
  807 = add i32 %799, i32 %806
  814 = mul i32 %52.load, i32 -63
  815 = add i32 %807, i32 %814
  822 = mul i32 %59.load, i32 -16
  823 = add i32 %815, i32 %822
  830 = mul i32 %67.load, i32 -70
  831 = add i32 %823, i32 %830
  838 = add i32 %831, i32 %645
  844 = mul i32 %82.load, i32 75
  845 = add i32 %838, i32 %844
  851 = mul i32 %89.load, i32 66
  852 = add i32 %845, i32 %851
  859 = mul i32 %97.load, i32 -96
  860 = add i32 %852, i32 %859
  867 = mul i32 %105.load, i32 -101
  868 = add i32 %860, i32 %867
  875 = mul i32 %113.load, i32 -114
  876 = add i32 %868, i32 %875
  882 = mul i32 %121.load, i32 59
  883 = add i32 %876, i32 %882
  889 = mul i32 %129.load, i32 12
  890 = add i32 %883, i32 %889
  896 = mul i32 %136.load, i32 5
  897 = add i32 %890, i32 %896
  904 = mul i32 %144.load, i32 -95
  905 = add i32 %897, i32 %904
  911 = mul i32 %151.load, i32 116
  912 = add i32 %905, i32 %911
  919 = mul i32 %158.load, i32 -93
  920 = add i32 %912, i32 %919
  926 = mul i32 %165.load, i32 15
  927 = add i32 %920, i32 %926
  933 = mul i32 %172.load, i32 79
  934 = add i32 %927, i32 %933
  940 = mul i32 %179.load, i32 3
  941 = add i32 %934, i32 %940
  947 = mul i32 %187.load, i32 49
  948 = add i32 %941, i32 %947
  955 = mul i32 %194.load, i32 -124
  956 = add i32 %948, i32 %955
  33000 = icmp sgt i32 %956, i32 127
  br i1 %33000, bb %relu_reg.then3002, bb %relu_reg.if.exit3004
entry11.split.split.split.split.split:
  957.ret = phi [bb %relu_reg.then3002, i32 127, bb %relu_reg.then83007, i32 0, bb %relu_reg.if.exit93009, i32 %956]
  959 = mul i32 %957.ret, i32 -3
  960 = add i32 %771, i32 %959
  966 = mul i32 %15.load, i32 81
  972 = mul i32 %21.load, i32 68
  973 = add i32 %966, i32 %972
  980 = mul i32 %28.load, i32 -102
  981 = add i32 %973, i32 %980
  988 = mul i32 %36.load, i32 -74
  989 = add i32 %981, i32 %988
  995 = mul i32 %44.load, i32 121
  996 = add i32 %989, i32 %995
  1003 = mul i32 %52.load, i32 -15
  1004 = add i32 %996, i32 %1003
  1010 = mul i32 %59.load, i32 55
  1011 = add i32 %1004, i32 %1010
  1017 = mul i32 %67.load, i32 101
  1018 = add i32 %1011, i32 %1017
  1025 = mul i32 %74.load, i32 -13
  1026 = add i32 %1018, i32 %1025
  1033 = mul i32 %82.load, i32 -62
  1034 = add i32 %1026, i32 %1033
  2182 = shl i32 %89.load, i32 6
  1041 = add i32 %1034, i32 %2182
  1047 = mul i32 %97.load, i32 114
  1048 = add i32 %1041, i32 %1047
  1054 = mul i32 %105.load, i32 38
  1055 = add i32 %1048, i32 %1054
  1062 = mul i32 %113.load, i32 -21
  1063 = add i32 %1055, i32 %1062
  1069 = mul i32 %121.load, i32 112
  1070 = add i32 %1063, i32 %1069
  1076 = mul i32 %129.load, i32 114
  1077 = add i32 %1070, i32 %1076
  1083 = mul i32 %136.load, i32 112
  1084 = add i32 %1077, i32 %1083
  1091 = mul i32 %144.load, i32 -10
  1092 = add i32 %1084, i32 %1091
  1099 = mul i32 %151.load, i32 -16
  1100 = add i32 %1092, i32 %1099
  1107 = mul i32 %158.load, i32 -50
  1108 = add i32 %1100, i32 %1107
  1115 = mul i32 %165.load, i32 -112
  1116 = add i32 %1108, i32 %1115
  1123 = mul i32 %172.load, i32 -116
  1124 = add i32 %1116, i32 %1123
  1131 = mul i32 %179.load, i32 -54
  1132 = add i32 %1124, i32 %1131
  1138 = mul i32 %187.load, i32 82
  1139 = add i32 %1132, i32 %1138
  1146 = mul i32 %194.load, i32 -72
  1147 = add i32 %1139, i32 %1146
  33014 = icmp sgt i32 %1147, i32 127
  br i1 %33014, bb %relu_reg.then3016, bb %relu_reg.if.exit3018
entry11.split.split.split.split.split.split:
  1148.ret = phi [bb %relu_reg.then3016, i32 127, bb %relu_reg.then83021, i32 0, bb %relu_reg.if.exit93023, i32 %1147]
  2211 = shl i32 %1148.ret, i32 5
  1150 = add i32 %960, i32 %2211
  1156 = mul i32 %15.load, i32 15
  1163 = mul i32 %21.load, i32 -77
  1164 = add i32 %1156, i32 %1163
  1170 = mul i32 %28.load, i32 66
  1171 = add i32 %1164, i32 %1170
  1178 = mul i32 %36.load, i32 -90
  1179 = add i32 %1171, i32 %1178
  1186 = mul i32 %44.load, i32 -6
  1187 = add i32 %1179, i32 %1186
  1194 = mul i32 %52.load, i32 -30
  1195 = add i32 %1187, i32 %1194
  1202 = mul i32 %59.load, i32 -8
  1203 = add i32 %1195, i32 %1202
  1209 = mul i32 %67.load, i32 81
  1210 = add i32 %1203, i32 %1209
  2220 = shl i32 %74.load, i32 1
  1217 = add i32 %1210, i32 %2220
  1224 = mul i32 %82.load, i32 -110
  1225 = add i32 %1217, i32 %1224
  1232 = mul i32 %89.load, i32 -95
  1233 = add i32 %1225, i32 %1232
  1239 = mul i32 %97.load, i32 59
  1240 = add i32 %1233, i32 %1239
  1246 = mul i32 %105.load, i32 52
  1247 = add i32 %1240, i32 %1246
  1253 = mul i32 %113.load, i32 15
  1254 = add i32 %1247, i32 %1253
  1260 = mul i32 %121.load, i32 55
  1261 = add i32 %1254, i32 %1260
  1268 = mul i32 %129.load, i32 -33
  1269 = add i32 %1261, i32 %1268
  1275 = mul i32 %136.load, i32 14
  1276 = add i32 %1269, i32 %1275
  1282 = mul i32 %144.load, i32 58
  1283 = add i32 %1276, i32 %1282
  1289 = mul i32 %151.load, i32 67
  1290 = add i32 %1283, i32 %1289
  1296 = mul i32 %158.load, i32 86
  1297 = add i32 %1290, i32 %1296
  1304 = mul i32 %165.load, i32 -79
  1305 = add i32 %1297, i32 %1304
  1311 = mul i32 %172.load, i32 48
  1312 = add i32 %1305, i32 %1311
  1319 = mul i32 %179.load, i32 -13
  1320 = add i32 %1312, i32 %1319
  1327 = mul i32 %187.load, i32 -15
  1328 = add i32 %1320, i32 %1327
  1334 = mul i32 %194.load, i32 66
  1335 = add i32 %1328, i32 %1334
  33028 = icmp sgt i32 %1335, i32 127
  br i1 %33028, bb %relu_reg.then3030, bb %relu_reg.if.exit3032
entry11.split.split.split.split.split.split.split:
  1336.ret = phi [bb %relu_reg.then3030, i32 127, bb %relu_reg.then83035, i32 0, bb %relu_reg.if.exit93037, i32 %1335]
  1338 = mul i32 %1336.ret, i32 -95
  1339 = add i32 %1150, i32 %1338
  1345 = mul i32 %15.load, i32 33
  1352 = add i32 %1345, i32 %783
  1358 = mul i32 %28.load, i32 67
  1359 = add i32 %1352, i32 %1358
  1365 = mul i32 %36.load, i32 30
  1366 = add i32 %1359, i32 %1365
  1373 = mul i32 %44.load, i32 -2
  1374 = add i32 %1366, i32 %1373
  1380 = mul i32 %52.load, i32 65
  1381 = add i32 %1374, i32 %1380
  1387 = mul i32 %59.load, i32 120
  1388 = add i32 %1381, i32 %1387
  1395 = mul i32 %67.load, i32 -13
  1396 = add i32 %1388, i32 %1395
  1402 = mul i32 %74.load, i32 18
  1403 = add i32 %1396, i32 %1402
  1409 = mul i32 %82.load, i32 5
  1410 = add i32 %1403, i32 %1409
  1416 = mul i32 %89.load, i32 104
  1417 = add i32 %1410, i32 %1416
  1424 = mul i32 %97.load, i32 -119
  1425 = add i32 %1417, i32 %1424
  1432 = mul i32 %105.load, i32 -7
  1433 = add i32 %1425, i32 %1432
  1439 = mul i32 %113.load, i32 71
  1440 = add i32 %1433, i32 %1439
  1446 = mul i32 %121.load, i32 107
  1447 = add i32 %1440, i32 %1446
  1453 = mul i32 %129.load, i32 24
  1454 = add i32 %1447, i32 %1453
  1460 = mul i32 %136.load, i32 82
  1461 = add i32 %1454, i32 %1460
  1468 = mul i32 %144.load, i32 -96
  1469 = add i32 %1461, i32 %1468
  1476 = mul i32 %151.load, i32 -104
  1477 = add i32 %1469, i32 %1476
  1484 = mul i32 %158.load, i32 -121
  1485 = add i32 %1477, i32 %1484
  1492 = add i32 %1485, i32 %547
  1498 = mul i32 %172.load, i32 97
  1499 = add i32 %1492, i32 %1498
  1505 = mul i32 %179.load, i32 83
  1506 = add i32 %1499, i32 %1505
  1512 = mul i32 %187.load, i32 46
  1513 = add i32 %1506, i32 %1512
  1520 = mul i32 %194.load, i32 -84
  1521 = add i32 %1513, i32 %1520
  33042 = icmp sgt i32 %1521, i32 127
  br i1 %33042, bb %relu_reg.then3044, bb %relu_reg.if.exit3046
entry11.split.split.split.split.split.split.split.split:
  1522.ret = phi [bb %relu_reg.then3044, i32 127, bb %relu_reg.then83049, i32 0, bb %relu_reg.if.exit93051, i32 %1521]
  1524 = mul i32 %1522.ret, i32 -50
  1525 = add i32 %1339, i32 %1524
  1532 = mul i32 %15.load, i32 -29
  1538 = mul i32 %21.load, i32 7
  1539 = add i32 %1532, i32 %1538
  1547 = add i32 %1539, i32 %414
  1553 = mul i32 %36.load, i32 38
  1554 = add i32 %1547, i32 %1553
  1561 = mul i32 %44.load, i32 -90
  1562 = add i32 %1554, i32 %1561
  1570 = add i32 %1562, i32 %1003
  1577 = mul i32 %59.load, i32 -32
  1578 = add i32 %1570, i32 %1577
  1584 = mul i32 %67.load, i32 37
  1585 = add i32 %1578, i32 %1584
  1591 = mul i32 %74.load, i32 36
  1592 = add i32 %1585, i32 %1591
  1600 = add i32 %1592, i32 %1033
  1607 = mul i32 %89.load, i32 -125
  1608 = add i32 %1600, i32 %1607
  1615 = mul i32 %97.load, i32 -46
  1616 = add i32 %1608, i32 %1615
  1623 = mul i32 %105.load, i32 -70
  1624 = add i32 %1616, i32 %1623
  1630 = mul i32 %113.load, i32 37
  1631 = add i32 %1624, i32 %1630
  1638 = mul i32 %121.load, i32 -73
  1639 = add i32 %1631, i32 %1638
  1646 = mul i32 %129.load, i32 -34
  1647 = add i32 %1639, i32 %1646
  1654 = mul i32 %136.load, i32 -87
  1655 = add i32 %1647, i32 %1654
  1662 = mul i32 %144.load, i32 -75
  1663 = add i32 %1655, i32 %1662
  1669 = mul i32 %151.load, i32 71
  1670 = add i32 %1663, i32 %1669
  1677 = mul i32 %158.load, i32 -77
  1678 = add i32 %1670, i32 %1677
  1684 = mul i32 %165.load, i32 53
  1685 = add i32 %1678, i32 %1684
  1691 = mul i32 %172.load, i32 37
  1692 = add i32 %1685, i32 %1691
  1699 = mul i32 %179.load, i32 -103
  1700 = add i32 %1692, i32 %1699
  1707 = mul i32 %187.load, i32 -13
  1708 = add i32 %1700, i32 %1707
  1715 = mul i32 %194.load, i32 -114
  1716 = add i32 %1708, i32 %1715
  33056 = icmp sgt i32 %1716, i32 127
  br i1 %33056, bb %relu_reg.then3058, bb %relu_reg.if.exit3060
entry11.split.split.split.split.split.split.split.split.split:
  1717.ret = phi [bb %relu_reg.then3058, i32 127, bb %relu_reg.then83063, i32 0, bb %relu_reg.if.exit93065, i32 %1716]
  1719 = mul i32 %1717.ret, i32 -23
  1720 = add i32 %1525, i32 %1719
  1726 = mul i32 %15.load, i32 67
  1732 = mul i32 %21.load, i32 42
  1733 = add i32 %1726, i32 %1732
  1739 = mul i32 %28.load, i32 41
  1740 = add i32 %1733, i32 %1739
  1747 = mul i32 %36.load, i32 -123
  1748 = add i32 %1740, i32 %1747
  1755 = mul i32 %44.load, i32 -92
  1756 = add i32 %1748, i32 %1755
  1762 = mul i32 %52.load, i32 10
  1763 = add i32 %1756, i32 %1762
  1770 = mul i32 %59.load, i32 -77
  1771 = add i32 %1763, i32 %1770
  1777 = mul i32 %67.load, i32 75
  1778 = add i32 %1771, i32 %1777
  1784 = mul i32 %74.load, i32 96
  1785 = add i32 %1778, i32 %1784
  1792 = mul i32 %82.load, i32 -51
  1793 = add i32 %1785, i32 %1792
  1799 = mul i32 %89.load, i32 109
  1800 = add i32 %1793, i32 %1799
  1807 = mul i32 %97.load, i32 -74
  1808 = add i32 %1800, i32 %1807
  1816 = add i32 %1808, i32 %1432
  1823 = mul i32 %113.load, i32 -122
  1824 = add i32 %1816, i32 %1823
  1830 = mul i32 %121.load, i32 67
  1831 = add i32 %1824, i32 %1830
  1837 = mul i32 %129.load, i32 47
  1838 = add i32 %1831, i32 %1837
  1844 = mul i32 %136.load, i32 22
  1845 = add i32 %1838, i32 %1844
  1852 = mul i32 %144.load, i32 -68
  1853 = add i32 %1845, i32 %1852
  1859 = mul i32 %151.load, i32 38
  1860 = add i32 %1853, i32 %1859
  1866 = mul i32 %158.load, i32 29
  1867 = add i32 %1860, i32 %1866
  1873 = mul i32 %165.load, i32 115
  1874 = add i32 %1867, i32 %1873
  1881 = mul i32 %172.load, i32 -121
  1882 = add i32 %1874, i32 %1881
  1888 = mul i32 %179.load, i32 36
  1889 = add i32 %1882, i32 %1888
  1896 = mul i32 %187.load, i32 -49
  1897 = add i32 %1889, i32 %1896
  1903 = mul i32 %194.load, i32 85
  1904 = add i32 %1897, i32 %1903
  33070 = icmp sgt i32 %1904, i32 127
  br i1 %33070, bb %relu_reg.then3072, bb %relu_reg.if.exit3074
entry11.split.split.split.split.split.split.split.split.split.split:
  1905.ret = phi [bb %relu_reg.then3072, i32 127, bb %relu_reg.then83077, i32 0, bb %relu_reg.if.exit93079, i32 %1904]
  1906 = mul i32 %1905.ret, i32 46
  1907 = add i32 %1720, i32 %1906
  1908 = icmp sgt i32 %1907, i32 0
  br i1 %1908, bb %then1909, bb %if.exit1910
then1909:
  ret i32 1
if.exit1910:
  ret i32 0
relu_reg.then:
  br bb %entry11.split
relu_reg.if.exit:
  72949 = icmp slt i32 %197, i32 0
  br i1 %72949, bb %relu_reg.then8, bb %relu_reg.if.exit9
relu_reg.then8:
  br bb %entry11.split
relu_reg.if.exit9:
  br bb %entry11.split
relu_reg.then2960:
  br bb %entry11.split.split
relu_reg.if.exit2962:
  72963 = icmp slt i32 %391, i32 0
  br i1 %72963, bb %relu_reg.then82965, bb %relu_reg.if.exit92967
relu_reg.then82965:
  br bb %entry11.split.split
relu_reg.if.exit92967:
  br bb %entry11.split.split
relu_reg.then2974:
  br bb %entry11.split.split.split
relu_reg.if.exit2976:
  72977 = icmp slt i32 %578, i32 0
  br i1 %72977, bb %relu_reg.then82979, bb %relu_reg.if.exit92981
relu_reg.then82979:
  br bb %entry11.split.split.split
relu_reg.if.exit92981:
  br bb %entry11.split.split.split
relu_reg.then2988:
  br bb %entry11.split.split.split.split
relu_reg.if.exit2990:
  72991 = icmp slt i32 %767, i32 0
  br i1 %72991, bb %relu_reg.then82993, bb %relu_reg.if.exit92995
relu_reg.then82993:
  br bb %entry11.split.split.split.split
relu_reg.if.exit92995:
  br bb %entry11.split.split.split.split
relu_reg.then3002:
  br bb %entry11.split.split.split.split.split
relu_reg.if.exit3004:
  73005 = icmp slt i32 %956, i32 0
  br i1 %73005, bb %relu_reg.then83007, bb %relu_reg.if.exit93009
relu_reg.then83007:
  br bb %entry11.split.split.split.split.split
relu_reg.if.exit93009:
  br bb %entry11.split.split.split.split.split
relu_reg.then3016:
  br bb %entry11.split.split.split.split.split.split
relu_reg.if.exit3018:
  73019 = icmp slt i32 %1147, i32 0
  br i1 %73019, bb %relu_reg.then83021, bb %relu_reg.if.exit93023
relu_reg.then83021:
  br bb %entry11.split.split.split.split.split.split
relu_reg.if.exit93023:
  br bb %entry11.split.split.split.split.split.split
relu_reg.then3030:
  br bb %entry11.split.split.split.split.split.split.split
relu_reg.if.exit3032:
  73033 = icmp slt i32 %1335, i32 0
  br i1 %73033, bb %relu_reg.then83035, bb %relu_reg.if.exit93037
relu_reg.then83035:
  br bb %entry11.split.split.split.split.split.split.split
relu_reg.if.exit93037:
  br bb %entry11.split.split.split.split.split.split.split
relu_reg.then3044:
  br bb %entry11.split.split.split.split.split.split.split.split
relu_reg.if.exit3046:
  73047 = icmp slt i32 %1521, i32 0
  br i1 %73047, bb %relu_reg.then83049, bb %relu_reg.if.exit93051
relu_reg.then83049:
  br bb %entry11.split.split.split.split.split.split.split.split
relu_reg.if.exit93051:
  br bb %entry11.split.split.split.split.split.split.split.split
relu_reg.then3058:
  br bb %entry11.split.split.split.split.split.split.split.split.split
relu_reg.if.exit3060:
  73061 = icmp slt i32 %1716, i32 0
  br i1 %73061, bb %relu_reg.then83063, bb %relu_reg.if.exit93065
relu_reg.then83063:
  br bb %entry11.split.split.split.split.split.split.split.split.split
relu_reg.if.exit93065:
  br bb %entry11.split.split.split.split.split.split.split.split.split
relu_reg.then3072:
  br bb %entry11.split.split.split.split.split.split.split.split.split.split
relu_reg.if.exit3074:
  73075 = icmp slt i32 %1904, i32 0
  br i1 %73075, bb %relu_reg.then83077, bb %relu_reg.if.exit93079
relu_reg.then83077:
  br bb %entry11.split.split.split.split.split.split.split.split.split.split
relu_reg.if.exit93079:
  br bb %entry11.split.split.split.split.split.split.split.split.split.split
}

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

pure i32 relu_reg(i32 a) {
entry:
  3 = icmp sgt i32 %a, i32 127
  br i1 %3, bb %then, bb %if.exit
then:
  ret i32 127
if.exit:
  7 = icmp slt i32 %a, i32 0
  br i1 %7, bb %then8, bb %if.exit9
then8:
  ret i32 0
if.exit9:
  ret i32 %a
}


