external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry1911:
  %a = stack 100
  1913 = call i32 getint()
  br bb %while.cond
while.cond:
  j.phi1966 = phi [bb %entry1911, i32 ub, bb %if.exit1949, i32 %j.phi1965]
  N.phi = phi [bb %entry1911, i32 %1913, bb %if.exit1949, i32 %1960]
  1919 = icmp sgt i32 %N.phi, i32 0
  br i1 %1919, bb %while.body, bb %while.exit
while.body:
  br bb %while.cond1922
while.exit:
  ret i32 0
while.cond1922:
  j.phi1965 = phi [bb %while.body, i32 %j.phi1966, bb %while.exit1931, i32 %j.phi]
  i.phi = phi [bb %while.body, i32 0, bb %while.exit1931, i32 %1945]
  1926 = icmp slt i32 %i.phi, i32 5
  br i1 %1926, bb %while.body1923, bb %while.exit1924
while.body1923:
  br bb %while.cond1929
while.exit1924:
  15.load2369 = load i32 from ptr %a
  172370 = mul i32 %15.load2369, i32 85
  212371 = ptradd ptr %a, i32 4
  21.load2372 = load i32 from ptr %212371
  232373 = mul i32 %21.load2372, i32 23
  242374 = add i32 %172370, i32 %232373
  282375 = ptradd ptr %a, i32 8
  28.load2376 = load i32 from ptr %282375
  312377 = mul i32 %28.load2376, i32 -82
  322378 = add i32 %242374, i32 %312377
  362379 = ptradd ptr %a, i32 12
  36.load2380 = load i32 from ptr %362379
  392381 = mul i32 %36.load2380, i32 -103
  402382 = add i32 %322378, i32 %392381
  442383 = ptradd ptr %a, i32 16
  44.load2384 = load i32 from ptr %442383
  472385 = mul i32 %44.load2384, i32 -123
  482386 = add i32 %402382, i32 %472385
  19682387 = ptradd ptr %a, i32 20
  52.load2388 = load i32 from ptr %19682387
  542389 = mul i32 %52.load2388, i32 64
  552390 = add i32 %482386, i32 %542389
  19702391 = ptradd ptr %a, i32 24
  59.load2392 = load i32 from ptr %19702391
  622393 = mul i32 %59.load2392, i32 -120
  632394 = add i32 %552390, i32 %622393
  19722395 = ptradd ptr %a, i32 28
  67.load2396 = load i32 from ptr %19722395
  692397 = mul i32 %67.load2396, i32 50
  702398 = add i32 %632394, i32 %692397
  19742399 = ptradd ptr %a, i32 32
  74.load2400 = load i32 from ptr %19742399
  772401 = mul i32 %74.load2400, i32 -59
  782402 = add i32 %702398, i32 %772401
  19762403 = ptradd ptr %a, i32 36
  82.load2404 = load i32 from ptr %19762403
  842405 = mul i32 %82.load2404, i32 47
  852406 = add i32 %782402, i32 %842405
  19782407 = ptradd ptr %a, i32 40
  89.load2408 = load i32 from ptr %19782407
  922409 = mul i32 %89.load2408, i32 -111
  932410 = add i32 %852406, i32 %922409
  19802411 = ptradd ptr %a, i32 44
  97.load2412 = load i32 from ptr %19802411
  1002413 = mul i32 %97.load2412, i32 -67
  1012414 = add i32 %932410, i32 %1002413
  19822415 = ptradd ptr %a, i32 48
  105.load2416 = load i32 from ptr %19822415
  1082417 = mul i32 %105.load2416, i32 -106
  1092418 = add i32 %1012414, i32 %1082417
  19842419 = ptradd ptr %a, i32 52
  113.load2420 = load i32 from ptr %19842419
  1162421 = mul i32 %113.load2420, i32 -75
  1172422 = add i32 %1092418, i32 %1162421
  19862423 = ptradd ptr %a, i32 56
  121.load2424 = load i32 from ptr %19862423
  1242425 = mul i32 %121.load2424, i32 -102
  1252426 = add i32 %1172422, i32 %1242425
  19882427 = ptradd ptr %a, i32 60
  129.load2428 = load i32 from ptr %19882427
  1312429 = mul i32 %129.load2428, i32 34
  1322430 = add i32 %1252426, i32 %1312429
  19902431 = ptradd ptr %a, i32 64
  136.load2432 = load i32 from ptr %19902431
  1392433 = mul i32 %136.load2432, i32 -39
  1402434 = add i32 %1322430, i32 %1392433
  19922435 = ptradd ptr %a, i32 68
  144.load2436 = load i32 from ptr %19922435
  1462437 = mul i32 %144.load2436, i32 65
  1472438 = add i32 %1402434, i32 %1462437
  19942439 = ptradd ptr %a, i32 72
  151.load2440 = load i32 from ptr %19942439
  1532441 = mul i32 %151.load2440, i32 47
  1542442 = add i32 %1472438, i32 %1532441
  19962443 = ptradd ptr %a, i32 76
  158.load2444 = load i32 from ptr %19962443
  1602445 = mul i32 %158.load2444, i32 113
  1612446 = add i32 %1542442, i32 %1602445
  19982447 = ptradd ptr %a, i32 80
  165.load2448 = load i32 from ptr %19982447
  1672449 = mul i32 %165.load2448, i32 110
  1682450 = add i32 %1612446, i32 %1672449
  20002451 = ptradd ptr %a, i32 84
  172.load2452 = load i32 from ptr %20002451
  1742453 = mul i32 %172.load2452, i32 47
  1752454 = add i32 %1682450, i32 %1742453
  20022455 = ptradd ptr %a, i32 88
  179.load2456 = load i32 from ptr %20022455
  1822457 = mul i32 %179.load2456, i32 -4
  1832458 = add i32 %1752454, i32 %1822457
  20042459 = ptradd ptr %a, i32 92
  187.load2460 = load i32 from ptr %20042459
  1892461 = mul i32 %187.load2460, i32 80
  1902462 = add i32 %1832458, i32 %1892461
  20062463 = ptradd ptr %a, i32 96
  194.load2464 = load i32 from ptr %20062463
  1962465 = mul i32 %194.load2464, i32 46
  1972466 = add i32 %1902462, i32 %1962465
  33078 = icmp sgt i32 %1972466, i32 127
  br i1 %33078, bb %relu_reg.then3080, bb %relu_reg.if.exit3082
while.exit1924.split:
  1946.ret = phi [bb %model.then1909, i32 1, bb %model.if.exit1910, i32 0]
  1947 = icmp ne i32 %1946.ret, i32 0
  br i1 %1947, bb %then1948, bb %else
while.cond1929:
  j.phi = phi [bb %while.body1923, i32 0, bb %while.body1930, i32 %1943]
  1933 = icmp slt i32 %j.phi, i32 5
  br i1 %1933, bb %while.body1930, bb %while.exit1931
while.body1930:
  1936 = mul i32 %i.phi, i32 20
  1937 = ptradd ptr %a, i32 %1936
  1939 = mul i32 %j.phi, i32 4
  1940 = ptradd ptr %1937, i32 %1939
  1941 = call i32 getint()
  store i32 %1941 to ptr %1940
  1943 = add i32 %j.phi, i32 1
  br bb %while.cond1929
while.exit1931:
  1945 = add i32 %i.phi, i32 1
  br bb %while.cond1922
then1948:
  call void putch(i32 99)
  call void putch(i32 97)
  call void putch(i32 116)
  call void putch(i32 10)
  br bb %if.exit1949
if.exit1949:
  1960 = sub i32 %N.phi, i32 1
  br bb %while.cond
else:
  call void putch(i32 100)
  call void putch(i32 111)
  call void putch(i32 103)
  call void putch(i32 10)
  br bb %if.exit1949
model.entry11.split:
  1982467.ret = phi [bb %relu_reg.then3080, i32 127, bb %relu_reg.then83085, i32 0, bb %relu_reg.if.exit93087, i32 %1972466]
  1992468 = mul i32 %1982467.ret, i32 39
  2062469 = mul i32 %15.load2369, i32 -106
  2122470 = mul i32 %21.load2372, i32 126
  2132471 = add i32 %2062469, i32 %2122470
  2202472 = mul i32 %28.load2376, i32 -18
  2212473 = add i32 %2132471, i32 %2202472
  2282474 = mul i32 %36.load2380, i32 -31
  2292475 = add i32 %2212473, i32 %2282474
  2362476 = mul i32 %44.load2384, i32 -8
  2372477 = add i32 %2292475, i32 %2362476
  2432478 = mul i32 %52.load2388, i32 47
  2442479 = add i32 %2372477, i32 %2432478
  2512480 = mul i32 %59.load2392, i32 -4
  2522481 = add i32 %2442479, i32 %2512480
  2582482 = mul i32 %67.load2396, i32 67
  2592483 = add i32 %2522481, i32 %2582482
  2662484 = mul i32 %74.load2400, i32 -94
  2672485 = add i32 %2592483, i32 %2662484
  2742486 = mul i32 %82.load2404, i32 -121
  2752487 = add i32 %2672485, i32 %2742486
  2812488 = mul i32 %89.load2408, i32 7
  2822489 = add i32 %2752487, i32 %2812488
  2892490 = mul i32 %97.load2412, i32 -21
  2902491 = add i32 %2822489, i32 %2892490
  2972492 = mul i32 %105.load2416, i32 -60
  2982493 = add i32 %2902491, i32 %2972492
  3052494 = mul i32 %113.load2420, i32 -43
  3062495 = add i32 %2982493, i32 %3052494
  3122496 = mul i32 %121.load2424, i32 105
  3132497 = add i32 %3062495, i32 %3122496
  3202498 = mul i32 %129.load2428, i32 -42
  3212499 = add i32 %3132497, i32 %3202498
  3272500 = mul i32 %136.load2432, i32 87
  3282501 = add i32 %3212499, i32 %3272500
  3342502 = mul i32 %144.load2436, i32 29
  3352503 = add i32 %3282501, i32 %3342502
  3422504 = mul i32 %151.load2440, i32 -106
  3432505 = add i32 %3352503, i32 %3422504
  3502506 = mul i32 %158.load2444, i32 -31
  3512507 = add i32 %3432505, i32 %3502506
  3582508 = mul i32 %165.load2448, i32 -110
  3592509 = add i32 %3512507, i32 %3582508
  3662510 = mul i32 %172.load2452, i32 -100
  3672511 = add i32 %3592509, i32 %3662510
  3742512 = mul i32 %179.load2456, i32 -22
  3752513 = add i32 %3672511, i32 %3742512
  3822514 = mul i32 %187.load2460, i32 -75
  3832515 = add i32 %3752513, i32 %3822514
  3902516 = mul i32 %194.load2464, i32 -125
  3912517 = add i32 %3832515, i32 %3902516
  33092 = icmp sgt i32 %3912517, i32 127
  br i1 %33092, bb %relu_reg.then3094, bb %relu_reg.if.exit3096
model.entry11.split.split:
  3922518.ret = phi [bb %relu_reg.then3094, i32 127, bb %relu_reg.then83099, i32 0, bb %relu_reg.if.exit93101, i32 %3912517]
  3932519 = mul i32 %3922518.ret, i32 77
  3942520 = add i32 %1992468, i32 %3932519
  4002521 = mul i32 %15.load2369, i32 26
  4062522 = mul i32 %21.load2372, i32 76
  4072523 = add i32 %4002521, i32 %4062522
  4142524 = mul i32 %28.load2376, i32 -70
  4152525 = add i32 %4072523, i32 %4142524
  4212526 = mul i32 %36.load2380, i32 29
  4222527 = add i32 %4152525, i32 %4212526
  4292528 = mul i32 %44.load2384, i32 -95
  4302529 = add i32 %4222527, i32 %4292528
  4362530 = mul i32 %52.load2388, i32 96
  4372531 = add i32 %4302529, i32 %4362530
  4432532 = mul i32 %59.load2392, i32 52
  4442533 = add i32 %4372531, i32 %4432532
  4512534 = mul i32 %67.load2396, i32 -68
  4522535 = add i32 %4442533, i32 %4512534
  4592536 = mul i32 %74.load2400, i32 -5
  4602537 = add i32 %4522535, i32 %4592536
  4662538 = mul i32 %82.load2404, i32 34
  4672539 = add i32 %4602537, i32 %4662538
  4742540 = mul i32 %89.load2408, i32 -34
  4752541 = add i32 %4672539, i32 %4742540
  4812542 = mul i32 %97.load2412, i32 102
  4822543 = add i32 %4752541, i32 %4812542
  4882544 = mul i32 %105.load2416, i32 6
  4892545 = add i32 %4822543, i32 %4882544
  4962546 = mul i32 %113.load2420, i32 -38
  4972547 = add i32 %4892545, i32 %4962546
  5032548 = mul i32 %121.load2424, i32 27
  5042549 = add i32 %4972547, i32 %5032548
  5102550 = mul i32 %129.load2428, i32 110
  5112551 = add i32 %5042549, i32 %5102550
  5172552 = mul i32 %136.load2432, i32 116
  5182553 = add i32 %5112551, i32 %5172552
  5242554 = mul i32 %144.load2436, i32 39
  5252555 = add i32 %5182553, i32 %5242554
  5322556 = mul i32 %151.load2440, i32 -63
  5332557 = add i32 %5252555, i32 %5322556
  5402558 = mul i32 %158.load2444, i32 -99
  5412559 = add i32 %5332557, i32 %5402558
  5472560 = mul i32 %165.load2448, i32 65
  5482561 = add i32 %5412559, i32 %5472560
  5542562 = mul i32 %172.load2452, i32 120
  5552563 = add i32 %5482561, i32 %5542562
  5622564 = mul i32 %179.load2456, i32 -39
  5632565 = add i32 %5552563, i32 %5622564
  5702566 = mul i32 %187.load2460, i32 -6
  5712567 = add i32 %5632565, i32 %5702566
  5772568 = mul i32 %194.load2464, i32 94
  5782569 = add i32 %5712567, i32 %5772568
  33106 = icmp sgt i32 %5782569, i32 127
  br i1 %33106, bb %relu_reg.then3108, bb %relu_reg.if.exit3110
model.entry11.split.split.split:
  5792570.ret = phi [bb %relu_reg.then3108, i32 127, bb %relu_reg.then83113, i32 0, bb %relu_reg.if.exit93115, i32 %5782569]
  5802571 = mul i32 %5792570.ret, i32 127
  5812572 = add i32 %3942520, i32 %5802571
  5882573 = mul i32 %15.load2369, i32 -23
  5952574 = mul i32 %21.load2372, i32 -63
  5962575 = add i32 %5882573, i32 %5952574
  6022576 = mul i32 %28.load2376, i32 49
  6032577 = add i32 %5962575, i32 %6022576
  6092578 = mul i32 %36.load2380, i32 50
  6102579 = add i32 %6032577, i32 %6092578
  6162580 = mul i32 %44.load2384, i32 72
  6172581 = add i32 %6102579, i32 %6162580
  6232582 = mul i32 %52.load2388, i32 85
  6242583 = add i32 %6172581, i32 %6232582
  6312584 = mul i32 %59.load2392, i32 -30
  6322585 = add i32 %6242583, i32 %6312584
  6382586 = mul i32 %67.load2396, i32 12
  6392587 = add i32 %6322585, i32 %6382586
  6452588 = mul i32 %74.load2400, i32 125
  6462589 = add i32 %6392587, i32 %6452588
  6532590 = mul i32 %82.load2404, i32 -117
  6542591 = add i32 %6462589, i32 %6532590
  6612592 = mul i32 %89.load2408, i32 -65
  6622593 = add i32 %6542591, i32 %6612592
  6702594 = add i32 %6622593, i32 %1002413
  6762595 = mul i32 %105.load2416, i32 125
  6772596 = add i32 %6702594, i32 %6762595
  6832597 = mul i32 %113.load2420, i32 110
  6842598 = add i32 %6772596, i32 %6832597
  6912599 = mul i32 %121.load2424, i32 -31
  6922600 = add i32 %6842598, i32 %6912599
  6992601 = mul i32 %129.load2428, i32 -123
  7002602 = add i32 %6922600, i32 %6992601
  7062603 = mul i32 %136.load2432, i32 83
  7072604 = add i32 %7002602, i32 %7062603
  7132605 = mul i32 %144.load2436, i32 122
  7142606 = add i32 %7072604, i32 %7132605
  7202607 = mul i32 %151.load2440, i32 11
  7212608 = add i32 %7142606, i32 %7202607
  7282609 = mul i32 %158.load2444, i32 -23
  7292610 = add i32 %7212608, i32 %7282609
  7362611 = mul i32 %165.load2448, i32 -47
  7372612 = add i32 %7292610, i32 %7362611
  7442613 = mul i32 %172.load2452, i32 -32
  7452614 = add i32 %7372612, i32 %7442613
  7522615 = mul i32 %179.load2456, i32 -117
  7532616 = add i32 %7452614, i32 %7522615
  7592617 = mul i32 %187.load2460, i32 95
  7602618 = add i32 %7532616, i32 %7592617
  7662619 = mul i32 %194.load2464, i32 118
  7672620 = add i32 %7602618, i32 %7662619
  33120 = icmp sgt i32 %7672620, i32 127
  br i1 %33120, bb %relu_reg.then3122, bb %relu_reg.if.exit3124
model.entry11.split.split.split.split:
  7682621.ret = phi [bb %relu_reg.then3122, i32 127, bb %relu_reg.then83127, i32 0, bb %relu_reg.if.exit93129, i32 %7672620]
  7702622 = mul i32 %7682621.ret, i32 -106
  7712623 = add i32 %5812572, i32 %7702622
  7772624 = mul i32 %15.load2369, i32 8
  7832625 = mul i32 %21.load2372, i32 82
  7842626 = add i32 %7772624, i32 %7832625
  7912627 = mul i32 %28.load2376, i32 -104
  7922628 = add i32 %7842626, i32 %7912627
  7982629 = mul i32 %36.load2380, i32 101
  7992630 = add i32 %7922628, i32 %7982629
  8062631 = mul i32 %44.load2384, i32 -116
  8072632 = add i32 %7992630, i32 %8062631
  8142633 = mul i32 %52.load2388, i32 -63
  8152634 = add i32 %8072632, i32 %8142633
  8222635 = mul i32 %59.load2392, i32 -16
  8232636 = add i32 %8152634, i32 %8222635
  8302637 = mul i32 %67.load2396, i32 -70
  8312638 = add i32 %8232636, i32 %8302637
  8382639 = add i32 %8312638, i32 %6452588
  8442640 = mul i32 %82.load2404, i32 75
  8452641 = add i32 %8382639, i32 %8442640
  8512642 = mul i32 %89.load2408, i32 66
  8522643 = add i32 %8452641, i32 %8512642
  8592644 = mul i32 %97.load2412, i32 -96
  8602645 = add i32 %8522643, i32 %8592644
  8672646 = mul i32 %105.load2416, i32 -101
  8682647 = add i32 %8602645, i32 %8672646
  8752648 = mul i32 %113.load2420, i32 -114
  8762649 = add i32 %8682647, i32 %8752648
  8822650 = mul i32 %121.load2424, i32 59
  8832651 = add i32 %8762649, i32 %8822650
  8892652 = mul i32 %129.load2428, i32 12
  8902653 = add i32 %8832651, i32 %8892652
  8962654 = mul i32 %136.load2432, i32 5
  8972655 = add i32 %8902653, i32 %8962654
  9042656 = mul i32 %144.load2436, i32 -95
  9052657 = add i32 %8972655, i32 %9042656
  9112658 = mul i32 %151.load2440, i32 116
  9122659 = add i32 %9052657, i32 %9112658
  9192660 = mul i32 %158.load2444, i32 -93
  9202661 = add i32 %9122659, i32 %9192660
  9262662 = mul i32 %165.load2448, i32 15
  9272663 = add i32 %9202661, i32 %9262662
  9332664 = mul i32 %172.load2452, i32 79
  9342665 = add i32 %9272663, i32 %9332664
  9402666 = mul i32 %179.load2456, i32 3
  9412667 = add i32 %9342665, i32 %9402666
  9472668 = mul i32 %187.load2460, i32 49
  9482669 = add i32 %9412667, i32 %9472668
  9552670 = mul i32 %194.load2464, i32 -124
  9562671 = add i32 %9482669, i32 %9552670
  33134 = icmp sgt i32 %9562671, i32 127
  br i1 %33134, bb %relu_reg.then3136, bb %relu_reg.if.exit3138
model.entry11.split.split.split.split.split:
  9572672.ret = phi [bb %relu_reg.then3136, i32 127, bb %relu_reg.then83141, i32 0, bb %relu_reg.if.exit93143, i32 %9562671]
  9592673 = mul i32 %9572672.ret, i32 -3
  9602674 = add i32 %7712623, i32 %9592673
  9662675 = mul i32 %15.load2369, i32 81
  9722676 = mul i32 %21.load2372, i32 68
  9732677 = add i32 %9662675, i32 %9722676
  9802678 = mul i32 %28.load2376, i32 -102
  9812679 = add i32 %9732677, i32 %9802678
  9882680 = mul i32 %36.load2380, i32 -74
  9892681 = add i32 %9812679, i32 %9882680
  9952682 = mul i32 %44.load2384, i32 121
  9962683 = add i32 %9892681, i32 %9952682
  10032684 = mul i32 %52.load2388, i32 -15
  10042685 = add i32 %9962683, i32 %10032684
  10102686 = mul i32 %59.load2392, i32 55
  10112687 = add i32 %10042685, i32 %10102686
  10172688 = mul i32 %67.load2396, i32 101
  10182689 = add i32 %10112687, i32 %10172688
  10252690 = mul i32 %74.load2400, i32 -13
  10262691 = add i32 %10182689, i32 %10252690
  10332692 = mul i32 %82.load2404, i32 -62
  10342693 = add i32 %10262691, i32 %10332692
  10402694 = mul i32 %89.load2408, i32 64
  10412695 = add i32 %10342693, i32 %10402694
  10472696 = mul i32 %97.load2412, i32 114
  10482697 = add i32 %10412695, i32 %10472696
  10542698 = mul i32 %105.load2416, i32 38
  10552699 = add i32 %10482697, i32 %10542698
  10622700 = mul i32 %113.load2420, i32 -21
  10632701 = add i32 %10552699, i32 %10622700
  10692702 = mul i32 %121.load2424, i32 112
  10702703 = add i32 %10632701, i32 %10692702
  10762704 = mul i32 %129.load2428, i32 114
  10772705 = add i32 %10702703, i32 %10762704
  10832706 = mul i32 %136.load2432, i32 112
  10842707 = add i32 %10772705, i32 %10832706
  10912708 = mul i32 %144.load2436, i32 -10
  10922709 = add i32 %10842707, i32 %10912708
  10992710 = mul i32 %151.load2440, i32 -16
  11002711 = add i32 %10922709, i32 %10992710
  11072712 = mul i32 %158.load2444, i32 -50
  11082713 = add i32 %11002711, i32 %11072712
  11152714 = mul i32 %165.load2448, i32 -112
  11162715 = add i32 %11082713, i32 %11152714
  11232716 = mul i32 %172.load2452, i32 -116
  11242717 = add i32 %11162715, i32 %11232716
  11312718 = mul i32 %179.load2456, i32 -54
  11322719 = add i32 %11242717, i32 %11312718
  11382720 = mul i32 %187.load2460, i32 82
  11392721 = add i32 %11322719, i32 %11382720
  11462722 = mul i32 %194.load2464, i32 -72
  11472723 = add i32 %11392721, i32 %11462722
  33148 = icmp sgt i32 %11472723, i32 127
  br i1 %33148, bb %relu_reg.then3150, bb %relu_reg.if.exit3152
model.entry11.split.split.split.split.split.split:
  11482724.ret = phi [bb %relu_reg.then3150, i32 127, bb %relu_reg.then83155, i32 0, bb %relu_reg.if.exit93157, i32 %11472723]
  11492725 = mul i32 %11482724.ret, i32 32
  11502726 = add i32 %9602674, i32 %11492725
  11562727 = mul i32 %15.load2369, i32 15
  11632728 = mul i32 %21.load2372, i32 -77
  11642729 = add i32 %11562727, i32 %11632728
  11702730 = mul i32 %28.load2376, i32 66
  11712731 = add i32 %11642729, i32 %11702730
  11782732 = mul i32 %36.load2380, i32 -90
  11792733 = add i32 %11712731, i32 %11782732
  11862734 = mul i32 %44.load2384, i32 -6
  11872735 = add i32 %11792733, i32 %11862734
  11942736 = mul i32 %52.load2388, i32 -30
  11952737 = add i32 %11872735, i32 %11942736
  12022738 = mul i32 %59.load2392, i32 -8
  12032739 = add i32 %11952737, i32 %12022738
  12092740 = mul i32 %67.load2396, i32 81
  12102741 = add i32 %12032739, i32 %12092740
  12162742 = mul i32 %74.load2400, i32 2
  12172743 = add i32 %12102741, i32 %12162742
  12242744 = mul i32 %82.load2404, i32 -110
  12252745 = add i32 %12172743, i32 %12242744
  12322746 = mul i32 %89.load2408, i32 -95
  12332747 = add i32 %12252745, i32 %12322746
  12392748 = mul i32 %97.load2412, i32 59
  12402749 = add i32 %12332747, i32 %12392748
  12462750 = mul i32 %105.load2416, i32 52
  12472751 = add i32 %12402749, i32 %12462750
  12532752 = mul i32 %113.load2420, i32 15
  12542753 = add i32 %12472751, i32 %12532752
  12602754 = mul i32 %121.load2424, i32 55
  12612755 = add i32 %12542753, i32 %12602754
  12682756 = mul i32 %129.load2428, i32 -33
  12692757 = add i32 %12612755, i32 %12682756
  12752758 = mul i32 %136.load2432, i32 14
  12762759 = add i32 %12692757, i32 %12752758
  12822760 = mul i32 %144.load2436, i32 58
  12832761 = add i32 %12762759, i32 %12822760
  12892762 = mul i32 %151.load2440, i32 67
  12902763 = add i32 %12832761, i32 %12892762
  12962764 = mul i32 %158.load2444, i32 86
  12972765 = add i32 %12902763, i32 %12962764
  13042766 = mul i32 %165.load2448, i32 -79
  13052767 = add i32 %12972765, i32 %13042766
  13112768 = mul i32 %172.load2452, i32 48
  13122769 = add i32 %13052767, i32 %13112768
  13192770 = mul i32 %179.load2456, i32 -13
  13202771 = add i32 %13122769, i32 %13192770
  13272772 = mul i32 %187.load2460, i32 -15
  13282773 = add i32 %13202771, i32 %13272772
  13342774 = mul i32 %194.load2464, i32 66
  13352775 = add i32 %13282773, i32 %13342774
  33162 = icmp sgt i32 %13352775, i32 127
  br i1 %33162, bb %relu_reg.then3164, bb %relu_reg.if.exit3166
model.entry11.split.split.split.split.split.split.split:
  13362776.ret = phi [bb %relu_reg.then3164, i32 127, bb %relu_reg.then83169, i32 0, bb %relu_reg.if.exit93171, i32 %13352775]
  13382777 = mul i32 %13362776.ret, i32 -95
  13392778 = add i32 %11502726, i32 %13382777
  13452779 = mul i32 %15.load2369, i32 33
  13522780 = add i32 %13452779, i32 %7832625
  13582781 = mul i32 %28.load2376, i32 67
  13592782 = add i32 %13522780, i32 %13582781
  13652783 = mul i32 %36.load2380, i32 30
  13662784 = add i32 %13592782, i32 %13652783
  13732785 = mul i32 %44.load2384, i32 -2
  13742786 = add i32 %13662784, i32 %13732785
  13802787 = mul i32 %52.load2388, i32 65
  13812788 = add i32 %13742786, i32 %13802787
  13872789 = mul i32 %59.load2392, i32 120
  13882790 = add i32 %13812788, i32 %13872789
  13952791 = mul i32 %67.load2396, i32 -13
  13962792 = add i32 %13882790, i32 %13952791
  14022793 = mul i32 %74.load2400, i32 18
  14032794 = add i32 %13962792, i32 %14022793
  14092795 = mul i32 %82.load2404, i32 5
  14102796 = add i32 %14032794, i32 %14092795
  14162797 = mul i32 %89.load2408, i32 104
  14172798 = add i32 %14102796, i32 %14162797
  14242799 = mul i32 %97.load2412, i32 -119
  14252800 = add i32 %14172798, i32 %14242799
  14322801 = mul i32 %105.load2416, i32 -7
  14332802 = add i32 %14252800, i32 %14322801
  14392803 = mul i32 %113.load2420, i32 71
  14402804 = add i32 %14332802, i32 %14392803
  14462805 = mul i32 %121.load2424, i32 107
  14472806 = add i32 %14402804, i32 %14462805
  14532807 = mul i32 %129.load2428, i32 24
  14542808 = add i32 %14472806, i32 %14532807
  14602809 = mul i32 %136.load2432, i32 82
  14612810 = add i32 %14542808, i32 %14602809
  14682811 = mul i32 %144.load2436, i32 -96
  14692812 = add i32 %14612810, i32 %14682811
  14762813 = mul i32 %151.load2440, i32 -104
  14772814 = add i32 %14692812, i32 %14762813
  14842815 = mul i32 %158.load2444, i32 -121
  14852816 = add i32 %14772814, i32 %14842815
  14922817 = add i32 %14852816, i32 %5472560
  14982818 = mul i32 %172.load2452, i32 97
  14992819 = add i32 %14922817, i32 %14982818
  15052820 = mul i32 %179.load2456, i32 83
  15062821 = add i32 %14992819, i32 %15052820
  15122822 = mul i32 %187.load2460, i32 46
  15132823 = add i32 %15062821, i32 %15122822
  15202824 = mul i32 %194.load2464, i32 -84
  15212825 = add i32 %15132823, i32 %15202824
  33176 = icmp sgt i32 %15212825, i32 127
  br i1 %33176, bb %relu_reg.then3178, bb %relu_reg.if.exit3180
model.entry11.split.split.split.split.split.split.split.split:
  15222826.ret = phi [bb %relu_reg.then3178, i32 127, bb %relu_reg.then83183, i32 0, bb %relu_reg.if.exit93185, i32 %15212825]
  15242827 = mul i32 %15222826.ret, i32 -50
  15252828 = add i32 %13392778, i32 %15242827
  15322829 = mul i32 %15.load2369, i32 -29
  15382830 = mul i32 %21.load2372, i32 7
  15392831 = add i32 %15322829, i32 %15382830
  15472832 = add i32 %15392831, i32 %4142524
  15532833 = mul i32 %36.load2380, i32 38
  15542834 = add i32 %15472832, i32 %15532833
  15612835 = mul i32 %44.load2384, i32 -90
  15622836 = add i32 %15542834, i32 %15612835
  15702837 = add i32 %15622836, i32 %10032684
  15772838 = mul i32 %59.load2392, i32 -32
  15782839 = add i32 %15702837, i32 %15772838
  15842840 = mul i32 %67.load2396, i32 37
  15852841 = add i32 %15782839, i32 %15842840
  15912842 = mul i32 %74.load2400, i32 36
  15922843 = add i32 %15852841, i32 %15912842
  16002844 = add i32 %15922843, i32 %10332692
  16072845 = mul i32 %89.load2408, i32 -125
  16082846 = add i32 %16002844, i32 %16072845
  16152847 = mul i32 %97.load2412, i32 -46
  16162848 = add i32 %16082846, i32 %16152847
  16232849 = mul i32 %105.load2416, i32 -70
  16242850 = add i32 %16162848, i32 %16232849
  16302851 = mul i32 %113.load2420, i32 37
  16312852 = add i32 %16242850, i32 %16302851
  16382853 = mul i32 %121.load2424, i32 -73
  16392854 = add i32 %16312852, i32 %16382853
  16462855 = mul i32 %129.load2428, i32 -34
  16472856 = add i32 %16392854, i32 %16462855
  16542857 = mul i32 %136.load2432, i32 -87
  16552858 = add i32 %16472856, i32 %16542857
  16622859 = mul i32 %144.load2436, i32 -75
  16632860 = add i32 %16552858, i32 %16622859
  16692861 = mul i32 %151.load2440, i32 71
  16702862 = add i32 %16632860, i32 %16692861
  16772863 = mul i32 %158.load2444, i32 -77
  16782864 = add i32 %16702862, i32 %16772863
  16842865 = mul i32 %165.load2448, i32 53
  16852866 = add i32 %16782864, i32 %16842865
  16912867 = mul i32 %172.load2452, i32 37
  16922868 = add i32 %16852866, i32 %16912867
  16992869 = mul i32 %179.load2456, i32 -103
  17002870 = add i32 %16922868, i32 %16992869
  17072871 = mul i32 %187.load2460, i32 -13
  17082872 = add i32 %17002870, i32 %17072871
  17152873 = mul i32 %194.load2464, i32 -114
  17162874 = add i32 %17082872, i32 %17152873
  33190 = icmp sgt i32 %17162874, i32 127
  br i1 %33190, bb %relu_reg.then3192, bb %relu_reg.if.exit3194
model.entry11.split.split.split.split.split.split.split.split.split:
  17172875.ret = phi [bb %relu_reg.then3192, i32 127, bb %relu_reg.then83197, i32 0, bb %relu_reg.if.exit93199, i32 %17162874]
  17192876 = mul i32 %17172875.ret, i32 -23
  17202877 = add i32 %15252828, i32 %17192876
  17262878 = mul i32 %15.load2369, i32 67
  17322879 = mul i32 %21.load2372, i32 42
  17332880 = add i32 %17262878, i32 %17322879
  17392881 = mul i32 %28.load2376, i32 41
  17402882 = add i32 %17332880, i32 %17392881
  17472883 = mul i32 %36.load2380, i32 -123
  17482884 = add i32 %17402882, i32 %17472883
  17552885 = mul i32 %44.load2384, i32 -92
  17562886 = add i32 %17482884, i32 %17552885
  17622887 = mul i32 %52.load2388, i32 10
  17632888 = add i32 %17562886, i32 %17622887
  17702889 = mul i32 %59.load2392, i32 -77
  17712890 = add i32 %17632888, i32 %17702889
  17772891 = mul i32 %67.load2396, i32 75
  17782892 = add i32 %17712890, i32 %17772891
  17842893 = mul i32 %74.load2400, i32 96
  17852894 = add i32 %17782892, i32 %17842893
  17922895 = mul i32 %82.load2404, i32 -51
  17932896 = add i32 %17852894, i32 %17922895
  17992897 = mul i32 %89.load2408, i32 109
  18002898 = add i32 %17932896, i32 %17992897
  18072899 = mul i32 %97.load2412, i32 -74
  18082900 = add i32 %18002898, i32 %18072899
  18162901 = add i32 %18082900, i32 %14322801
  18232902 = mul i32 %113.load2420, i32 -122
  18242903 = add i32 %18162901, i32 %18232902
  18302904 = mul i32 %121.load2424, i32 67
  18312905 = add i32 %18242903, i32 %18302904
  18372906 = mul i32 %129.load2428, i32 47
  18382907 = add i32 %18312905, i32 %18372906
  18442908 = mul i32 %136.load2432, i32 22
  18452909 = add i32 %18382907, i32 %18442908
  18522910 = mul i32 %144.load2436, i32 -68
  18532911 = add i32 %18452909, i32 %18522910
  18592912 = mul i32 %151.load2440, i32 38
  18602913 = add i32 %18532911, i32 %18592912
  18662914 = mul i32 %158.load2444, i32 29
  18672915 = add i32 %18602913, i32 %18662914
  18732916 = mul i32 %165.load2448, i32 115
  18742917 = add i32 %18672915, i32 %18732916
  18812918 = mul i32 %172.load2452, i32 -121
  18822919 = add i32 %18742917, i32 %18812918
  18882920 = mul i32 %179.load2456, i32 36
  18892921 = add i32 %18822919, i32 %18882920
  18962922 = mul i32 %187.load2460, i32 -49
  18972923 = add i32 %18892921, i32 %18962922
  19032924 = mul i32 %194.load2464, i32 85
  19042925 = add i32 %18972923, i32 %19032924
  33204 = icmp sgt i32 %19042925, i32 127
  br i1 %33204, bb %relu_reg.then3206, bb %relu_reg.if.exit3208
model.entry11.split.split.split.split.split.split.split.split.split.split:
  19052926.ret = phi [bb %relu_reg.then3206, i32 127, bb %relu_reg.then83211, i32 0, bb %relu_reg.if.exit93213, i32 %19042925]
  19062927 = mul i32 %19052926.ret, i32 46
  19072928 = add i32 %17202877, i32 %19062927
  19082929 = icmp sgt i32 %19072928, i32 0
  br i1 %19082929, bb %model.then1909, bb %model.if.exit1910
model.then1909:
  br bb %while.exit1924.split
model.if.exit1910:
  br bb %while.exit1924.split
relu_reg.then3080:
  br bb %model.entry11.split
relu_reg.if.exit3082:
  73083 = icmp slt i32 %1972466, i32 0
  br i1 %73083, bb %relu_reg.then83085, bb %relu_reg.if.exit93087
relu_reg.then83085:
  br bb %model.entry11.split
relu_reg.if.exit93087:
  br bb %model.entry11.split
relu_reg.then3094:
  br bb %model.entry11.split.split
relu_reg.if.exit3096:
  73097 = icmp slt i32 %3912517, i32 0
  br i1 %73097, bb %relu_reg.then83099, bb %relu_reg.if.exit93101
relu_reg.then83099:
  br bb %model.entry11.split.split
relu_reg.if.exit93101:
  br bb %model.entry11.split.split
relu_reg.then3108:
  br bb %model.entry11.split.split.split
relu_reg.if.exit3110:
  73111 = icmp slt i32 %5782569, i32 0
  br i1 %73111, bb %relu_reg.then83113, bb %relu_reg.if.exit93115
relu_reg.then83113:
  br bb %model.entry11.split.split.split
relu_reg.if.exit93115:
  br bb %model.entry11.split.split.split
relu_reg.then3122:
  br bb %model.entry11.split.split.split.split
relu_reg.if.exit3124:
  73125 = icmp slt i32 %7672620, i32 0
  br i1 %73125, bb %relu_reg.then83127, bb %relu_reg.if.exit93129
relu_reg.then83127:
  br bb %model.entry11.split.split.split.split
relu_reg.if.exit93129:
  br bb %model.entry11.split.split.split.split
relu_reg.then3136:
  br bb %model.entry11.split.split.split.split.split
relu_reg.if.exit3138:
  73139 = icmp slt i32 %9562671, i32 0
  br i1 %73139, bb %relu_reg.then83141, bb %relu_reg.if.exit93143
relu_reg.then83141:
  br bb %model.entry11.split.split.split.split.split
relu_reg.if.exit93143:
  br bb %model.entry11.split.split.split.split.split
relu_reg.then3150:
  br bb %model.entry11.split.split.split.split.split.split
relu_reg.if.exit3152:
  73153 = icmp slt i32 %11472723, i32 0
  br i1 %73153, bb %relu_reg.then83155, bb %relu_reg.if.exit93157
relu_reg.then83155:
  br bb %model.entry11.split.split.split.split.split.split
relu_reg.if.exit93157:
  br bb %model.entry11.split.split.split.split.split.split
relu_reg.then3164:
  br bb %model.entry11.split.split.split.split.split.split.split
relu_reg.if.exit3166:
  73167 = icmp slt i32 %13352775, i32 0
  br i1 %73167, bb %relu_reg.then83169, bb %relu_reg.if.exit93171
relu_reg.then83169:
  br bb %model.entry11.split.split.split.split.split.split.split
relu_reg.if.exit93171:
  br bb %model.entry11.split.split.split.split.split.split.split
relu_reg.then3178:
  br bb %model.entry11.split.split.split.split.split.split.split.split
relu_reg.if.exit3180:
  73181 = icmp slt i32 %15212825, i32 0
  br i1 %73181, bb %relu_reg.then83183, bb %relu_reg.if.exit93185
relu_reg.then83183:
  br bb %model.entry11.split.split.split.split.split.split.split.split
relu_reg.if.exit93185:
  br bb %model.entry11.split.split.split.split.split.split.split.split
relu_reg.then3192:
  br bb %model.entry11.split.split.split.split.split.split.split.split.split
relu_reg.if.exit3194:
  73195 = icmp slt i32 %17162874, i32 0
  br i1 %73195, bb %relu_reg.then83197, bb %relu_reg.if.exit93199
relu_reg.then83197:
  br bb %model.entry11.split.split.split.split.split.split.split.split.split
relu_reg.if.exit93199:
  br bb %model.entry11.split.split.split.split.split.split.split.split.split
relu_reg.then3206:
  br bb %model.entry11.split.split.split.split.split.split.split.split.split.split
relu_reg.if.exit3208:
  73209 = icmp slt i32 %19042925, i32 0
  br i1 %73209, bb %relu_reg.then83211, bb %relu_reg.if.exit93213
relu_reg.then83211:
  br bb %model.entry11.split.split.split.split.split.split.split.split.split.split
relu_reg.if.exit93213:
  br bb %model.entry11.split.split.split.split.split.split.split.split.split.split
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

i32 model(ptr a) {
entry11:
  15.load = load i32 from ptr %a
  17 = mul i32 %15.load, i32 85
  21 = ptradd ptr %a, i32 4
  21.load = load i32 from ptr %21
  23 = mul i32 %21.load, i32 23
  24 = add i32 %17, i32 %23
  28 = ptradd ptr %a, i32 8
  28.load = load i32 from ptr %28
  31 = mul i32 %28.load, i32 -82
  32 = add i32 %24, i32 %31
  36 = ptradd ptr %a, i32 12
  36.load = load i32 from ptr %36
  39 = mul i32 %36.load, i32 -103
  40 = add i32 %32, i32 %39
  44 = ptradd ptr %a, i32 16
  44.load = load i32 from ptr %44
  47 = mul i32 %44.load, i32 -123
  48 = add i32 %40, i32 %47
  1968 = ptradd ptr %a, i32 20
  52.load = load i32 from ptr %1968
  54 = mul i32 %52.load, i32 64
  55 = add i32 %48, i32 %54
  1970 = ptradd ptr %a, i32 24
  59.load = load i32 from ptr %1970
  62 = mul i32 %59.load, i32 -120
  63 = add i32 %55, i32 %62
  1972 = ptradd ptr %a, i32 28
  67.load = load i32 from ptr %1972
  69 = mul i32 %67.load, i32 50
  70 = add i32 %63, i32 %69
  1974 = ptradd ptr %a, i32 32
  74.load = load i32 from ptr %1974
  77 = mul i32 %74.load, i32 -59
  78 = add i32 %70, i32 %77
  1976 = ptradd ptr %a, i32 36
  82.load = load i32 from ptr %1976
  84 = mul i32 %82.load, i32 47
  85 = add i32 %78, i32 %84
  1978 = ptradd ptr %a, i32 40
  89.load = load i32 from ptr %1978
  92 = mul i32 %89.load, i32 -111
  93 = add i32 %85, i32 %92
  1980 = ptradd ptr %a, i32 44
  97.load = load i32 from ptr %1980
  100 = mul i32 %97.load, i32 -67
  101 = add i32 %93, i32 %100
  1982 = ptradd ptr %a, i32 48
  105.load = load i32 from ptr %1982
  108 = mul i32 %105.load, i32 -106
  109 = add i32 %101, i32 %108
  1984 = ptradd ptr %a, i32 52
  113.load = load i32 from ptr %1984
  116 = mul i32 %113.load, i32 -75
  117 = add i32 %109, i32 %116
  1986 = ptradd ptr %a, i32 56
  121.load = load i32 from ptr %1986
  124 = mul i32 %121.load, i32 -102
  125 = add i32 %117, i32 %124
  1988 = ptradd ptr %a, i32 60
  129.load = load i32 from ptr %1988
  131 = mul i32 %129.load, i32 34
  132 = add i32 %125, i32 %131
  1990 = ptradd ptr %a, i32 64
  136.load = load i32 from ptr %1990
  139 = mul i32 %136.load, i32 -39
  140 = add i32 %132, i32 %139
  1992 = ptradd ptr %a, i32 68
  144.load = load i32 from ptr %1992
  146 = mul i32 %144.load, i32 65
  147 = add i32 %140, i32 %146
  1994 = ptradd ptr %a, i32 72
  151.load = load i32 from ptr %1994
  153 = mul i32 %151.load, i32 47
  154 = add i32 %147, i32 %153
  1996 = ptradd ptr %a, i32 76
  158.load = load i32 from ptr %1996
  160 = mul i32 %158.load, i32 113
  161 = add i32 %154, i32 %160
  1998 = ptradd ptr %a, i32 80
  165.load = load i32 from ptr %1998
  167 = mul i32 %165.load, i32 110
  168 = add i32 %161, i32 %167
  2000 = ptradd ptr %a, i32 84
  172.load = load i32 from ptr %2000
  174 = mul i32 %172.load, i32 47
  175 = add i32 %168, i32 %174
  2002 = ptradd ptr %a, i32 88
  179.load = load i32 from ptr %2002
  182 = mul i32 %179.load, i32 -4
  183 = add i32 %175, i32 %182
  2004 = ptradd ptr %a, i32 92
  187.load = load i32 from ptr %2004
  189 = mul i32 %187.load, i32 80
  190 = add i32 %183, i32 %189
  2006 = ptradd ptr %a, i32 96
  194.load = load i32 from ptr %2006
  196 = mul i32 %194.load, i32 46
  197 = add i32 %190, i32 %196
  32938 = icmp sgt i32 %197, i32 127
  br i1 %32938, bb %relu_reg.then, bb %relu_reg.if.exit
entry11.split:
  198.ret = phi [bb %relu_reg.then, i32 127, bb %relu_reg.then8, i32 0, bb %relu_reg.if.exit9, i32 %197]
  199 = mul i32 %198.ret, i32 39
  206 = mul i32 %15.load, i32 -106
  212 = mul i32 %21.load, i32 126
  213 = add i32 %206, i32 %212
  220 = mul i32 %28.load, i32 -18
  221 = add i32 %213, i32 %220
  228 = mul i32 %36.load, i32 -31
  229 = add i32 %221, i32 %228
  236 = mul i32 %44.load, i32 -8
  237 = add i32 %229, i32 %236
  243 = mul i32 %52.load, i32 47
  244 = add i32 %237, i32 %243
  251 = mul i32 %59.load, i32 -4
  252 = add i32 %244, i32 %251
  258 = mul i32 %67.load, i32 67
  259 = add i32 %252, i32 %258
  266 = mul i32 %74.load, i32 -94
  267 = add i32 %259, i32 %266
  274 = mul i32 %82.load, i32 -121
  275 = add i32 %267, i32 %274
  281 = mul i32 %89.load, i32 7
  282 = add i32 %275, i32 %281
  289 = mul i32 %97.load, i32 -21
  290 = add i32 %282, i32 %289
  297 = mul i32 %105.load, i32 -60
  298 = add i32 %290, i32 %297
  305 = mul i32 %113.load, i32 -43
  306 = add i32 %298, i32 %305
  312 = mul i32 %121.load, i32 105
  313 = add i32 %306, i32 %312
  320 = mul i32 %129.load, i32 -42
  321 = add i32 %313, i32 %320
  327 = mul i32 %136.load, i32 87
  328 = add i32 %321, i32 %327
  334 = mul i32 %144.load, i32 29
  335 = add i32 %328, i32 %334
  342 = mul i32 %151.load, i32 -106
  343 = add i32 %335, i32 %342
  350 = mul i32 %158.load, i32 -31
  351 = add i32 %343, i32 %350
  358 = mul i32 %165.load, i32 -110
  359 = add i32 %351, i32 %358
  366 = mul i32 %172.load, i32 -100
  367 = add i32 %359, i32 %366
  374 = mul i32 %179.load, i32 -22
  375 = add i32 %367, i32 %374
  382 = mul i32 %187.load, i32 -75
  383 = add i32 %375, i32 %382
  390 = mul i32 %194.load, i32 -125
  391 = add i32 %383, i32 %390
  32952 = icmp sgt i32 %391, i32 127
  br i1 %32952, bb %relu_reg.then2954, bb %relu_reg.if.exit2956
entry11.split.split:
  392.ret = phi [bb %relu_reg.then2954, i32 127, bb %relu_reg.then82959, i32 0, bb %relu_reg.if.exit92961, i32 %391]
  393 = mul i32 %392.ret, i32 77
  394 = add i32 %199, i32 %393
  400 = mul i32 %15.load, i32 26
  406 = mul i32 %21.load, i32 76
  407 = add i32 %400, i32 %406
  414 = mul i32 %28.load, i32 -70
  415 = add i32 %407, i32 %414
  421 = mul i32 %36.load, i32 29
  422 = add i32 %415, i32 %421
  429 = mul i32 %44.load, i32 -95
  430 = add i32 %422, i32 %429
  436 = mul i32 %52.load, i32 96
  437 = add i32 %430, i32 %436
  443 = mul i32 %59.load, i32 52
  444 = add i32 %437, i32 %443
  451 = mul i32 %67.load, i32 -68
  452 = add i32 %444, i32 %451
  459 = mul i32 %74.load, i32 -5
  460 = add i32 %452, i32 %459
  466 = mul i32 %82.load, i32 34
  467 = add i32 %460, i32 %466
  474 = mul i32 %89.load, i32 -34
  475 = add i32 %467, i32 %474
  481 = mul i32 %97.load, i32 102
  482 = add i32 %475, i32 %481
  488 = mul i32 %105.load, i32 6
  489 = add i32 %482, i32 %488
  496 = mul i32 %113.load, i32 -38
  497 = add i32 %489, i32 %496
  503 = mul i32 %121.load, i32 27
  504 = add i32 %497, i32 %503
  510 = mul i32 %129.load, i32 110
  511 = add i32 %504, i32 %510
  517 = mul i32 %136.load, i32 116
  518 = add i32 %511, i32 %517
  524 = mul i32 %144.load, i32 39
  525 = add i32 %518, i32 %524
  532 = mul i32 %151.load, i32 -63
  533 = add i32 %525, i32 %532
  540 = mul i32 %158.load, i32 -99
  541 = add i32 %533, i32 %540
  547 = mul i32 %165.load, i32 65
  548 = add i32 %541, i32 %547
  554 = mul i32 %172.load, i32 120
  555 = add i32 %548, i32 %554
  562 = mul i32 %179.load, i32 -39
  563 = add i32 %555, i32 %562
  570 = mul i32 %187.load, i32 -6
  571 = add i32 %563, i32 %570
  577 = mul i32 %194.load, i32 94
  578 = add i32 %571, i32 %577
  32966 = icmp sgt i32 %578, i32 127
  br i1 %32966, bb %relu_reg.then2968, bb %relu_reg.if.exit2970
entry11.split.split.split:
  579.ret = phi [bb %relu_reg.then2968, i32 127, bb %relu_reg.then82973, i32 0, bb %relu_reg.if.exit92975, i32 %578]
  580 = mul i32 %579.ret, i32 127
  581 = add i32 %394, i32 %580
  588 = mul i32 %15.load, i32 -23
  595 = mul i32 %21.load, i32 -63
  596 = add i32 %588, i32 %595
  602 = mul i32 %28.load, i32 49
  603 = add i32 %596, i32 %602
  609 = mul i32 %36.load, i32 50
  610 = add i32 %603, i32 %609
  616 = mul i32 %44.load, i32 72
  617 = add i32 %610, i32 %616
  623 = mul i32 %52.load, i32 85
  624 = add i32 %617, i32 %623
  631 = mul i32 %59.load, i32 -30
  632 = add i32 %624, i32 %631
  638 = mul i32 %67.load, i32 12
  639 = add i32 %632, i32 %638
  645 = mul i32 %74.load, i32 125
  646 = add i32 %639, i32 %645
  653 = mul i32 %82.load, i32 -117
  654 = add i32 %646, i32 %653
  661 = mul i32 %89.load, i32 -65
  662 = add i32 %654, i32 %661
  670 = add i32 %662, i32 %100
  676 = mul i32 %105.load, i32 125
  677 = add i32 %670, i32 %676
  683 = mul i32 %113.load, i32 110
  684 = add i32 %677, i32 %683
  691 = mul i32 %121.load, i32 -31
  692 = add i32 %684, i32 %691
  699 = mul i32 %129.load, i32 -123
  700 = add i32 %692, i32 %699
  706 = mul i32 %136.load, i32 83
  707 = add i32 %700, i32 %706
  713 = mul i32 %144.load, i32 122
  714 = add i32 %707, i32 %713
  720 = mul i32 %151.load, i32 11
  721 = add i32 %714, i32 %720
  728 = mul i32 %158.load, i32 -23
  729 = add i32 %721, i32 %728
  736 = mul i32 %165.load, i32 -47
  737 = add i32 %729, i32 %736
  744 = mul i32 %172.load, i32 -32
  745 = add i32 %737, i32 %744
  752 = mul i32 %179.load, i32 -117
  753 = add i32 %745, i32 %752
  759 = mul i32 %187.load, i32 95
  760 = add i32 %753, i32 %759
  766 = mul i32 %194.load, i32 118
  767 = add i32 %760, i32 %766
  32980 = icmp sgt i32 %767, i32 127
  br i1 %32980, bb %relu_reg.then2982, bb %relu_reg.if.exit2984
entry11.split.split.split.split:
  768.ret = phi [bb %relu_reg.then2982, i32 127, bb %relu_reg.then82987, i32 0, bb %relu_reg.if.exit92989, i32 %767]
  770 = mul i32 %768.ret, i32 -106
  771 = add i32 %581, i32 %770
  777 = mul i32 %15.load, i32 8
  783 = mul i32 %21.load, i32 82
  784 = add i32 %777, i32 %783
  791 = mul i32 %28.load, i32 -104
  792 = add i32 %784, i32 %791
  798 = mul i32 %36.load, i32 101
  799 = add i32 %792, i32 %798
  806 = mul i32 %44.load, i32 -116
  807 = add i32 %799, i32 %806
  814 = mul i32 %52.load, i32 -63
  815 = add i32 %807, i32 %814
  822 = mul i32 %59.load, i32 -16
  823 = add i32 %815, i32 %822
  830 = mul i32 %67.load, i32 -70
  831 = add i32 %823, i32 %830
  838 = add i32 %831, i32 %645
  844 = mul i32 %82.load, i32 75
  845 = add i32 %838, i32 %844
  851 = mul i32 %89.load, i32 66
  852 = add i32 %845, i32 %851
  859 = mul i32 %97.load, i32 -96
  860 = add i32 %852, i32 %859
  867 = mul i32 %105.load, i32 -101
  868 = add i32 %860, i32 %867
  875 = mul i32 %113.load, i32 -114
  876 = add i32 %868, i32 %875
  882 = mul i32 %121.load, i32 59
  883 = add i32 %876, i32 %882
  889 = mul i32 %129.load, i32 12
  890 = add i32 %883, i32 %889
  896 = mul i32 %136.load, i32 5
  897 = add i32 %890, i32 %896
  904 = mul i32 %144.load, i32 -95
  905 = add i32 %897, i32 %904
  911 = mul i32 %151.load, i32 116
  912 = add i32 %905, i32 %911
  919 = mul i32 %158.load, i32 -93
  920 = add i32 %912, i32 %919
  926 = mul i32 %165.load, i32 15
  927 = add i32 %920, i32 %926
  933 = mul i32 %172.load, i32 79
  934 = add i32 %927, i32 %933
  940 = mul i32 %179.load, i32 3
  941 = add i32 %934, i32 %940
  947 = mul i32 %187.load, i32 49
  948 = add i32 %941, i32 %947
  955 = mul i32 %194.load, i32 -124
  956 = add i32 %948, i32 %955
  32994 = icmp sgt i32 %956, i32 127
  br i1 %32994, bb %relu_reg.then2996, bb %relu_reg.if.exit2998
entry11.split.split.split.split.split:
  957.ret = phi [bb %relu_reg.then2996, i32 127, bb %relu_reg.then83001, i32 0, bb %relu_reg.if.exit93003, i32 %956]
  959 = mul i32 %957.ret, i32 -3
  960 = add i32 %771, i32 %959
  966 = mul i32 %15.load, i32 81
  972 = mul i32 %21.load, i32 68
  973 = add i32 %966, i32 %972
  980 = mul i32 %28.load, i32 -102
  981 = add i32 %973, i32 %980
  988 = mul i32 %36.load, i32 -74
  989 = add i32 %981, i32 %988
  995 = mul i32 %44.load, i32 121
  996 = add i32 %989, i32 %995
  1003 = mul i32 %52.load, i32 -15
  1004 = add i32 %996, i32 %1003
  1010 = mul i32 %59.load, i32 55
  1011 = add i32 %1004, i32 %1010
  1017 = mul i32 %67.load, i32 101
  1018 = add i32 %1011, i32 %1017
  1025 = mul i32 %74.load, i32 -13
  1026 = add i32 %1018, i32 %1025
  1033 = mul i32 %82.load, i32 -62
  1034 = add i32 %1026, i32 %1033
  1040 = mul i32 %89.load, i32 64
  1041 = add i32 %1034, i32 %1040
  1047 = mul i32 %97.load, i32 114
  1048 = add i32 %1041, i32 %1047
  1054 = mul i32 %105.load, i32 38
  1055 = add i32 %1048, i32 %1054
  1062 = mul i32 %113.load, i32 -21
  1063 = add i32 %1055, i32 %1062
  1069 = mul i32 %121.load, i32 112
  1070 = add i32 %1063, i32 %1069
  1076 = mul i32 %129.load, i32 114
  1077 = add i32 %1070, i32 %1076
  1083 = mul i32 %136.load, i32 112
  1084 = add i32 %1077, i32 %1083
  1091 = mul i32 %144.load, i32 -10
  1092 = add i32 %1084, i32 %1091
  1099 = mul i32 %151.load, i32 -16
  1100 = add i32 %1092, i32 %1099
  1107 = mul i32 %158.load, i32 -50
  1108 = add i32 %1100, i32 %1107
  1115 = mul i32 %165.load, i32 -112
  1116 = add i32 %1108, i32 %1115
  1123 = mul i32 %172.load, i32 -116
  1124 = add i32 %1116, i32 %1123
  1131 = mul i32 %179.load, i32 -54
  1132 = add i32 %1124, i32 %1131
  1138 = mul i32 %187.load, i32 82
  1139 = add i32 %1132, i32 %1138
  1146 = mul i32 %194.load, i32 -72
  1147 = add i32 %1139, i32 %1146
  33008 = icmp sgt i32 %1147, i32 127
  br i1 %33008, bb %relu_reg.then3010, bb %relu_reg.if.exit3012
entry11.split.split.split.split.split.split:
  1148.ret = phi [bb %relu_reg.then3010, i32 127, bb %relu_reg.then83015, i32 0, bb %relu_reg.if.exit93017, i32 %1147]
  1149 = mul i32 %1148.ret, i32 32
  1150 = add i32 %960, i32 %1149
  1156 = mul i32 %15.load, i32 15
  1163 = mul i32 %21.load, i32 -77
  1164 = add i32 %1156, i32 %1163
  1170 = mul i32 %28.load, i32 66
  1171 = add i32 %1164, i32 %1170
  1178 = mul i32 %36.load, i32 -90
  1179 = add i32 %1171, i32 %1178
  1186 = mul i32 %44.load, i32 -6
  1187 = add i32 %1179, i32 %1186
  1194 = mul i32 %52.load, i32 -30
  1195 = add i32 %1187, i32 %1194
  1202 = mul i32 %59.load, i32 -8
  1203 = add i32 %1195, i32 %1202
  1209 = mul i32 %67.load, i32 81
  1210 = add i32 %1203, i32 %1209
  1216 = mul i32 %74.load, i32 2
  1217 = add i32 %1210, i32 %1216
  1224 = mul i32 %82.load, i32 -110
  1225 = add i32 %1217, i32 %1224
  1232 = mul i32 %89.load, i32 -95
  1233 = add i32 %1225, i32 %1232
  1239 = mul i32 %97.load, i32 59
  1240 = add i32 %1233, i32 %1239
  1246 = mul i32 %105.load, i32 52
  1247 = add i32 %1240, i32 %1246
  1253 = mul i32 %113.load, i32 15
  1254 = add i32 %1247, i32 %1253
  1260 = mul i32 %121.load, i32 55
  1261 = add i32 %1254, i32 %1260
  1268 = mul i32 %129.load, i32 -33
  1269 = add i32 %1261, i32 %1268
  1275 = mul i32 %136.load, i32 14
  1276 = add i32 %1269, i32 %1275
  1282 = mul i32 %144.load, i32 58
  1283 = add i32 %1276, i32 %1282
  1289 = mul i32 %151.load, i32 67
  1290 = add i32 %1283, i32 %1289
  1296 = mul i32 %158.load, i32 86
  1297 = add i32 %1290, i32 %1296
  1304 = mul i32 %165.load, i32 -79
  1305 = add i32 %1297, i32 %1304
  1311 = mul i32 %172.load, i32 48
  1312 = add i32 %1305, i32 %1311
  1319 = mul i32 %179.load, i32 -13
  1320 = add i32 %1312, i32 %1319
  1327 = mul i32 %187.load, i32 -15
  1328 = add i32 %1320, i32 %1327
  1334 = mul i32 %194.load, i32 66
  1335 = add i32 %1328, i32 %1334
  33022 = icmp sgt i32 %1335, i32 127
  br i1 %33022, bb %relu_reg.then3024, bb %relu_reg.if.exit3026
entry11.split.split.split.split.split.split.split:
  1336.ret = phi [bb %relu_reg.then3024, i32 127, bb %relu_reg.then83029, i32 0, bb %relu_reg.if.exit93031, i32 %1335]
  1338 = mul i32 %1336.ret, i32 -95
  1339 = add i32 %1150, i32 %1338
  1345 = mul i32 %15.load, i32 33
  1352 = add i32 %1345, i32 %783
  1358 = mul i32 %28.load, i32 67
  1359 = add i32 %1352, i32 %1358
  1365 = mul i32 %36.load, i32 30
  1366 = add i32 %1359, i32 %1365
  1373 = mul i32 %44.load, i32 -2
  1374 = add i32 %1366, i32 %1373
  1380 = mul i32 %52.load, i32 65
  1381 = add i32 %1374, i32 %1380
  1387 = mul i32 %59.load, i32 120
  1388 = add i32 %1381, i32 %1387
  1395 = mul i32 %67.load, i32 -13
  1396 = add i32 %1388, i32 %1395
  1402 = mul i32 %74.load, i32 18
  1403 = add i32 %1396, i32 %1402
  1409 = mul i32 %82.load, i32 5
  1410 = add i32 %1403, i32 %1409
  1416 = mul i32 %89.load, i32 104
  1417 = add i32 %1410, i32 %1416
  1424 = mul i32 %97.load, i32 -119
  1425 = add i32 %1417, i32 %1424
  1432 = mul i32 %105.load, i32 -7
  1433 = add i32 %1425, i32 %1432
  1439 = mul i32 %113.load, i32 71
  1440 = add i32 %1433, i32 %1439
  1446 = mul i32 %121.load, i32 107
  1447 = add i32 %1440, i32 %1446
  1453 = mul i32 %129.load, i32 24
  1454 = add i32 %1447, i32 %1453
  1460 = mul i32 %136.load, i32 82
  1461 = add i32 %1454, i32 %1460
  1468 = mul i32 %144.load, i32 -96
  1469 = add i32 %1461, i32 %1468
  1476 = mul i32 %151.load, i32 -104
  1477 = add i32 %1469, i32 %1476
  1484 = mul i32 %158.load, i32 -121
  1485 = add i32 %1477, i32 %1484
  1492 = add i32 %1485, i32 %547
  1498 = mul i32 %172.load, i32 97
  1499 = add i32 %1492, i32 %1498
  1505 = mul i32 %179.load, i32 83
  1506 = add i32 %1499, i32 %1505
  1512 = mul i32 %187.load, i32 46
  1513 = add i32 %1506, i32 %1512
  1520 = mul i32 %194.load, i32 -84
  1521 = add i32 %1513, i32 %1520
  33036 = icmp sgt i32 %1521, i32 127
  br i1 %33036, bb %relu_reg.then3038, bb %relu_reg.if.exit3040
entry11.split.split.split.split.split.split.split.split:
  1522.ret = phi [bb %relu_reg.then3038, i32 127, bb %relu_reg.then83043, i32 0, bb %relu_reg.if.exit93045, i32 %1521]
  1524 = mul i32 %1522.ret, i32 -50
  1525 = add i32 %1339, i32 %1524
  1532 = mul i32 %15.load, i32 -29
  1538 = mul i32 %21.load, i32 7
  1539 = add i32 %1532, i32 %1538
  1547 = add i32 %1539, i32 %414
  1553 = mul i32 %36.load, i32 38
  1554 = add i32 %1547, i32 %1553
  1561 = mul i32 %44.load, i32 -90
  1562 = add i32 %1554, i32 %1561
  1570 = add i32 %1562, i32 %1003
  1577 = mul i32 %59.load, i32 -32
  1578 = add i32 %1570, i32 %1577
  1584 = mul i32 %67.load, i32 37
  1585 = add i32 %1578, i32 %1584
  1591 = mul i32 %74.load, i32 36
  1592 = add i32 %1585, i32 %1591
  1600 = add i32 %1592, i32 %1033
  1607 = mul i32 %89.load, i32 -125
  1608 = add i32 %1600, i32 %1607
  1615 = mul i32 %97.load, i32 -46
  1616 = add i32 %1608, i32 %1615
  1623 = mul i32 %105.load, i32 -70
  1624 = add i32 %1616, i32 %1623
  1630 = mul i32 %113.load, i32 37
  1631 = add i32 %1624, i32 %1630
  1638 = mul i32 %121.load, i32 -73
  1639 = add i32 %1631, i32 %1638
  1646 = mul i32 %129.load, i32 -34
  1647 = add i32 %1639, i32 %1646
  1654 = mul i32 %136.load, i32 -87
  1655 = add i32 %1647, i32 %1654
  1662 = mul i32 %144.load, i32 -75
  1663 = add i32 %1655, i32 %1662
  1669 = mul i32 %151.load, i32 71
  1670 = add i32 %1663, i32 %1669
  1677 = mul i32 %158.load, i32 -77
  1678 = add i32 %1670, i32 %1677
  1684 = mul i32 %165.load, i32 53
  1685 = add i32 %1678, i32 %1684
  1691 = mul i32 %172.load, i32 37
  1692 = add i32 %1685, i32 %1691
  1699 = mul i32 %179.load, i32 -103
  1700 = add i32 %1692, i32 %1699
  1707 = mul i32 %187.load, i32 -13
  1708 = add i32 %1700, i32 %1707
  1715 = mul i32 %194.load, i32 -114
  1716 = add i32 %1708, i32 %1715
  33050 = icmp sgt i32 %1716, i32 127
  br i1 %33050, bb %relu_reg.then3052, bb %relu_reg.if.exit3054
entry11.split.split.split.split.split.split.split.split.split:
  1717.ret = phi [bb %relu_reg.then3052, i32 127, bb %relu_reg.then83057, i32 0, bb %relu_reg.if.exit93059, i32 %1716]
  1719 = mul i32 %1717.ret, i32 -23
  1720 = add i32 %1525, i32 %1719
  1726 = mul i32 %15.load, i32 67
  1732 = mul i32 %21.load, i32 42
  1733 = add i32 %1726, i32 %1732
  1739 = mul i32 %28.load, i32 41
  1740 = add i32 %1733, i32 %1739
  1747 = mul i32 %36.load, i32 -123
  1748 = add i32 %1740, i32 %1747
  1755 = mul i32 %44.load, i32 -92
  1756 = add i32 %1748, i32 %1755
  1762 = mul i32 %52.load, i32 10
  1763 = add i32 %1756, i32 %1762
  1770 = mul i32 %59.load, i32 -77
  1771 = add i32 %1763, i32 %1770
  1777 = mul i32 %67.load, i32 75
  1778 = add i32 %1771, i32 %1777
  1784 = mul i32 %74.load, i32 96
  1785 = add i32 %1778, i32 %1784
  1792 = mul i32 %82.load, i32 -51
  1793 = add i32 %1785, i32 %1792
  1799 = mul i32 %89.load, i32 109
  1800 = add i32 %1793, i32 %1799
  1807 = mul i32 %97.load, i32 -74
  1808 = add i32 %1800, i32 %1807
  1816 = add i32 %1808, i32 %1432
  1823 = mul i32 %113.load, i32 -122
  1824 = add i32 %1816, i32 %1823
  1830 = mul i32 %121.load, i32 67
  1831 = add i32 %1824, i32 %1830
  1837 = mul i32 %129.load, i32 47
  1838 = add i32 %1831, i32 %1837
  1844 = mul i32 %136.load, i32 22
  1845 = add i32 %1838, i32 %1844
  1852 = mul i32 %144.load, i32 -68
  1853 = add i32 %1845, i32 %1852
  1859 = mul i32 %151.load, i32 38
  1860 = add i32 %1853, i32 %1859
  1866 = mul i32 %158.load, i32 29
  1867 = add i32 %1860, i32 %1866
  1873 = mul i32 %165.load, i32 115
  1874 = add i32 %1867, i32 %1873
  1881 = mul i32 %172.load, i32 -121
  1882 = add i32 %1874, i32 %1881
  1888 = mul i32 %179.load, i32 36
  1889 = add i32 %1882, i32 %1888
  1896 = mul i32 %187.load, i32 -49
  1897 = add i32 %1889, i32 %1896
  1903 = mul i32 %194.load, i32 85
  1904 = add i32 %1897, i32 %1903
  33064 = icmp sgt i32 %1904, i32 127
  br i1 %33064, bb %relu_reg.then3066, bb %relu_reg.if.exit3068
entry11.split.split.split.split.split.split.split.split.split.split:
  1905.ret = phi [bb %relu_reg.then3066, i32 127, bb %relu_reg.then83071, i32 0, bb %relu_reg.if.exit93073, i32 %1904]
  1906 = mul i32 %1905.ret, i32 46
  1907 = add i32 %1720, i32 %1906
  1908 = icmp sgt i32 %1907, i32 0
  br i1 %1908, bb %then1909, bb %if.exit1910
then1909:
  ret i32 1
if.exit1910:
  ret i32 0
relu_reg.then:
  br bb %entry11.split
relu_reg.if.exit:
  72943 = icmp slt i32 %197, i32 0
  br i1 %72943, bb %relu_reg.then8, bb %relu_reg.if.exit9
relu_reg.then8:
  br bb %entry11.split
relu_reg.if.exit9:
  br bb %entry11.split
relu_reg.then2954:
  br bb %entry11.split.split
relu_reg.if.exit2956:
  72957 = icmp slt i32 %391, i32 0
  br i1 %72957, bb %relu_reg.then82959, bb %relu_reg.if.exit92961
relu_reg.then82959:
  br bb %entry11.split.split
relu_reg.if.exit92961:
  br bb %entry11.split.split
relu_reg.then2968:
  br bb %entry11.split.split.split
relu_reg.if.exit2970:
  72971 = icmp slt i32 %578, i32 0
  br i1 %72971, bb %relu_reg.then82973, bb %relu_reg.if.exit92975
relu_reg.then82973:
  br bb %entry11.split.split.split
relu_reg.if.exit92975:
  br bb %entry11.split.split.split
relu_reg.then2982:
  br bb %entry11.split.split.split.split
relu_reg.if.exit2984:
  72985 = icmp slt i32 %767, i32 0
  br i1 %72985, bb %relu_reg.then82987, bb %relu_reg.if.exit92989
relu_reg.then82987:
  br bb %entry11.split.split.split.split
relu_reg.if.exit92989:
  br bb %entry11.split.split.split.split
relu_reg.then2996:
  br bb %entry11.split.split.split.split.split
relu_reg.if.exit2998:
  72999 = icmp slt i32 %956, i32 0
  br i1 %72999, bb %relu_reg.then83001, bb %relu_reg.if.exit93003
relu_reg.then83001:
  br bb %entry11.split.split.split.split.split
relu_reg.if.exit93003:
  br bb %entry11.split.split.split.split.split
relu_reg.then3010:
  br bb %entry11.split.split.split.split.split.split
relu_reg.if.exit3012:
  73013 = icmp slt i32 %1147, i32 0
  br i1 %73013, bb %relu_reg.then83015, bb %relu_reg.if.exit93017
relu_reg.then83015:
  br bb %entry11.split.split.split.split.split.split
relu_reg.if.exit93017:
  br bb %entry11.split.split.split.split.split.split
relu_reg.then3024:
  br bb %entry11.split.split.split.split.split.split.split
relu_reg.if.exit3026:
  73027 = icmp slt i32 %1335, i32 0
  br i1 %73027, bb %relu_reg.then83029, bb %relu_reg.if.exit93031
relu_reg.then83029:
  br bb %entry11.split.split.split.split.split.split.split
relu_reg.if.exit93031:
  br bb %entry11.split.split.split.split.split.split.split
relu_reg.then3038:
  br bb %entry11.split.split.split.split.split.split.split.split
relu_reg.if.exit3040:
  73041 = icmp slt i32 %1521, i32 0
  br i1 %73041, bb %relu_reg.then83043, bb %relu_reg.if.exit93045
relu_reg.then83043:
  br bb %entry11.split.split.split.split.split.split.split.split
relu_reg.if.exit93045:
  br bb %entry11.split.split.split.split.split.split.split.split
relu_reg.then3052:
  br bb %entry11.split.split.split.split.split.split.split.split.split
relu_reg.if.exit3054:
  73055 = icmp slt i32 %1716, i32 0
  br i1 %73055, bb %relu_reg.then83057, bb %relu_reg.if.exit93059
relu_reg.then83057:
  br bb %entry11.split.split.split.split.split.split.split.split.split
relu_reg.if.exit93059:
  br bb %entry11.split.split.split.split.split.split.split.split.split
relu_reg.then3066:
  br bb %entry11.split.split.split.split.split.split.split.split.split.split
relu_reg.if.exit3068:
  73069 = icmp slt i32 %1904, i32 0
  br i1 %73069, bb %relu_reg.then83071, bb %relu_reg.if.exit93073
relu_reg.then83071:
  br bb %entry11.split.split.split.split.split.split.split.split.split.split
relu_reg.if.exit93073:
  br bb %entry11.split.split.split.split.split.split.split.split.split.split
}

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

pure i32 relu_reg(i32 a) {
entry:
  3 = icmp sgt i32 %a, i32 127
  br i1 %3, bb %then, bb %if.exit
then:
  ret i32 127
if.exit:
  7 = icmp slt i32 %a, i32 0
  br i1 %7, bb %then8, bb %if.exit9
then8:
  ret i32 0
if.exit9:
  ret i32 %a
}


