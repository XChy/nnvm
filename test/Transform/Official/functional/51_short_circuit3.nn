global ptr b init with i32 0
global ptr d init with i32 0
global ptr a init with i32 0
i32 set_d(i32 val) {
entry8:
  store i32 %val to ptr @d
  ret i32 %val
}

i32 set_b(i32 val) {
entry4:
  store i32 %val to ptr @b
  ret i32 %val
}

external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry12:
  store i32 2 to ptr @a
  store i32 3 to ptr @b
  store i32 0 to ptr @a
  call void putint(i32 0)
  call void putch(i32 32)
  b.load27 = load i32 from ptr @b
  call void putint(i32 %b.load27)
  call void putch(i32 32)
  store i32 2 to ptr @a
  store i32 3 to ptr @b
  store i32 0 to ptr @a
  call void putint(i32 0)
  call void putch(i32 32)
  b.load44 = load i32 from ptr @b
  call void putint(i32 %b.load44)
  call void putch(i32 10)
  store i32 2 to ptr @d
  47 = icmp sge i32 1, i32 1
  br i1 %47, bb %select.then48, bb %select.exit50
select.then48:
  store i32 3 to ptr @d
  br bb %select.exit50
select.exit50:
  d.load57 = load i32 from ptr @d
  call void putint(i32 %d.load57)
  call void putch(i32 32)
  60 = icmp sle i32 1, i32 1
  br i1 %60, bb %select.exit63, bb %select.else62
select.else62:
  store i32 4 to ptr @d
  br bb %select.exit63
select.exit63:
  d.load71 = load i32 from ptr @d
  call void putint(i32 %d.load71)
  call void putch(i32 10)
  76 = icmp sge i32 16, i32 0
  br i1 %76, bb %then77, bb %if.exit78
then77:
  call void putch(i32 65)
  br bb %if.exit78
if.exit78:
  89 = zext i1 -1 to i32
  90 = icmp ne i32 %89, i32 1
  br i1 %90, bb %then91, bb %if.exit92
then91:
  call void putch(i32 67)
  br bb %if.exit92
if.exit92:
  95 = zext i1 0 to i32
  96 = icmp eq i32 %95, i32 0
  br i1 %96, bb %then97, bb %if.exit98
then97:
  call void putch(i32 68)
  br bb %if.exit98
if.exit98:
  100 = icmp sle i32 102, i32 63
  101 = zext i1 %100 to i32
  102 = icmp eq i32 1, i32 %101
  br i1 %102, bb %then103, bb %if.exit104
then103:
  call void putch(i32 69)
  br bb %if.exit104
if.exit104:
  110 = sub i32 0, i32 %89
  111 = icmp eq i32 -1, i32 %110
  br i1 %111, bb %then112, bb %if.exit113
then112:
  call void putch(i32 70)
  br bb %if.exit113
if.exit113:
  call void putch(i32 10)
  call void putch(i32 67)
  150 = icmp sge i32 0, i32 1
  br i1 %150, bb %select.then151, bb %select.else152
select.then151:
  br bb %select.exit153
select.else152:
  157 = icmp sle i32 1, i32 0
  br bb %select.exit153
select.exit153:
  select154.phi = phi [bb %select.else152, i1 %157, bb %select.then151, i1 -1]
  br i1 %select154.phi, bb %then160, bb %if.exit161
then160:
  call void putch(i32 72)
  br bb %if.exit161
if.exit161:
  165 = icmp sge i32 2, i32 1
  br i1 %165, bb %select.then166, bb %select.else167
select.then166:
  br bb %select.exit168
select.else167:
  br bb %select.exit168
select.exit168:
  select169.phi = phi [bb %select.else167, i1 0, bb %select.then166, i1 -1]
  br i1 %select169.phi, bb %then174, bb %if.exit175
then174:
  call void putch(i32 73)
  br bb %if.exit175
if.exit175:
  182 = icmp eq i32 0, i32 %95
  br i1 %182, bb %select.then183, bb %select.else184
select.then183:
  br bb %select.exit185
select.else184:
  br bb %select.exit185
select.exit185:
  select186.phi = phi [bb %select.else184, i1 0, bb %select.then183, i1 0]
  br i1 %select186.phi, bb %select.then191, bb %select.else192
select.then191:
  br bb %select.exit193
select.else192:
  197 = icmp sge i32 4, i32 4
  br bb %select.exit193
select.exit193:
  select194.phi = phi [bb %select.else192, i1 %197, bb %select.then191, i1 -1]
  br i1 %select194.phi, bb %then200, bb %if.exit201
then200:
  call void putch(i32 74)
  br bb %if.exit201
if.exit201:
  br i1 %182, bb %select.then209, bb %select.else210
select.then209:
  br bb %select.exit211
select.else210:
  br bb %select.exit211
select.exit211:
  select212.phi = phi [bb %select.else210, i1 0, bb %select.then209, i1 -1]
  br i1 %select212.phi, bb %then226, bb %if.exit227
then226:
  call void putch(i32 75)
  br bb %if.exit227
if.exit227:
  call void putch(i32 10)
  ret i32 0
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

i32 set_a(i32 val) {
entry:
  store i32 %val to ptr @a
  ret i32 %val
}


