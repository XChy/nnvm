i32 func6(i32 x, i32 y) {
entry59:
  63 = icmp ne i32 %x, i32 0
  br i1 %63, bb %select.then, bb %select.else
select.then:
  69 = icmp ne i32 %y, i32 0
  br bb %select.exit
select.else:
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 0, bb %select.then, i1 %69]
  br i1 %select.phi, bb %then71, bb %else73
then71:
  ret i32 1
else73:
  ret i32 0
}

i32 func5(i32 x) {
entry55:
  58 = sub i32 0, i32 %x
  ret i32 %58
}

i32 func2(i32 x, i32 y) {
entry17:
  21 = icmp ne i32 %y, i32 0
  br i1 %21, bb %then22, bb %else24
then22:
  27 = srem i32 %x, i32 %y
  28 = call i32 func2(i32 %27, i32 0)
  ret i32 %28
else24:
  ret i32 %x
}

external i32 getint()

i32 func3(i32 x, i32 y) {
entry30:
  34 = icmp eq i32 %y, i32 0
  br i1 %34, bb %then35, bb %else37
then35:
  39 = add i32 %x, i32 1
  ret i32 %39
else37:
  42 = add i32 %x, i32 %y
  43 = call i32 func3(i32 %42, i32 0)
  ret i32 %43
}

external i32 getch()

external void putint(i32 )

i32 func7(i32 x) {
entry74:
  77 = icmp ne i32 %x, i32 0
  78 =  i1 %77, i1 1
  79 = zext i1 %78 to i32
  80 = icmp ne i32 %79, i32 0
  br i1 %80, bb %then81, bb %else83
then81:
  ret i32 1
else83:
  ret i32 0
}

i32 func4(i32 x, i32 y, i32 z) {
entry44:
  49 = icmp ne i32 %x, i32 0
  br i1 %49, bb %then50, bb %else52
then50:
  ret i32 %y
else52:
  ret i32 %z
}

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry84:
  %arr = stack 40
  86 = call i32 getint()
  88 = call i32 getint()
  90 = call i32 getint()
  92 = call i32 getint()
  br bb %while.cond
while.cond:
  i.phi = phi [bb %entry84, i32 0, bb %while.body, i32 %106]
  99 = icmp slt i32 %i.phi, i32 10
  100 = icmp ne i1 %99, i1 0
  br i1 %100, bb %while.body, bb %while.exit
while.body:
  102 = mul i32 %i.phi, i32 4
  103 = ptradd ptr %arr, i32 %102
  104 = call i32 getint()
  store i32 %104 to ptr %103
  106 = add i32 %i.phi, i32 1
  br bb %while.cond
while.exit:
  109 = call i32 func7(i32 %86)
  111 = call i32 func5(i32 %88)
  112 = call i32 func6(i32 %109, i32 %111)
  114 = call i32 func2(i32 %112, i32 %90)
  116 = call i32 func3(i32 %114, i32 %92)
  117 = call i32 func5(i32 %116)
  119 = ptradd ptr %arr, i32 0
  119.load = load i32 from ptr %119
  122 = ptradd ptr %arr, i32 4
  122.load = load i32 from ptr %122
  124 = call i32 func5(i32 %122.load)
  126 = ptradd ptr %arr, i32 8
  126.load = load i32 from ptr %126
  129 = ptradd ptr %arr, i32 12
  129.load = load i32 from ptr %129
  131 = call i32 func7(i32 %129.load)
  132 = call i32 func6(i32 %126.load, i32 %131)
  134 = ptradd ptr %arr, i32 16
  134.load = load i32 from ptr %134
  137 = ptradd ptr %arr, i32 20
  137.load = load i32 from ptr %137
  139 = call i32 func7(i32 %137.load)
  140 = call i32 func2(i32 %134.load, i32 %139)
  141 = call i32 func4(i32 %124, i32 %132, i32 %140)
  143 = ptradd ptr %arr, i32 24
  143.load = load i32 from ptr %143
  145 = call i32 func3(i32 %141, i32 %143.load)
  147 = ptradd ptr %arr, i32 28
  147.load = load i32 from ptr %147
  149 = call i32 func2(i32 %145, i32 %147.load)
  151 = ptradd ptr %arr, i32 32
  151.load = load i32 from ptr %151
  154 = ptradd ptr %arr, i32 36
  154.load = load i32 from ptr %154
  156 = call i32 func7(i32 %154.load)
  157 = call i32 func3(i32 %151.load, i32 %156)
  159 = call i32 func1(i32 %149, i32 %157, i32 %86)
  160 = call i32 func4(i32 %117, i32 %119.load, i32 %159)
  163 = call i32 func7(i32 %90)
  165 = call i32 func3(i32 %163, i32 %92)
  166 = call i32 func2(i32 %88, i32 %165)
  167 = call i32 func3(i32 %160, i32 %166)
  169 = ptradd ptr %arr, i32 0
  169.load = load i32 from ptr %169
  172 = ptradd ptr %arr, i32 4
  172.load = load i32 from ptr %172
  174 = call i32 func1(i32 %167, i32 %169.load, i32 %172.load)
  176 = ptradd ptr %arr, i32 8
  176.load = load i32 from ptr %176
  178 = call i32 func2(i32 %174, i32 %176.load)
  180 = ptradd ptr %arr, i32 12
  180.load = load i32 from ptr %180
  183 = ptradd ptr %arr, i32 16
  183.load = load i32 from ptr %183
  186 = ptradd ptr %arr, i32 20
  186.load = load i32 from ptr %186
  188 = call i32 func5(i32 %186.load)
  189 = call i32 func3(i32 %183.load, i32 %188)
  191 = ptradd ptr %arr, i32 24
  191.load = load i32 from ptr %191
  193 = call i32 func5(i32 %191.load)
  194 = call i32 func2(i32 %189, i32 %193)
  196 = ptradd ptr %arr, i32 28
  196.load = load i32 from ptr %196
  199 = ptradd ptr %arr, i32 32
  199.load = load i32 from ptr %199
  201 = call i32 func7(i32 %199.load)
  202 = call i32 func1(i32 %194, i32 %196.load, i32 %201)
  204 = ptradd ptr %arr, i32 36
  204.load = load i32 from ptr %204
  206 = call i32 func5(i32 %204.load)
  207 = call i32 func2(i32 %202, i32 %206)
  209 = call i32 func3(i32 %207, i32 %86)
  210 = call i32 func1(i32 %178, i32 %180.load, i32 %209)
  ret i32 %210
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

i32 func1(i32 x, i32 y, i32 z) {
entry:
  5 = icmp eq i32 %z, i32 0
  br i1 %5, bb %then, bb %else
then:
  11 = mul i32 %x, i32 %y
  ret i32 %11
else:
  15 = sub i32 %y, i32 %z
  16 = call i32 func1(i32 %x, i32 %15, i32 0)
  ret i32 %16
}

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


