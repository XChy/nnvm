global ptr rev init with 100 x i32 zeros
global ptr cap init with 100 x i32 zeros
global ptr used init with 10 x i32 zeros
global ptr to init with 100 x i32 zeros
global ptr size init with 10 x i32 zeros
immutable global ptr INF init with i32 1879048192
i32 max_flow(i32 s, i32 t) {
entry246:
  br bb %while.cond250
while.cond250:
  flow.phi = phi [bb %entry246, i32 0, bb %if.exit263, i32 %267]
  br bb %my_memset.while.cond
then262:
  ret i32 %flow.phi
if.exit263:
  267 = add i32 %flow.phi, i32 %259
  br bb %while.cond250
my_memset.while.cond:
  i.phi408 = phi [bb %while.cond250, i32 0, bb %my_memset.while.body, i32 %16415]
  9409 = icmp slt i32 %i.phi408, i32 10
  br i1 %9409, bb %my_memset.while.body, bb %my_memset.while.exit
my_memset.while.body:
  341412 = shl i32 %i.phi408, i32 2
  13413 = ptradd ptr @used, i32 %341412
  store i32 0 to ptr %13413
  16415 = add i32 %i.phi408, i32 1
  br bb %my_memset.while.cond
my_memset.while.exit:
  259 = call i32 dfs(i32 %s, i32 %t, i32 1879048192)
  261 = icmp eq i32 %259, i32 0
  br i1 %261, bb %then262, bb %if.exit263
}

i32 dfs(i32 s, i32 t, i32 f) {
entry102:
  108 = icmp eq i32 %s, i32 %t
  br i1 %108, bb %then, bb %if.exit
then:
  ret i32 %f
if.exit:
  307 = shl i32 %s, i32 2
  114 = ptradd ptr @used, i32 %307
  store i32 1 to ptr %114
  122 = ptradd ptr @size, i32 %307
  127 = mul i32 %s, i32 40
  128 = ptradd ptr @to, i32 %127
  143 = ptradd ptr @cap, i32 %127
  br bb %while.cond116
while.cond116:
  d.phi = phi [bb %if.exit, i32 ub, bb %if.exit188, i32 %184, bb %then149, i32 %d.phi, bb %then137, i32 %d.phi]
  min_f.phi300 = phi [bb %if.exit, i32 ub, bb %if.exit188, i32 %min_f.phi, bb %then149, i32 %min_f.phi300, bb %then137, i32 %min_f.phi300]
  i115.phi = phi [bb %if.exit, i32 0, bb %if.exit188, i32 %245, bb %then149, i32 %152, bb %then137, i32 %140]
  122.load = load i32 from ptr %122
  124 = icmp slt i32 %i115.phi, i32 %122.load
  br i1 %124, bb %while.body117, bb %while.exit118
while.body117:
  309 = shl i32 %i115.phi, i32 2
  131 = ptradd ptr %128, i32 %309
  131.load = load i32 from ptr %131
  310 = shl i32 %131.load, i32 2
  134 = ptradd ptr @used, i32 %310
  134.load = load i32 from ptr %134
  136 = icmp ne i32 %134.load, i32 0
  br i1 %136, bb %then137, bb %if.exit138
while.exit118:
  ret i32 0
then137:
  140 = add i32 %i115.phi, i32 1
  br bb %while.cond116
if.exit138:
  146 = ptradd ptr %143, i32 %309
  146.load = load i32 from ptr %146
  148 = icmp sle i32 %146.load, i32 0
  br i1 %148, bb %then149, bb %if.exit150
then149:
  152 = add i32 %i115.phi, i32 1
  br bb %while.cond116
if.exit150:
  162 = icmp slt i32 %f, i32 %146.load
  br i1 %162, bb %then163, bb %else
then163:
  br bb %if.exit164
if.exit164:
  min_f.phi = phi [bb %else, i32 %146.load, bb %then163, i32 %f]
  180.load = load i32 from ptr %131
  184 = call i32 dfs(i32 %180.load, i32 %t, i32 %min_f.phi)
  186 = icmp sgt i32 %184, i32 0
  br i1 %186, bb %then187, bb %if.exit188
else:
  br bb %if.exit164
then187:
  200.load = load i32 from ptr %146
  203 = sub i32 %200.load, i32 %184
  store i32 %203 to ptr %146
  209.load = load i32 from ptr %131
  211 = mul i32 %209.load, i32 40
  212 = ptradd ptr @cap, i32 %211
  215 = ptradd ptr @rev, i32 %127
  218 = ptradd ptr %215, i32 %309
  218.load = load i32 from ptr %218
  319 = shl i32 %218.load, i32 2
  221 = ptradd ptr %212, i32 %319
  239.load = load i32 from ptr %221
  242 = add i32 %239.load, i32 %184
  store i32 %242 to ptr %221
  ret i32 %184
if.exit188:
  245 = add i32 %i115.phi, i32 1
  br bb %while.cond116
}

void add_node(i32 u, i32 v, i32 c) {
entry17:
  22 = mul i32 %u, i32 40
  23 = ptradd ptr @to, i32 %22
  323 = shl i32 %u, i32 2
  26 = ptradd ptr @size, i32 %323
  26.load = load i32 from ptr %26
  324 = shl i32 %26.load, i32 2
  29 = ptradd ptr %23, i32 %324
  store i32 %v to ptr %29
  33 = ptradd ptr @cap, i32 %22
  39 = ptradd ptr %33, i32 %324
  store i32 %c to ptr %39
  43 = ptradd ptr @rev, i32 %22
  49 = ptradd ptr %43, i32 %324
  329 = shl i32 %v, i32 2
  52 = ptradd ptr @size, i32 %329
  52.load = load i32 from ptr %52
  store i32 %52.load to ptr %49
  55 = mul i32 %v, i32 40
  56 = ptradd ptr @to, i32 %55
  331 = shl i32 %52.load, i32 2
  62 = ptradd ptr %56, i32 %331
  store i32 %u to ptr %62
  66 = ptradd ptr @cap, i32 %55
  72 = ptradd ptr %66, i32 %331
  store i32 0 to ptr %72
  75 = ptradd ptr @rev, i32 %55
  81 = ptradd ptr %75, i32 %331
  store i32 %26.load to ptr %81
  93 = add i32 %26.load, i32 1
  store i32 %93 to ptr %26
  99.load = load i32 from ptr %52
  101 = add i32 %99.load, i32 1
  store i32 %101 to ptr %52
  ret 
}

external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry268:
  271 = call i32 getint()
  272 = call i32 getint()
  br bb %my_memset.while.cond422
while.cond274:
  E.phi = phi [bb %my_memset.while.exit432, i32 %272, bb %while.body275, i32 %291]
  278 = icmp sgt i32 %E.phi, i32 0
  br i1 %278, bb %while.body275, bb %while.exit276
while.body275:
  282 = call i32 getint()
  283 = call i32 getint()
  285 = call i32 getint()
  22359 = mul i32 %282, i32 40
  23360 = ptradd ptr @to, i32 %22359
  323361 = shl i32 %282, i32 2
  26362 = ptradd ptr @size, i32 %323361
  26.load363 = load i32 from ptr %26362
  324364 = shl i32 %26.load363, i32 2
  29365 = ptradd ptr %23360, i32 %324364
  store i32 %283 to ptr %29365
  33367 = ptradd ptr @cap, i32 %22359
  39370 = ptradd ptr %33367, i32 %324364
  store i32 %285 to ptr %39370
  43372 = ptradd ptr @rev, i32 %22359
  49375 = ptradd ptr %43372, i32 %324364
  329376 = shl i32 %283, i32 2
  52377 = ptradd ptr @size, i32 %329376
  52.load378 = load i32 from ptr %52377
  store i32 %52.load378 to ptr %49375
  55380 = mul i32 %283, i32 40
  56381 = ptradd ptr @to, i32 %55380
  331383 = shl i32 %52.load378, i32 2
  62384 = ptradd ptr %56381, i32 %331383
  store i32 %282 to ptr %62384
  66386 = ptradd ptr @cap, i32 %55380
  72389 = ptradd ptr %66386, i32 %331383
  store i32 0 to ptr %72389
  75391 = ptradd ptr @rev, i32 %55380
  81394 = ptradd ptr %75391, i32 %331383
  store i32 %26.load363 to ptr %81394
  93398 = add i32 %26.load363, i32 1
  store i32 %93398 to ptr %26362
  99.load400 = load i32 from ptr %52377
  101401 = add i32 %99.load400, i32 1
  store i32 %101401 to ptr %52377
  291 = sub i32 %E.phi, i32 1
  br bb %while.cond274
while.exit276:
  br bb %max_flow.while.cond250
max_flow.while.cond250:
  flow.phi346 = phi [bb %while.exit276, i32 0, bb %max_flow.if.exit263, i32 %267354]
  br bb %my_memset.while.cond437
max_flow.then262:
  call void putint(i32 %flow.phi346)
  call void putch(i32 10)
  ret i32 0
max_flow.if.exit263:
  267354 = add i32 %flow.phi346, i32 %259348
  br bb %max_flow.while.cond250
my_memset.while.cond422:
  i.phi423 = phi [bb %entry268, i32 0, bb %my_memset.while.body426, i32 %16430]
  9424 = icmp slt i32 %i.phi423, i32 10
  br i1 %9424, bb %my_memset.while.body426, bb %my_memset.while.exit432
my_memset.while.body426:
  341427 = shl i32 %i.phi423, i32 2
  13428 = ptradd ptr @size, i32 %341427
  store i32 0 to ptr %13428
  16430 = add i32 %i.phi423, i32 1
  br bb %my_memset.while.cond422
my_memset.while.exit432:
  br bb %while.cond274
my_memset.while.cond437:
  i.phi438 = phi [bb %max_flow.while.cond250, i32 0, bb %my_memset.while.body441, i32 %16445]
  9439 = icmp slt i32 %i.phi438, i32 10
  br i1 %9439, bb %my_memset.while.body441, bb %my_memset.while.exit447
my_memset.while.body441:
  341442 = shl i32 %i.phi438, i32 2
  13443 = ptradd ptr @used, i32 %341442
  store i32 0 to ptr %13443
  16445 = add i32 %i.phi438, i32 1
  br bb %my_memset.while.cond437
my_memset.while.exit447:
  259348 = call i32 dfs(i32 1, i32 %271, i32 1879048192)
  261349 = icmp eq i32 %259348, i32 0
  br i1 %261349, bb %max_flow.then262, bb %max_flow.if.exit263
}

external float getfloat()

external void putfloat(float )

void my_memset(ptr arr, i32 val, i32 n) {
entry:
  br bb %while.cond
while.cond:
  i.phi = phi [bb %entry, i32 0, bb %while.body, i32 %16]
  9 = icmp slt i32 %i.phi, i32 %n
  br i1 %9, bb %while.body, bb %while.exit
while.body:
  341 = shl i32 %i.phi, i32 2
  13 = ptradd ptr %arr, i32 %341
  store i32 %val to ptr %13
  16 = add i32 %i.phi, i32 1
  br bb %while.cond
while.exit:
  ret 
}

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


