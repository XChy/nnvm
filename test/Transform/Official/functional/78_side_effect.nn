global ptr b init with i32 1
global ptr a init with i32 -1
external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getfarray(ptr )

i32 main() {
entry9:  pred()
  15151 = icmp sge i32 5, i32 0
  br i1 %15151, bb %while.body_preheader, bb %while.exit
while.body_preheader:  pred(entry9)
  br bb %while.body
while.body:  pred(if.exit62, while.body_preheader)
  k.phi153 = phi [bb %if.exit62, i32 %92, bb %while.body_preheader, i32 5]
  select52.phi90152 = phi [bb %if.exit62, i1 %select52.phi89, bb %while.body_preheader, i1 0]
  a.load95 = load i32 from ptr @a
  596 = add i32 %a.load95, i32 1
  store i32 %596 to ptr @a
  18 = icmp ne i32 %596, i32 0
  br i1 %18, bb %select.then, bb %select.else
while.exit:  pred(entry9, if.exit62)
  a.load74 = load i32 from ptr @a
  call void putint(i32 %a.load74)
  call void putch(i32 32)
  b.load77 = load i32 from ptr @b
  call void putint(i32 %b.load77)
  call void putch(i32 10)
  a.load80 = load i32 from ptr @a
  ret i32 %a.load80
select.then:  pred(while.body)
  a.load102 = load i32 from ptr @a
  5103 = add i32 %a.load102, i32 1
  store i32 %5103 to ptr @a
  24 = icmp ne i32 %5103, i32 0
  br bb %select.exit
select.else:  pred(while.body)
  br bb %select.exit
select.exit:  pred(select.then, select.else)
  select.phi = phi [bb %select.else, i1 0, bb %select.then, i1 %24]
  br i1 %select.phi, bb %select.then26, bb %select.else27
select.then26:  pred(select.exit)
  a.load109 = load i32 from ptr @a
  5110 = add i32 %a.load109, i32 1
  store i32 %5110 to ptr @a
  31 = icmp ne i32 %5110, i32 0
  br bb %select.exit28
select.else27:  pred(select.exit)
  br bb %select.exit28
select.exit28:  pred(select.then26, select.else27)
  select29.phi = phi [bb %select.else27, i1 0, bb %select.then26, i1 %31]
  br i1 %select29.phi, bb %then, bb %if.exit
then:  pred(select.exit28)
  a.load35 = load i32 from ptr @a
  call void putint(i32 %a.load35)
  call void putch(i32 32)
  b.load38 = load i32 from ptr @b
  call void putint(i32 %b.load38)
  call void putch(i32 10)
  br bb %if.exit
if.exit:  pred(select.exit28, then)
  a.load116 = load i32 from ptr @a
  5117 = add i32 %a.load116, i32 1
  store i32 %5117 to ptr @a
  42 = icmp slt i32 %5117, i32 14
  br i1 %42, bb %select.then43, bb %select.else44
select.then43:  pred(if.exit)
  br bb %select.exit45
select.else44:  pred(if.exit)
  a.load123 = load i32 from ptr @a
  5124 = add i32 %a.load123, i32 1
  store i32 %5124 to ptr @a
  48 = icmp ne i32 %5124, i32 0
  br i1 %48, bb %select.then49, bb %select.else50
select.exit45:  pred(select.then43, select.exit51)
  select52.phi89 = phi [bb %select.exit51, i1 %select52.phi, bb %select.then43, i1 %select52.phi90152]
  select46.phi = phi [bb %select.exit51, i1 %select52.phi, bb %select.then43, i1 -1]
  br i1 %select46.phi, bb %then61, bb %else
select.then49:  pred(select.else44)
  a.load130 = load i32 from ptr @a
  5131 = add i32 %a.load130, i32 1
  store i32 %5131 to ptr @a
  159 = add i32 %a.load130, i32 2
  store i32 %159 to ptr @a
  55 = sub i32 %5131, i32 %159
  56 = add i32 %55, i32 1
  57 = icmp ne i32 %56, i32 0
  br bb %select.exit51
select.else50:  pred(select.else44)
  br bb %select.exit51
select.exit51:  pred(select.then49, select.else50)
  select52.phi = phi [bb %select.else50, i1 0, bb %select.then49, i1 %57]
  br bb %select.exit45
then61:  pred(select.exit45)
  a.load64 = load i32 from ptr @a
  call void putint(i32 %a.load64)
  call void putch(i32 10)
  b.load68 = load i32 from ptr @b
  150 = shl i32 %b.load68, i32 1
  store i32 %150 to ptr @b
  br bb %if.exit62
if.exit62:  pred(then61, else)
  92 = add i32 %k.phi153, i32 -1
  15 = icmp sge i32 %92, i32 0
  br i1 %15, bb %while.body, bb %while.exit
else:  pred(select.exit45)
  a.load144 = load i32 from ptr @a
  5145 = add i32 %a.load144, i32 1
  store i32 %5145 to ptr @a
  br bb %if.exit62
}

external float getfloat()

external void putfloat(float )

external i32 getarray(ptr )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


