global ptr n init with i32 0
external i32 getint()

external i32 getch()

external void putint(i32 )

i32 QuickSort(ptr arr, i32 low, i32 high) {
entry:  pred()
  5 = icmp slt i32 %low, i32 %high
  br i1 %5, bb %then, bb %if.exit
then:  pred(entry)
  173 = shl i32 %low, i32 2
  15 = ptradd ptr %arr, i32 %173
  15.load = load i32 from ptr %15
  22182 = icmp slt i32 %low, i32 %high
  br i1 %22182, bb %while.body, bb %while.exit
if.exit:  pred(entry, while.exit)
  ret i32 0
while.cond:  pred(if.exit83)
  j.phi158 = phi [bb %if.exit83, i32 %j.phi]
  i.phi154 = phi [bb %if.exit83, i32 %i.phi]
  22 = icmp slt i32 %i.phi154, i32 %j.phi158
  br i1 %22, bb %while.body, bb %while.exit
while.body:  pred(while.cond, then)
  i.phi154185 = phi [bb %then, i32 %low, bb %while.cond, i32 %i.phi154]
  j.phi158184 = phi [bb %then, i32 %high, bb %while.cond, i32 %j.phi158]
  br bb %while.cond24
while.exit:  pred(while.cond, then)
  low = phi [bb %while.cond, i32 %i.phi154, bb %then, i32 %low]
  174 = shl i32 %low, i32 2
  95 = ptradd ptr %arr, i32 %174
  store i32 %15.load to ptr %95
  99 = sub i32 %low, i32 1
  102 = call i32 QuickSort(ptr %arr, i32 %low, i32 %99)
  104 = add i32 %low, i32 1
  107 = call i32 QuickSort(ptr %arr, i32 %104, i32 %high)
  br bb %if.exit
while.cond24:  pred(while.body, while.body25)
  j.phi160 = phi [bb %while.body, i32 %j.phi158184, bb %while.body25, i32 %44]
  29 = icmp slt i32 %i.phi154185, i32 %j.phi160
  br i1 %29, bb %select.then, bb %select.else
while.body25:  pred(select.exit)
  44 = sub i32 %j.phi160, i32 1
  br bb %while.cond24
while.exit26:  pred(select.exit)
  br i1 %29, bb %then48, bb %if.exit49
select.then:  pred(while.cond24)
  175 = shl i32 %j.phi160, i32 2
  36 = ptradd ptr %arr, i32 %175
  36.load = load i32 from ptr %36
  39 = sub i32 %15.load, i32 1
  40 = icmp sgt i32 %36.load, i32 %39
  br bb %select.exit
select.else:  pred(while.cond24)
  br bb %select.exit
select.exit:  pred(select.then, select.else)
  select.phi = phi [bb %select.else, i1 0, bb %select.then, i1 %40]
  br i1 %select.phi, bb %while.body25, bb %while.exit26
then48:  pred(while.exit26)
  176 = shl i32 %i.phi154185, i32 2
  52 = ptradd ptr %arr, i32 %176
  177 = shl i32 %j.phi160, i32 2
  55 = ptradd ptr %arr, i32 %177
  55.load = load i32 from ptr %55
  store i32 %55.load to ptr %52
  58 = add i32 %i.phi154185, i32 1
  br bb %if.exit49
if.exit49:  pred(while.exit26, then48)
  i.phi156 = phi [bb %while.exit26, i32 %i.phi154185, bb %then48, i32 %58]
  br bb %while.cond59
while.cond59:  pred(if.exit49, while.body60)
  i.phi = phi [bb %if.exit49, i32 %i.phi156, bb %while.body60, i32 %78]
  64 = icmp slt i32 %i.phi, i32 %j.phi160
  br i1 %64, bb %select.then65, bb %select.else66
while.body60:  pred(select.exit67)
  78 = add i32 %i.phi, i32 1
  br bb %while.cond59
while.exit61:  pred(select.exit67)
  br i1 %64, bb %then82, bb %if.exit83
select.then65:  pred(while.cond59)
  178 = shl i32 %i.phi, i32 2
  71 = ptradd ptr %arr, i32 %178
  71.load = load i32 from ptr %71
  74 = icmp slt i32 %71.load, i32 %15.load
  br bb %select.exit67
select.else66:  pred(while.cond59)
  br bb %select.exit67
select.exit67:  pred(select.then65, select.else66)
  select68.phi = phi [bb %select.else66, i1 0, bb %select.then65, i1 %74]
  br i1 %select68.phi, bb %while.body60, bb %while.exit61
then82:  pred(while.exit61)
  179 = shl i32 %j.phi160, i32 2
  86 = ptradd ptr %arr, i32 %179
  180 = shl i32 %i.phi, i32 2
  89 = ptradd ptr %arr, i32 %180
  89.load = load i32 from ptr %89
  store i32 %89.load to ptr %86
  92 = sub i32 %j.phi160, i32 1
  br bb %if.exit83
if.exit83:  pred(while.exit61, then82)
  j.phi = phi [bb %while.exit61, i32 %j.phi160, bb %then82, i32 %92]
  br bb %while.cond
}

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry108:  pred()
  %a = stack 40
  store i32 10 to ptr @n
  store i32 4 to ptr %a
  113 = ptradd ptr %a, i32 4
  store i32 3 to ptr %113
  115 = ptradd ptr %a, i32 8
  store i32 9 to ptr %115
  117 = ptradd ptr %a, i32 12
  store i32 2 to ptr %117
  119 = ptradd ptr %a, i32 16
  store i32 0 to ptr %119
  121 = ptradd ptr %a, i32 20
  store i32 1 to ptr %121
  123 = ptradd ptr %a, i32 24
  store i32 6 to ptr %123
  125 = ptradd ptr %a, i32 28
  store i32 5 to ptr %125
  127 = ptradd ptr %a, i32 32
  store i32 7 to ptr %127
  129 = ptradd ptr %a, i32 36
  store i32 8 to ptr %129
  134 = call i32 QuickSort(ptr %a, i32 0, i32 9)
  n.load186 = load i32 from ptr @n
  140187 = icmp slt i32 %134, i32 %n.load186
  br i1 %140187, bb %while.body136, bb %while.exit137
while.cond135:  pred(while.body136)
  i130.phi = phi [bb %while.body136, i32 %152]
  n.load = load i32 from ptr @n
  140 = icmp slt i32 %i130.phi, i32 %n.load
  br i1 %140, bb %while.body136, bb %while.exit137
while.body136:  pred(while.cond135, entry108)
  i130.phi188 = phi [bb %entry108, i32 %134, bb %while.cond135, i32 %i130.phi]
  181 = shl i32 %i130.phi188, i32 2
  145 = ptradd ptr %a, i32 %181
  145.load = load i32 from ptr %145
  call void putint(i32 %145.load)
  call void putch(i32 10)
  152 = add i32 %i130.phi188, i32 1
  br bb %while.cond135
while.exit137:  pred(while.cond135, entry108)
  ret i32 0
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


