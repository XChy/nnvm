global ptr n init with i32 0
external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 counting_sort(ptr ini_arr, ptr sorted_arr, i32 n) {
entry:
  %count_arr = stack 40
  br bb %while.cond
while.cond:
  k.phi148 = phi [bb %entry, i32 0, bb %while.body, i32 %16]
  10 = icmp slt i32 %k.phi148, i32 10
  11 = icmp ne i1 %10, i1 0
  br i1 %11, bb %while.body, bb %while.exit
while.body:
  13 = mul i32 %k.phi148, i32 4
  14 = ptradd ptr %count_arr, i32 %13
  store i32 0 to ptr %14
  16 = add i32 %k.phi148, i32 1
  br bb %while.cond
while.exit:
  br bb %while.cond17
while.cond17:
  i.phi = phi [bb %while.exit, i32 0, bb %while.body18, i32 %39]
  22 = icmp slt i32 %i.phi, i32 %n
  23 = icmp ne i1 %22, i1 0
  br i1 %23, bb %while.body18, bb %while.exit19
while.body18:
  25 = mul i32 %i.phi, i32 4
  26 = ptradd ptr %ini_arr, i32 %25
  26.load = load i32 from ptr %26
  28 = mul i32 %26.load, i32 4
  29 = ptradd ptr %count_arr, i32 %28
  31 = mul i32 %i.phi, i32 4
  32 = ptradd ptr %ini_arr, i32 %31
  32.load = load i32 from ptr %32
  34 = mul i32 %32.load, i32 4
  35 = ptradd ptr %count_arr, i32 %34
  35.load = load i32 from ptr %35
  37 = add i32 %35.load, i32 1
  store i32 %37 to ptr %29
  39 = add i32 %i.phi, i32 1
  br bb %while.cond17
while.exit19:
  br bb %while.cond40
while.cond40:
  k.phi = phi [bb %while.exit19, i32 1, bb %while.body41, i32 %60]
  44 = icmp slt i32 %k.phi, i32 10
  45 = icmp ne i1 %44, i1 0
  br i1 %45, bb %while.body41, bb %while.exit42
while.body41:
  47 = mul i32 %k.phi, i32 4
  48 = ptradd ptr %count_arr, i32 %47
  50 = mul i32 %k.phi, i32 4
  51 = ptradd ptr %count_arr, i32 %50
  51.load = load i32 from ptr %51
  54 = sub i32 %k.phi, i32 1
  55 = mul i32 %54, i32 4
  56 = ptradd ptr %count_arr, i32 %55
  56.load = load i32 from ptr %56
  58 = add i32 %51.load, i32 %56.load
  store i32 %58 to ptr %48
  60 = add i32 %k.phi, i32 1
  br bb %while.cond40
while.exit42:
  br bb %while.cond62
while.cond62:
  j.phi = phi [bb %while.exit42, i32 %n, bb %while.body63, i32 %100]
  66 = icmp sgt i32 %j.phi, i32 0
  67 = icmp ne i1 %66, i1 0
  br i1 %67, bb %while.body63, bb %while.exit64
while.body63:
  69 = sub i32 %j.phi, i32 1
  70 = mul i32 %69, i32 4
  71 = ptradd ptr %ini_arr, i32 %70
  71.load = load i32 from ptr %71
  73 = mul i32 %71.load, i32 4
  74 = ptradd ptr %count_arr, i32 %73
  76 = sub i32 %j.phi, i32 1
  77 = mul i32 %76, i32 4
  78 = ptradd ptr %ini_arr, i32 %77
  78.load = load i32 from ptr %78
  80 = mul i32 %78.load, i32 4
  81 = ptradd ptr %count_arr, i32 %80
  81.load = load i32 from ptr %81
  83 = sub i32 %81.load, i32 1
  store i32 %83 to ptr %74
  85 = sub i32 %j.phi, i32 1
  86 = mul i32 %85, i32 4
  87 = ptradd ptr %ini_arr, i32 %86
  87.load = load i32 from ptr %87
  89 = mul i32 %87.load, i32 4
  90 = ptradd ptr %count_arr, i32 %89
  90.load = load i32 from ptr %90
  92 = mul i32 %90.load, i32 4
  93 = ptradd ptr %sorted_arr, i32 %92
  95 = sub i32 %j.phi, i32 1
  96 = mul i32 %95, i32 4
  97 = ptradd ptr %ini_arr, i32 %96
  97.load = load i32 from ptr %97
  store i32 %97.load to ptr %93
  100 = sub i32 %j.phi, i32 1
  br bb %while.cond62
while.exit64:
  ret i32 0
}

i32 main() {
entry101:
  %b = stack 40
  %a = stack 40
  store i32 10 to ptr @n
  103 = mul i32 0, i32 4
  104 = ptradd ptr %a, i32 %103
  store i32 4 to ptr %104
  105 = mul i32 1, i32 4
  106 = ptradd ptr %a, i32 %105
  store i32 3 to ptr %106
  107 = mul i32 2, i32 4
  108 = ptradd ptr %a, i32 %107
  store i32 9 to ptr %108
  109 = mul i32 3, i32 4
  110 = ptradd ptr %a, i32 %109
  store i32 2 to ptr %110
  111 = mul i32 4, i32 4
  112 = ptradd ptr %a, i32 %111
  store i32 0 to ptr %112
  113 = mul i32 5, i32 4
  114 = ptradd ptr %a, i32 %113
  store i32 1 to ptr %114
  115 = mul i32 6, i32 4
  116 = ptradd ptr %a, i32 %115
  store i32 6 to ptr %116
  117 = mul i32 7, i32 4
  118 = ptradd ptr %a, i32 %117
  store i32 5 to ptr %118
  119 = mul i32 8, i32 4
  120 = ptradd ptr %a, i32 %119
  store i32 7 to ptr %120
  121 = mul i32 9, i32 4
  122 = ptradd ptr %a, i32 %121
  store i32 8 to ptr %122
  n.load = load i32 from ptr @n
  126 = call i32 counting_sort(ptr %a, ptr %b, i32 %n.load)
  br bb %while.cond127
while.cond127:
  i123.phi = phi [bb %entry101, i32 %126, bb %while.body128, i32 %144]
  n.load131 = load i32 from ptr @n
  132 = icmp slt i32 %i123.phi, i32 %n.load131
  133 = icmp ne i1 %132, i1 0
  br i1 %133, bb %while.body128, bb %while.exit129
while.body128:
  136 = mul i32 %i123.phi, i32 4
  137 = ptradd ptr %b, i32 %136
  137.load = load i32 from ptr %137
  call void putint(i32 %137.load)
  call void putch(i32 10)
  144 = add i32 %i123.phi, i32 1
  br bb %while.cond127
while.exit129:
  ret i32 0
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


