global ptr n init with i32 0
global ptr array init with 110 x i32 zeros
void mmerge(i32 a, i32 b) {
entry43:
  48 = call i32 findfa(i32 %a)
  51 = call i32 findfa(i32 %b)
  54 = icmp ne i32 %48, i32 %51
  br i1 %54, bb %then55, bb %if.exit56
then55:
  58 = mul i32 %48, i32 4
  59 = ptradd ptr @array, i32 %58
  store i32 %51 to ptr %59
  br bb %if.exit56
if.exit56:
  ret 
}

i32 findfa(i32 a) {
entry19:
  22 = mul i32 %a, i32 4
  23 = ptradd ptr @array, i32 %22
  23.load = load i32 from ptr %23
  26 = icmp eq i32 %23.load, i32 %a
  br i1 %26, bb %then, bb %else
then:
  ret i32 %a
else:
  36.load = load i32 from ptr %23
  38 = call i32 findfa(i32 %36.load)
  store i32 %38 to ptr %23
  ret i32 %38
}

external i32 getint()

external i32 getch()

void init(i32 n) {
entry:
  9 = mul i32 %n, i32 %n
  br bb %while.cond
while.cond:
  i.phi = phi [bb %entry, i32 1, bb %while.body, i32 %18]
  10 = add i32 %9, i32 1
  11 = icmp sle i32 %i.phi, i32 %10
  br i1 %11, bb %while.body, bb %while.exit
while.body:
  14 = mul i32 %i.phi, i32 4
  15 = ptradd ptr @array, i32 %14
  store i32 -1 to ptr %15
  18 = add i32 %i.phi, i32 1
  br bb %while.cond
while.exit:
  ret 
}

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry61:
  br bb %while.cond66
while.cond66:
  loc.phi297 = phi [bb %entry61, i32 ub, bb %if.exit256, i32 %loc.phi296]
  select.phi294 = phi [bb %entry61, i1 ub, bb %if.exit256, i1 %select.phi293]
  select198.phi290 = phi [bb %entry61, i1 ub, bb %if.exit256, i1 %select198.phi289]
  b.phi286 = phi [bb %entry61, i32 ub, bb %if.exit256, i32 %b.phi]
  select176.phi284 = phi [bb %entry61, i1 ub, bb %if.exit256, i1 %select176.phi283]
  a.phi280 = phi [bb %entry61, i32 ub, bb %if.exit256, i32 %a.phi]
  select223.phi278 = phi [bb %entry61, i1 ub, bb %if.exit256, i1 %select223.phi277]
  select155.phi274 = phi [bb %entry61, i1 ub, bb %if.exit256, i1 %select155.phi273]
  select234.phi270 = phi [bb %entry61, i1 ub, bb %if.exit256, i1 %select234.phi269]
  tmp.phi266 = phi [bb %entry61, i32 ub, bb %if.exit256, i32 %tmp.phi265]
  t.phi = phi [bb %entry61, i32 1, bb %if.exit256, i32 %72]
  70 = icmp ne i32 %t.phi, i32 0
  br i1 %70, bb %while.body67, bb %while.exit68
while.body67:
  72 = sub i32 %t.phi, i32 1
  store i32 4 to ptr @n
  br bb %init.while.cond
while.exit68:
  ret i32 0
while.cond82:
  flag.phi303 = phi [bb %init.while.exit, i32 0, bb %if.exit97, i32 %flag.phi302]
  i73.phi = phi [bb %init.while.exit, i32 0, bb %if.exit97, i32 %249]
  loc.phi296 = phi [bb %init.while.exit, i32 %loc.phi297, bb %if.exit97, i32 %loc.phi]
  select.phi293 = phi [bb %init.while.exit, i1 %select.phi294, bb %if.exit97, i1 %select.phi292]
  select198.phi289 = phi [bb %init.while.exit, i1 %select198.phi290, bb %if.exit97, i1 %select198.phi288]
  b.phi = phi [bb %init.while.exit, i32 %b.phi286, bb %if.exit97, i32 %90]
  select176.phi283 = phi [bb %init.while.exit, i1 %select176.phi284, bb %if.exit97, i1 %select176.phi282]
  a.phi = phi [bb %init.while.exit, i32 %a.phi280, bb %if.exit97, i32 %89]
  select223.phi277 = phi [bb %init.while.exit, i1 %select223.phi278, bb %if.exit97, i1 %select223.phi276]
  select155.phi273 = phi [bb %init.while.exit, i1 %select155.phi274, bb %if.exit97, i1 %select155.phi272]
  select234.phi269 = phi [bb %init.while.exit, i1 %select234.phi270, bb %if.exit97, i1 %select234.phi268]
  tmp.phi265 = phi [bb %init.while.exit, i32 %tmp.phi266, bb %if.exit97, i32 %tmp.phi264]
  87 = icmp slt i32 %i73.phi, i32 10
  br i1 %87, bb %while.body83, bb %while.exit84
while.body83:
  89 = call i32 getint()
  90 = call i32 getint()
  92 = icmp ne i32 %flag.phi303, i32 0
  93 =  i1 %92, i1 1
  94 = zext i1 %93 to i32
  95 = icmp ne i32 %94, i32 0
  br i1 %95, bb %then96, bb %if.exit97
while.exit84:
  251 = icmp ne i32 %flag.phi303, i32 0
  252 =  i1 %251, i1 1
  253 = zext i1 %252 to i32
  254 = icmp ne i32 %253, i32 0
  br i1 %254, bb %then255, bb %if.exit256
then96:
  n.load99 = load i32 from ptr @n
  101 = sub i32 %89, i32 1
  102 = mul i32 %n.load99, i32 %101
  104 = add i32 %102, i32 %90
  106 = mul i32 %104, i32 4
  107 = ptradd ptr @array, i32 %106
  store i32 %104 to ptr %107
  110 = icmp eq i32 %89, i32 1
  br i1 %110, bb %then111, bb %if.exit112
if.exit97:
  flag.phi302 = phi [bb %while.body83, i32 %flag.phi303, bb %if.exit241, i32 %flag.phi]
  loc.phi = phi [bb %while.body83, i32 %loc.phi296, bb %if.exit241, i32 %104]
  select.phi292 = phi [bb %while.body83, i1 %select.phi293, bb %if.exit241, i1 %select.phi]
  select198.phi288 = phi [bb %while.body83, i1 %select198.phi289, bb %if.exit241, i1 %select198.phi]
  select176.phi282 = phi [bb %while.body83, i1 %select176.phi283, bb %if.exit241, i1 %select176.phi]
  select223.phi276 = phi [bb %while.body83, i1 %select223.phi277, bb %if.exit241, i1 %select223.phi]
  select155.phi272 = phi [bb %while.body83, i1 %select155.phi273, bb %if.exit241, i1 %select155.phi]
  select234.phi268 = phi [bb %while.body83, i1 %select234.phi269, bb %if.exit241, i1 %select234.phi]
  tmp.phi264 = phi [bb %while.body83, i32 %tmp.phi265, bb %if.exit241, i32 %tmp.phi]
  249 = add i32 %i73.phi, i32 1
  br bb %while.cond82
then111:
  store i32 0 to ptr @array
  48307 = call i32 findfa(i32 %104)
  51308 = call i32 findfa(i32 0)
  54309 = icmp ne i32 %48307, i32 %51308
  br i1 %54309, bb %mmerge.then55, bb %if.exit112
if.exit112:
  n.load118 = load i32 from ptr @n
  119 = icmp eq i32 %89, i32 %n.load118
  br i1 %119, bb %then120, bb %if.exit121
then120:
  123 = mul i32 %81, i32 4
  124 = ptradd ptr @array, i32 %123
  store i32 %81 to ptr %124
  48320 = call i32 findfa(i32 %104)
  51321 = call i32 findfa(i32 %81)
  54322 = icmp ne i32 %48320, i32 %51321
  br i1 %54322, bb %mmerge.then55324, bb %if.exit121
if.exit121:
  n.load130 = load i32 from ptr @n
  131 = icmp slt i32 %90, i32 %n.load130
  br i1 %131, bb %select.then, bb %select.else
select.then:
  137 = add i32 %104, i32 1
  138 = mul i32 %137, i32 4
  139 = ptradd ptr @array, i32 %138
  139.load = load i32 from ptr %139
  142 = icmp ne i32 %139.load, i32 -1
  br bb %select.exit
select.else:
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 0, bb %select.then, i1 %142]
  br i1 %select.phi, bb %then144, bb %if.exit145
then144:
  148 = add i32 %104, i32 1
  48333 = call i32 findfa(i32 %104)
  51334 = call i32 findfa(i32 %148)
  54335 = icmp ne i32 %48333, i32 %51334
  br i1 %54335, bb %mmerge.then55337, bb %if.exit145
if.exit145:
  151 = icmp sgt i32 %90, i32 1
  br i1 %151, bb %select.then152, bb %select.else153
select.then152:
  157 = sub i32 %104, i32 1
  158 = mul i32 %157, i32 4
  159 = ptradd ptr @array, i32 %158
  159.load = load i32 from ptr %159
  162 = icmp ne i32 %159.load, i32 -1
  br bb %select.exit154
select.else153:
  br bb %select.exit154
select.exit154:
  select155.phi = phi [bb %select.else153, i1 0, bb %select.then152, i1 %162]
  br i1 %select155.phi, bb %then164, bb %if.exit165
then164:
  168 = sub i32 %104, i32 1
  48346 = call i32 findfa(i32 %104)
  51347 = call i32 findfa(i32 %168)
  54348 = icmp ne i32 %48346, i32 %51347
  br i1 %54348, bb %mmerge.then55350, bb %if.exit165
if.exit165:
  n.load171 = load i32 from ptr @n
  172 = icmp slt i32 %89, i32 %n.load171
  br i1 %172, bb %select.then173, bb %select.else174
select.then173:
  n.load178 = load i32 from ptr @n
  179 = add i32 %104, i32 %n.load178
  180 = mul i32 %179, i32 4
  181 = ptradd ptr @array, i32 %180
  181.load = load i32 from ptr %181
  184 = icmp ne i32 %181.load, i32 -1
  br bb %select.exit175
select.else174:
  br bb %select.exit175
select.exit175:
  select176.phi = phi [bb %select.else174, i1 0, bb %select.then173, i1 %184]
  br i1 %select176.phi, bb %then186, bb %if.exit187
then186:
  n.load190 = load i32 from ptr @n
  191 = add i32 %104, i32 %n.load190
  48359 = call i32 findfa(i32 %104)
  51360 = call i32 findfa(i32 %191)
  54361 = icmp ne i32 %48359, i32 %51360
  br i1 %54361, bb %mmerge.then55363, bb %if.exit187
if.exit187:
  194 = icmp sgt i32 %89, i32 1
  br i1 %194, bb %select.then195, bb %select.else196
select.then195:
  n.load200 = load i32 from ptr @n
  201 = sub i32 %104, i32 %n.load200
  202 = mul i32 %201, i32 4
  203 = ptradd ptr @array, i32 %202
  203.load = load i32 from ptr %203
  206 = icmp ne i32 %203.load, i32 -1
  br bb %select.exit197
select.else196:
  br bb %select.exit197
select.exit197:
  select198.phi = phi [bb %select.else196, i1 0, bb %select.then195, i1 %206]
  br i1 %select198.phi, bb %then208, bb %if.exit209
then208:
  n.load212 = load i32 from ptr @n
  213 = sub i32 %104, i32 %n.load212
  48372 = call i32 findfa(i32 %104)
  51373 = call i32 findfa(i32 %213)
  54374 = icmp ne i32 %48372, i32 %51373
  br i1 %54374, bb %mmerge.then55376, bb %if.exit209
if.exit209:
  216.load = load i32 from ptr @array
  219 = icmp ne i32 %216.load, i32 -1
  br i1 %219, bb %select.then220, bb %select.else221
select.then220:
  225 = mul i32 %81, i32 4
  226 = ptradd ptr @array, i32 %225
  226.load = load i32 from ptr %226
  229 = icmp ne i32 %226.load, i32 -1
  br bb %select.exit222
select.else221:
  br bb %select.exit222
select.exit222:
  select223.phi = phi [bb %select.else221, i1 0, bb %select.then220, i1 %229]
  br i1 %select223.phi, bb %select.then231, bb %select.else232
select.then231:
  235 = call i32 findfa(i32 0)
  237 = call i32 findfa(i32 %81)
  238 = icmp eq i32 %235, i32 %237
  br bb %select.exit233
select.else232:
  br bb %select.exit233
select.exit233:
  select234.phi = phi [bb %select.else232, i1 0, bb %select.then231, i1 %238]
  br i1 %select234.phi, bb %then240, bb %if.exit241
then240:
  244 = add i32 %i73.phi, i32 1
  call void putint(i32 %244)
  call void putch(i32 10)
  br bb %if.exit241
if.exit241:
  flag.phi = phi [bb %select.exit233, i32 %flag.phi303, bb %then240, i32 1]
  tmp.phi = phi [bb %select.exit233, i32 %tmp.phi265, bb %then240, i32 %244]
  br bb %if.exit97
then255:
  call void putint(i32 -1)
  call void putch(i32 10)
  br bb %if.exit256
if.exit256:
  br bb %while.cond66
mmerge.then55:
  58312 = mul i32 %48307, i32 4
  59313 = ptradd ptr @array, i32 %58312
  store i32 %51308 to ptr %59313
  br bb %if.exit112
mmerge.then55324:
  58325 = mul i32 %48320, i32 4
  59326 = ptradd ptr @array, i32 %58325
  store i32 %51321 to ptr %59326
  br bb %if.exit121
mmerge.then55337:
  58338 = mul i32 %48333, i32 4
  59339 = ptradd ptr @array, i32 %58338
  store i32 %51334 to ptr %59339
  br bb %if.exit145
mmerge.then55350:
  58351 = mul i32 %48346, i32 4
  59352 = ptradd ptr @array, i32 %58351
  store i32 %51347 to ptr %59352
  br bb %if.exit165
mmerge.then55363:
  58364 = mul i32 %48359, i32 4
  59365 = ptradd ptr @array, i32 %58364
  store i32 %51360 to ptr %59365
  br bb %if.exit187
mmerge.then55376:
  58377 = mul i32 %48372, i32 4
  59378 = ptradd ptr @array, i32 %58377
  store i32 %51373 to ptr %59378
  br bb %if.exit209
init.while.cond:
  i.phi387 = phi [bb %while.body67, i32 1, bb %init.while.body, i32 %18396]
  11390 = icmp sle i32 %i.phi387, i32 17
  br i1 %11390, bb %init.while.body, bb %init.while.exit
init.while.body:
  14393 = mul i32 %i.phi387, i32 4
  15394 = ptradd ptr @array, i32 %14393
  store i32 -1 to ptr %15394
  18396 = add i32 %i.phi387, i32 1
  br bb %init.while.cond
init.while.exit:
  n.load78 = load i32 from ptr @n
  n.load79 = load i32 from ptr @n
  80 = mul i32 %n.load78, i32 %n.load79
  81 = add i32 %80, i32 1
  br bb %while.cond82
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


