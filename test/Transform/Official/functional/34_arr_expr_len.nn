internal global ptr arr init with 6 x i32 [1, 2, 33, 4, 5, 6]
immutable internal global ptr N init with i32 -1
i32 main() {
entry:  pred()
  br bb %while.body
while.body:  pred(while.body, entry)
  i.phi26 = phi [bb %while.body, i32 %18, bb %entry, i32 0]
  sum.phi25 = phi [bb %while.body, i32 %15, bb %entry, i32 0]
  22 = shl i32 %i.phi26, i32 2
  13 = ptradd ptr @arr, i32 %22
  13.load = load i32 from ptr %13
  15 = add i32 %sum.phi25, i32 %13.load
  18 = add i32 %i.phi26, i32 1
  7 = icmp slt i32 %18, i32 6
  br i1 %7, bb %while.body, bb %while.exit
while.exit:  pred(while.body)
  24 = phi [bb %while.body, i32 %15]
  ret i32 %24
}

external void putfarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putarray(i32 , ptr )

external void _sysy_stoptime(i32 )

external void putch(i32 )

external void putfloat(float )

external i32 getfarray(ptr )

external i32 getarray(ptr )

external void putint(i32 )

external float getfloat()

external i32 getch()

external i32 getint()


