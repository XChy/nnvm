global ptr ans init with 10000000 x i32 zeros
global ptr hashmod init with i32 0
immutable global ptr maxn init with i32 10000000
global ptr cnt init with i32 0
immutable global ptr maxm init with i32 10000000
global ptr bucket init with 10000000 x i32 zeros
global ptr head init with 10000000 x i32 zeros
global ptr value init with 10000000 x i32 zeros
global ptr next init with 10000000 x i32 zeros
global ptr keys init with 10000000 x i32 zeros
global ptr values init with 10000000 x i32 zeros
global ptr key init with 10000000 x i32 zeros
global ptr nextvalue init with 10000000 x i32 zeros
global ptr requests init with 10000000 x i32 zeros
i32 insert(i32 k, i32 v) {
entry5:
  hashmod.load334 = load i32 from ptr @hashmod
  4335 = srem i32 %k, i32 %hashmod.load334
  12 = mul i32 %4335, i32 4
  13 = ptradd ptr @head, i32 %12
  13.load = load i32 from ptr %13
  15 = icmp eq i32 %13.load, i32 0
  br i1 %15, bb %then, bb %if.exit
then:
  cnt.load = load i32 from ptr @cnt
  19 = add i32 %cnt.load, i32 1
  store i32 %19 to ptr @cnt
  store i32 %19 to ptr %13
  cnt.load24 = load i32 from ptr @cnt
  25 = mul i32 %cnt.load24, i32 4
  26 = ptradd ptr @key, i32 %25
  store i32 %k to ptr %26
  cnt.load28 = load i32 from ptr @cnt
  29 = mul i32 %cnt.load28, i32 4
  30 = ptradd ptr @value, i32 %29
  store i32 %v to ptr %30
  cnt.load32 = load i32 from ptr @cnt
  33 = mul i32 %cnt.load32, i32 4
  34 = ptradd ptr @next, i32 %33
  store i32 0 to ptr %34
  cnt.load35 = load i32 from ptr @cnt
  36 = mul i32 %cnt.load35, i32 4
  37 = ptradd ptr @nextvalue, i32 %36
  store i32 0 to ptr %37
  ret i32 0
if.exit:
  41.load = load i32 from ptr %13
  br bb %while.cond
while.cond:
  p.phi = phi [bb %if.exit, i32 %41.load, bb %if.exit56, i32 %76.load]
  47 = icmp ne i32 %p.phi, i32 0
  br i1 %47, bb %while.body, bb %while.exit
while.body:
  50 = mul i32 %p.phi, i32 4
  51 = ptradd ptr @key, i32 %50
  51.load = load i32 from ptr %51
  54 = icmp eq i32 %51.load, i32 %k
  br i1 %54, bb %then55, bb %if.exit56
while.exit:
  cnt.load78 = load i32 from ptr @cnt
  79 = add i32 %cnt.load78, i32 1
  store i32 %79 to ptr @cnt
  81 = mul i32 %79, i32 4
  82 = ptradd ptr @next, i32 %81
  85.load = load i32 from ptr %13
  store i32 %85.load to ptr %82
  cnt.load90 = load i32 from ptr @cnt
  store i32 %cnt.load90 to ptr %13
  cnt.load91 = load i32 from ptr @cnt
  92 = mul i32 %cnt.load91, i32 4
  93 = ptradd ptr @key, i32 %92
  store i32 %k to ptr %93
  cnt.load95 = load i32 from ptr @cnt
  96 = mul i32 %cnt.load95, i32 4
  97 = ptradd ptr @value, i32 %96
  store i32 %v to ptr %97
  cnt.load99 = load i32 from ptr @cnt
  100 = mul i32 %cnt.load99, i32 4
  101 = ptradd ptr @nextvalue, i32 %100
  store i32 0 to ptr %101
  ret i32 0
then55:
  cnt.load57 = load i32 from ptr @cnt
  58 = add i32 %cnt.load57, i32 1
  store i32 %58 to ptr @cnt
  60 = mul i32 %58, i32 4
  61 = ptradd ptr @nextvalue, i32 %60
  64 = ptradd ptr @nextvalue, i32 %50
  64.load = load i32 from ptr %64
  store i32 %64.load to ptr %61
  cnt.load69 = load i32 from ptr @cnt
  store i32 %cnt.load69 to ptr %64
  cnt.load70 = load i32 from ptr @cnt
  71 = mul i32 %cnt.load70, i32 4
  72 = ptradd ptr @value, i32 %71
  store i32 %v to ptr %72
  ret i32 1
if.exit56:
  76 = ptradd ptr @next, i32 %50
  76.load = load i32 from ptr %76
  br bb %while.cond
}

external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry150:
  151 = call i32 getint()
  store i32 %151 to ptr @hashmod
  153 = call i32 getarray(ptr @keys)
  155 = call i32 getarray(ptr @values)
  157 = call i32 getarray(ptr @requests)
  call void _sysy_starttime(i32 78)
  br bb %while.cond160
while.cond160:
  i.phi200 = phi [bb %entry150, i32 0, bb %while.body161.split, i32 %177]
  165 = icmp slt i32 %i.phi200, i32 %153
  br i1 %165, bb %while.body161, bb %while.exit162
while.body161:
  168 = mul i32 %i.phi200, i32 4
  169 = ptradd ptr @keys, i32 %168
  169.load = load i32 from ptr %169
  173 = ptradd ptr @values, i32 %168
  173.load = load i32 from ptr %173
  hashmod.load346 = load i32 from ptr @hashmod
  4347 = srem i32 %169.load, i32 %hashmod.load346
  12207 = mul i32 %4347, i32 4
  13208 = ptradd ptr @head, i32 %12207
  13.load209 = load i32 from ptr %13208
  15210 = icmp eq i32 %13.load209, i32 0
  br i1 %15210, bb %insert.then, bb %insert.if.exit
while.body161.split:
  177 = add i32 %i.phi200, i32 1
  br bb %while.cond160
while.exit162:
  br bb %while.cond178
while.cond178:
  i.phi = phi [bb %while.exit162, i32 0, bb %while.body179.split, i32 %194]
  183 = icmp slt i32 %i.phi, i32 %157
  br i1 %183, bb %while.body179, bb %while.exit180
while.body179:
  186 = mul i32 %i.phi, i32 4
  187 = ptradd ptr @ans, i32 %186
  190 = ptradd ptr @requests, i32 %186
  190.load = load i32 from ptr %190
  hashmod.load352 = load i32 from ptr @hashmod
  4353 = srem i32 %190.load, i32 %hashmod.load352
  109294 = mul i32 %4353, i32 4
  110295 = ptradd ptr @head, i32 %109294
  110.load296 = load i32 from ptr %110295
  br bb %reduce.while.cond112
while.body179.split:
  192.ret = phi [bb %reduce.while.exit114, i32 0, bb %reduce.while.exit131, i32 %ret.phi318]
  store i32 %192.ret to ptr %187
  194 = add i32 %i.phi, i32 1
  br bb %while.cond178
while.exit180:
  call void _sysy_stoptime(i32 90)
  call void putarray(i32 %157, ptr @ans)
  ret i32 0
insert.then:
  cnt.load213 = load i32 from ptr @cnt
  19214 = add i32 %cnt.load213, i32 1
  store i32 %19214 to ptr @cnt
  store i32 %19214 to ptr %13208
  cnt.load24217 = load i32 from ptr @cnt
  25218 = mul i32 %cnt.load24217, i32 4
  26219 = ptradd ptr @key, i32 %25218
  store i32 %169.load to ptr %26219
  cnt.load28221 = load i32 from ptr @cnt
  29222 = mul i32 %cnt.load28221, i32 4
  30223 = ptradd ptr @value, i32 %29222
  store i32 %173.load to ptr %30223
  cnt.load32225 = load i32 from ptr @cnt
  33226 = mul i32 %cnt.load32225, i32 4
  34227 = ptradd ptr @next, i32 %33226
  store i32 0 to ptr %34227
  cnt.load35229 = load i32 from ptr @cnt
  36230 = mul i32 %cnt.load35229, i32 4
  37231 = ptradd ptr @nextvalue, i32 %36230
  store i32 0 to ptr %37231
  br bb %while.body161.split
insert.if.exit:
  41.load235 = load i32 from ptr %13208
  br bb %insert.while.cond
insert.while.cond:
  p.phi238 = phi [bb %insert.if.exit, i32 %41.load235, bb %insert.if.exit56, i32 %76.load288]
  47239 = icmp ne i32 %p.phi238, i32 0
  br i1 %47239, bb %insert.while.body, bb %insert.while.exit
insert.while.body:
  50242 = mul i32 %p.phi238, i32 4
  51243 = ptradd ptr @key, i32 %50242
  51.load244 = load i32 from ptr %51243
  54245 = icmp eq i32 %51.load244, i32 %169.load
  br i1 %54245, bb %insert.then55, bb %insert.if.exit56
insert.while.exit:
  cnt.load78248 = load i32 from ptr @cnt
  79249 = add i32 %cnt.load78248, i32 1
  store i32 %79249 to ptr @cnt
  81251 = mul i32 %79249, i32 4
  82252 = ptradd ptr @next, i32 %81251
  85.load253 = load i32 from ptr %13208
  store i32 %85.load253 to ptr %82252
  cnt.load90255 = load i32 from ptr @cnt
  store i32 %cnt.load90255 to ptr %13208
  cnt.load91257 = load i32 from ptr @cnt
  92258 = mul i32 %cnt.load91257, i32 4
  93259 = ptradd ptr @key, i32 %92258
  store i32 %169.load to ptr %93259
  cnt.load95261 = load i32 from ptr @cnt
  96262 = mul i32 %cnt.load95261, i32 4
  97263 = ptradd ptr @value, i32 %96262
  store i32 %173.load to ptr %97263
  cnt.load99265 = load i32 from ptr @cnt
  100266 = mul i32 %cnt.load99265, i32 4
  101267 = ptradd ptr @nextvalue, i32 %100266
  store i32 0 to ptr %101267
  br bb %while.body161.split
insert.then55:
  cnt.load57271 = load i32 from ptr @cnt
  58272 = add i32 %cnt.load57271, i32 1
  store i32 %58272 to ptr @cnt
  60274 = mul i32 %58272, i32 4
  61275 = ptradd ptr @nextvalue, i32 %60274
  64276 = ptradd ptr @nextvalue, i32 %50242
  64.load277 = load i32 from ptr %64276
  store i32 %64.load277 to ptr %61275
  cnt.load69279 = load i32 from ptr @cnt
  store i32 %cnt.load69279 to ptr %64276
  cnt.load70281 = load i32 from ptr @cnt
  71282 = mul i32 %cnt.load70281, i32 4
  72283 = ptradd ptr @value, i32 %71282
  store i32 %173.load to ptr %72283
  br bb %while.body161.split
insert.if.exit56:
  76287 = ptradd ptr @next, i32 %50242
  76.load288 = load i32 from ptr %76287
  br bb %insert.while.cond
reduce.while.cond112:
  p107.phi299 = phi [bb %while.body179, i32 %110.load296, bb %reduce.if.exit125, i32 %148.load314]
  116300 = icmp ne i32 %p107.phi299, i32 0
  br i1 %116300, bb %reduce.while.body113, bb %reduce.while.exit114
reduce.while.body113:
  119303 = mul i32 %p107.phi299, i32 4
  120304 = ptradd ptr @key, i32 %119303
  120.load305 = load i32 from ptr %120304
  123306 = icmp eq i32 %120.load305, i32 %190.load
  br i1 %123306, bb %reduce.then124, bb %reduce.if.exit125
reduce.while.exit114:
  br bb %while.body179.split
reduce.then124:
  br bb %reduce.while.cond129
reduce.if.exit125:
  148313 = ptradd ptr @next, i32 %119303
  148.load314 = load i32 from ptr %148313
  br bb %reduce.while.cond112
reduce.while.cond129:
  x.phi317 = phi [bb %reduce.then124, i32 %p107.phi299, bb %reduce.while.body130, i32 %143.load327]
  ret.phi318 = phi [bb %reduce.then124, i32 0, bb %reduce.while.body130, i32 %140325]
  133319 = icmp ne i32 %x.phi317, i32 0
  br i1 %133319, bb %reduce.while.body130, bb %reduce.while.exit131
reduce.while.body130:
  137322 = mul i32 %x.phi317, i32 4
  138323 = ptradd ptr @value, i32 %137322
  138.load324 = load i32 from ptr %138323
  140325 = add i32 %ret.phi318, i32 %138.load324
  143326 = ptradd ptr @nextvalue, i32 %137322
  143.load327 = load i32 from ptr %143326
  br bb %reduce.while.cond129
reduce.while.exit131:
  br bb %while.body179.split
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

i32 reduce(i32 k) {
entry102:
  hashmod.load340 = load i32 from ptr @hashmod
  4341 = srem i32 %k, i32 %hashmod.load340
  109 = mul i32 %4341, i32 4
  110 = ptradd ptr @head, i32 %109
  110.load = load i32 from ptr %110
  br bb %while.cond112
while.cond112:
  p107.phi = phi [bb %entry102, i32 %110.load, bb %if.exit125, i32 %148.load]
  116 = icmp ne i32 %p107.phi, i32 0
  br i1 %116, bb %while.body113, bb %while.exit114
while.body113:
  119 = mul i32 %p107.phi, i32 4
  120 = ptradd ptr @key, i32 %119
  120.load = load i32 from ptr %120
  123 = icmp eq i32 %120.load, i32 %k
  br i1 %123, bb %then124, bb %if.exit125
while.exit114:
  ret i32 0
then124:
  br bb %while.cond129
if.exit125:
  148 = ptradd ptr @next, i32 %119
  148.load = load i32 from ptr %148
  br bb %while.cond112
while.cond129:
  x.phi = phi [bb %then124, i32 %p107.phi, bb %while.body130, i32 %143.load]
  ret.phi = phi [bb %then124, i32 0, bb %while.body130, i32 %140]
  133 = icmp ne i32 %x.phi, i32 0
  br i1 %133, bb %while.body130, bb %while.exit131
while.body130:
  137 = mul i32 %x.phi, i32 4
  138 = ptradd ptr @value, i32 %137
  138.load = load i32 from ptr %138
  140 = add i32 %ret.phi, i32 %138.load
  143 = ptradd ptr @nextvalue, i32 %137
  143.load = load i32 from ptr %143
  br bb %while.cond129
while.exit131:
  ret i32 %ret.phi
}

i32 hash(i32 k) {
entry:
  hashmod.load = load i32 from ptr @hashmod
  4 = srem i32 %k, i32 %hashmod.load
  ret i32 %4
}

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


