global ptr height init with i32 0
global ptr width init with i32 0
internal global ptr image init with 1048576 x i32 zeros
pure internal float my_sin_impl(float x) {
entry23:  pred()
  3694 = si2f i32 0 to float
  4695 = fcmp ogt float %x, float %3694
  br i1 %4695, bb %my_fabs.then, bb %my_fabs.if.exit
entry23.split:  pred(my_fabs.then, my_fabs.if.exit)
  26.ret = phi [bb %my_fabs.then, float %x, bb %my_fabs.if.exit, float %9700]
  28 = fcmp ole float %26.ret, float 0.000001
  br i1 %28, bb %then29, bb %if.exit30
then29:  pred(entry23.split)
  ret float %x
if.exit30:  pred(entry23.split)
  33 = fdiv float %x, float 3.000000
  34 = call float my_sin_impl(float %33)
  13393 = si2f i32 3 to float
  14394 = fmul float %13393, float %34
  16395 = si2f i32 4 to float
  17396 = fmul float %16395, float %34
  19397 = fmul float %17396, float %34
  21398 = fmul float %19397, float %34
  22399 = fsub float %14394, float %21398
  ret float %22399
my_fabs.then:  pred(entry23)
  br bb %entry23.split
my_fabs.if.exit:  pred(entry23)
  9700 = fneg float %x
  br bb %entry23.split
}

external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry298:  pred()
  300 = call float getfloat()
  301 = call i32 getch()
  95620 = call i32 getch()
  96621 = icmp ne i32 %95620, i32 80
  br i1 %96621, bb %read_image.select.then97, bb %read_image.select.else98
entry298.split:  pred(read_image.then105, read_image.then132, read_image.while.exit)
  302.ret = phi [bb %read_image.then105, i32 -1, bb %read_image.then132, i32 -1, bb %read_image.while.exit, i32 0]
  303 = icmp slt i32 %302.ret, i32 0
  br i1 %303, bb %then304, bb %if.exit305
then304:  pred(entry298.split)
  ret i32 -1
if.exit305:  pred(entry298.split)
  call void write_pgm(float %300)
  ret i32 0
read_image.select.then97:  pred(entry298)
  br bb %read_image.select.exit99
read_image.select.else98:  pred(entry298)
  101626 = call i32 getch()
  102627 = icmp ne i32 %101626, i32 50
  br bb %read_image.select.exit99
read_image.select.exit99:  pred(read_image.select.then97, read_image.select.else98)
  select100.phi630 = phi [bb %read_image.select.else98, i1 %102627, bb %read_image.select.then97, i1 -1]
  br i1 %select100.phi630, bb %read_image.then105, bb %read_image.if.exit106
read_image.then105:  pred(read_image.select.exit99)
  br bb %entry298.split
read_image.if.exit106:  pred(read_image.select.exit99)
  109635 = call i32 getint()
  store i32 %109635 to ptr @width
  111637 = call i32 getint()
  store i32 %111637 to ptr @height
  width.load112639 = load i32 from ptr @width
  114640 = icmp sgt i32 %width.load112639, i32 1024
  br i1 %114640, bb %read_image.select.then115, bb %read_image.select.else116
read_image.select.then115:  pred(read_image.if.exit106)
  br bb %read_image.select.exit117
read_image.select.else116:  pred(read_image.if.exit106)
  121646 = icmp sgt i32 %111637, i32 1024
  br bb %read_image.select.exit117
read_image.select.exit117:  pred(read_image.select.then115, read_image.select.else116)
  select118.phi649 = phi [bb %read_image.select.else116, i1 %121646, bb %read_image.select.then115, i1 -1]
  br i1 %select118.phi649, bb %read_image.select.then124, bb %read_image.select.else125
read_image.select.then124:  pred(read_image.select.exit117)
  br bb %read_image.select.exit126
read_image.select.else125:  pred(read_image.select.exit117)
  128654 = call i32 getint()
  129655 = icmp ne i32 %128654, i32 255
  br bb %read_image.select.exit126
read_image.select.exit126:  pred(read_image.select.then124, read_image.select.else125)
  select127.phi658 = phi [bb %read_image.select.else125, i1 %129655, bb %read_image.select.then124, i1 -1]
  br i1 %select127.phi658, bb %read_image.then132, bb %read_image.if.exit133
read_image.then132:  pred(read_image.select.exit126)
  br bb %entry298.split
read_image.if.exit133:  pred(read_image.select.exit126)
  height.load140666710 = load i32 from ptr @height
  141667711 = icmp slt i32 0, i32 %height.load140666710
  br i1 %141667711, bb %read_image.while.body_preheader, bb %read_image.while.exit
read_image.while.body_preheader:  pred(read_image.if.exit133)
  br bb %read_image.while.body
read_image.while.body:  pred(read_image.while.exit146, read_image.while.body_preheader)
  y.phi665712 = phi [bb %read_image.while.exit146, i32 %165689, bb %read_image.while.body_preheader, i32 0]
  width.load148675707 = load i32 from ptr @width
  149676708 = icmp slt i32 0, i32 %width.load148675707
  br i1 %149676708, bb %read_image.while.body145_preheader, bb %read_image.while.exit146
read_image.while.exit:  pred(read_image.if.exit133, read_image.while.exit146)
  br bb %entry298.split
read_image.while.body145_preheader:  pred(read_image.while.body)
  br bb %read_image.while.body145
read_image.while.body145:  pred(read_image.while.body145, read_image.while.body145_preheader)
  x.phi674709 = phi [bb %read_image.while.body145, i32 %162686, bb %read_image.while.body145_preheader, i32 0]
  width.load152679 = load i32 from ptr @width
  153680 = mul i32 %y.phi665712, i32 %width.load152679
  155681 = add i32 %153680, i32 %x.phi674709
  705 = shl i32 %155681, i32 2
  157683 = ptradd ptr @image, i32 %705
  159684 = call i32 getint()
  store i32 %159684 to ptr %157683
  162686 = add i32 %x.phi674709, i32 1
  width.load148675 = load i32 from ptr @width
  149676 = icmp slt i32 %162686, i32 %width.load148675
  br i1 %149676, bb %read_image.while.body145, bb %read_image.while.exit146
read_image.while.exit146:  pred(read_image.while.body, read_image.while.body145)
  165689 = add i32 %y.phi665712, i32 1
  height.load140666 = load i32 from ptr @height
  141667 = icmp slt i32 %165689, i32 %height.load140666
  br i1 %141667, bb %read_image.while.body, bb %read_image.while.exit
}

external float getfloat()

external void putfloat(float )

internal void write_pgm(float rad) {
entry256:  pred()
  call void putch(i32 80)
  call void putch(i32 50)
  call void putch(i32 10)
  width.load261 = load i32 from ptr @width
  call void putint(i32 %width.load261)
  call void putch(i32 32)
  height.load264 = load i32 from ptr @height
  call void putint(i32 %height.load264)
  call void putch(i32 32)
  call void putint(i32 255)
  call void putch(i32 10)
  height.load274716 = load i32 from ptr @height
  275717 = icmp slt i32 0, i32 %height.load274716
  br i1 %275717, bb %while.body271_preheader, bb %while.exit272
while.body271_preheader:  pred(entry256)
  .pinned736 = pin float 6.283185
  .pinned = pin float 3.141593
  br bb %while.body271
while.body271:  pred(while.exit280, while.body271_preheader)
  y269.phi718 = phi [bb %while.exit280, i32 %297, bb %while.body271_preheader, i32 0]
  width.load282713 = load i32 from ptr @width
  283714 = icmp slt i32 0, i32 %width.load282713
  br i1 %283714, bb %while.body279_preheader, bb %while.exit280
while.exit272:  pred(entry256, while.exit280)
  ret 
while.body279_preheader:  pred(while.body271)
  40484 = fcmp ogt float %rad, float %.pinned736
  47489 = fneg float %.pinned736
  76511 = fneg float %.pinned
  90572 = si2f i32 2 to float
  91573 = fdiv float %.pinned, float %90572
  92574 = fadd float %rad, float %91573
  40404580 = fcmp ogt float %92574, float %.pinned736
  br bb %while.body279
while.body279:  pred(while.body279.split, while.body279_preheader)
  x277.phi715 = phi [bb %while.body279.split, i32 %293, bb %while.body279_preheader, i32 0]
  br i1 %40484, bb %my_sin.select.then486, bb %my_sin.select.else488
while.body279.split:  pred(rotate.then246, rotate.if.exit247)
  288.ret = phi [bb %rotate.then246, i32 0, bb %rotate.if.exit247, i32 %254.load388]
  call void putint(i32 %288.ret)
  call void putch(i32 32)
  293 = add i32 %x277.phi715, i32 1
  width.load282 = load i32 from ptr @width
  283 = icmp slt i32 %293, i32 %width.load282
  br i1 %283, bb %while.body279, bb %while.exit280
while.exit280:  pred(while.body271, while.body279.split)
  call void putch(i32 10)
  297 = add i32 %y269.phi718, i32 1
  height.load274 = load i32 from ptr @height
  275 = icmp slt i32 %297, i32 %height.load274
  br i1 %275, bb %while.body271, bb %while.exit272
rotate.select.then220:  pred(my_cos.my_sin.if.exit79613)
  br bb %rotate.select.exit222
rotate.select.else221:  pred(my_cos.my_sin.if.exit79613)
  226358 = icmp sge i32 %203345, i32 %width.load177332
  br bb %rotate.select.exit222
rotate.select.exit222:  pred(rotate.select.then220, rotate.select.else221)
  select223.phi361 = phi [bb %rotate.select.else221, i1 %226358, bb %rotate.select.then220, i1 -1]
  br i1 %select223.phi361, bb %rotate.select.then229, bb %rotate.select.else230
rotate.select.then229:  pred(rotate.select.exit222)
  br bb %rotate.select.exit231
rotate.select.else230:  pred(rotate.select.exit222)
  234366 = icmp slt i32 %217351, i32 0
  br bb %rotate.select.exit231
rotate.select.exit231:  pred(rotate.select.then229, rotate.select.else230)
  select232.phi369 = phi [bb %rotate.select.else230, i1 %234366, bb %rotate.select.then229, i1 -1]
  br i1 %select232.phi369, bb %rotate.select.then237, bb %rotate.select.else238
rotate.select.then237:  pred(rotate.select.exit231)
  br bb %rotate.select.exit239
rotate.select.else238:  pred(rotate.select.exit231)
  243375 = icmp sge i32 %217351, i32 %height.load180334
  br bb %rotate.select.exit239
rotate.select.exit239:  pred(rotate.select.then237, rotate.select.else238)
  select240.phi378 = phi [bb %rotate.select.else238, i1 %243375, bb %rotate.select.then237, i1 -1]
  br i1 %select240.phi378, bb %rotate.then246, bb %rotate.if.exit247
rotate.then246:  pred(rotate.select.exit239)
  br bb %while.body279.split
rotate.if.exit247:  pred(rotate.select.exit239)
  250384 = mul i32 %217351, i32 %width.load177332
  252385 = add i32 %250384, i32 %203345
  706 = shl i32 %252385, i32 2
  254387 = ptradd ptr @image, i32 %706
  254.load388 = load i32 from ptr %254387
  br bb %while.body279.split
my_sin.select.then486:  pred(while.body279)
  br bb %my_sin.select.exit492
my_sin.select.else488:  pred(while.body279)
  48490 = fcmp olt float %rad, float %47489
  br bb %my_sin.select.exit492
my_sin.select.exit492:  pred(my_sin.select.then486, my_sin.select.else488)
  select.phi493 = phi [bb %my_sin.select.else488, i1 %48490, bb %my_sin.select.then486, i1 -1]
  br i1 %select.phi493, bb %my_sin.then51495, bb %my_sin.if.exit52502
my_sin.then51495:  pred(my_sin.select.exit492)
  56496 = fdiv float %rad, float %.pinned736
  57497 = f2si float %56496 to i32
  62498 = si2f i32 %57497 to float
  63499 = fmul float %62498, float %.pinned736
  64500 = fsub float %rad, float %63499
  br bb %my_sin.if.exit52502
my_sin.if.exit52502:  pred(my_sin.select.exit492, my_sin.then51495)
  x.stack37.phi314503 = phi [bb %my_sin.select.exit492, float %rad, bb %my_sin.then51495, float %64500]
  67504 = fcmp ogt float %x.stack37.phi314503, float %.pinned
  br i1 %67504, bb %my_sin.then68506, bb %my_sin.if.exit69509
my_sin.then68506:  pred(my_sin.if.exit52502)
  73507 = fsub float %x.stack37.phi314503, float %.pinned736
  br bb %my_sin.if.exit69509
my_sin.if.exit69509:  pred(my_sin.if.exit52502, my_sin.then68506)
  x.stack37.phi313510 = phi [bb %my_sin.if.exit52502, float %x.stack37.phi314503, bb %my_sin.then68506, float %73507]
  77512 = fcmp olt float %x.stack37.phi313510, float %76511
  br i1 %77512, bb %my_sin.then78514, bb %my_sin.if.exit79517
my_sin.then78514:  pred(my_sin.if.exit69509)
  83515 = fadd float %x.stack37.phi313510, float %.pinned736
  br bb %my_sin.if.exit79517
my_sin.if.exit79517:  pred(my_sin.if.exit69509, my_sin.then78514)
  x.stack37.phi518 = phi [bb %my_sin.if.exit69509, float %x.stack37.phi313510, bb %my_sin.then78514, float %83515]
  85519 = call float my_sin_impl(float %x.stack37.phi518)
  br i1 %40404580, bb %my_cos.my_sin.select.then582, bb %my_cos.my_sin.select.else584
my_cos.my_sin.select.then582:  pred(my_sin.if.exit79517)
  br bb %my_cos.my_sin.select.exit588
my_cos.my_sin.select.else584:  pred(my_sin.if.exit79517)
  48410586 = fcmp olt float %92574, float %47489
  br bb %my_cos.my_sin.select.exit588
my_cos.my_sin.select.exit588:  pred(my_cos.my_sin.select.then582, my_cos.my_sin.select.else584)
  select.phi413589 = phi [bb %my_cos.my_sin.select.else584, i1 %48410586, bb %my_cos.my_sin.select.then582, i1 -1]
  br i1 %select.phi413589, bb %my_cos.my_sin.then51591, bb %my_cos.my_sin.if.exit52598
my_cos.my_sin.then51591:  pred(my_cos.my_sin.select.exit588)
  56416592 = fdiv float %92574, float %.pinned736
  57417593 = f2si float %56416592 to i32
  62418594 = si2f i32 %57417593 to float
  63419595 = fmul float %62418594, float %.pinned736
  64420596 = fsub float %92574, float %63419595
  br bb %my_cos.my_sin.if.exit52598
my_cos.my_sin.if.exit52598:  pred(my_cos.my_sin.select.exit588, my_cos.my_sin.then51591)
  x.stack37.phi314423599 = phi [bb %my_cos.my_sin.select.exit588, float %92574, bb %my_cos.my_sin.then51591, float %64420596]
  67424600 = fcmp ogt float %x.stack37.phi314423599, float %.pinned
  br i1 %67424600, bb %my_cos.my_sin.then68602, bb %my_cos.my_sin.if.exit69605
my_cos.my_sin.then68602:  pred(my_cos.my_sin.if.exit52598)
  73427603 = fsub float %x.stack37.phi314423599, float %.pinned736
  br bb %my_cos.my_sin.if.exit69605
my_cos.my_sin.if.exit69605:  pred(my_cos.my_sin.if.exit52598, my_cos.my_sin.then68602)
  x.stack37.phi313430606 = phi [bb %my_cos.my_sin.if.exit52598, float %x.stack37.phi314423599, bb %my_cos.my_sin.then68602, float %73427603]
  77432608 = fcmp olt float %x.stack37.phi313430606, float %76511
  br i1 %77432608, bb %my_cos.my_sin.then78610, bb %my_cos.my_sin.if.exit79613
my_cos.my_sin.then78610:  pred(my_cos.my_sin.if.exit69605)
  83435611 = fadd float %x.stack37.phi313430606, float %.pinned736
  br bb %my_cos.my_sin.if.exit79613
my_cos.my_sin.if.exit79613:  pred(my_cos.my_sin.if.exit69605, my_cos.my_sin.then78610)
  x.stack37.phi438614 = phi [bb %my_cos.my_sin.if.exit69605, float %x.stack37.phi313430606, bb %my_cos.my_sin.then78610, float %83435611]
  85439615 = call float my_sin_impl(float %x.stack37.phi438614)
  width.load177332 = load i32 from ptr @width
  178333 = sdiv i32 %width.load177332, i32 2
  height.load180334 = load i32 from ptr @height
  181335 = sdiv i32 %height.load180334, i32 2
  185336 = sub i32 %x277.phi715, i32 %178333
  189337 = sub i32 %y269.phi718, i32 %181335
  193338 = si2f i32 %185336 to float
  194339 = fmul float %193338, float %85439615
  197340 = si2f i32 %189337 to float
  198341 = fmul float %197340, float %85519
  199342 = fsub float %194339, float %198341
  201343 = si2f i32 %178333 to float
  202344 = fadd float %199342, float %201343
  203345 = f2si float %202344 to i32
  208346 = fmul float %193338, float %85519
  212347 = fmul float %197340, float %85439615
  213348 = fadd float %208346, float %212347
  215349 = si2f i32 %181335 to float
  216350 = fadd float %213348, float %215349
  217351 = f2si float %216350 to i32
  219352 = icmp slt i32 %203345, i32 0
  br i1 %219352, bb %rotate.select.then220, bb %rotate.select.else221
}

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


