pure internal float my_exp(float x) {
entry272:  pred()
  275 = si2f i32 0 to float
  276 = fcmp olt float %x, float %275
  br i1 %276, bb %then277, bb %if.exit278
then277:  pred(entry272)
  280 = fneg float %x
  281 = call float my_exp(float %280)
  282 = si2f i32 1 to float
  283 = fdiv float %282, float %281
  ret float %283
if.exit278:  pred(entry272)
  286 = f2si float %x to i32
  290 = si2f i32 %286 to float
  291 = fsub float %x, float %290
  295 = call float my_pow(float 2.718282, i32 %286)
  298 = call float eee(float %291)
  301 = fmul float %295, float %298
  ret float %301
}

pure internal float eee(float x) {
entry234:  pred()
  237 = fcmp ogt float %x, float 0.001000
  242 = si2f i32 2 to float
  br i1 %237, bb %then238, bb %if.exit239
then238:  pred(entry234)
  243 = fdiv float %x, float %242
  244 = call float eee(float %243)
  247 = fmul float %244, float %244
  ret float %247
if.exit239:  pred(entry234)
  249 = si2f i32 1 to float
  250 = fadd float %249, float %x
  253 = fmul float %x, float %x
  255 = fdiv float %253, float %242
  256 = fadd float %250, float %255
  258 = call float my_pow(float %x, i32 3)
  259 = si2f i32 6 to float
  260 = fdiv float %258, float %259
  261 = fadd float %256, float %260
  263 = call float my_pow(float %x, i32 4)
  264 = si2f i32 24 to float
  265 = fdiv float %263, float %264
  266 = fadd float %261, float %265
  268 = call float my_pow(float %x, i32 5)
  269 = si2f i32 120 to float
  270 = fdiv float %268, float %269
  271 = fadd float %266, float %270
  ret float %271
}

pure internal float asr5(float a, float b, float eps, float A, i32 flag) {
entry157:  pred()
  167 = fsub float %b, float %a
  168 = si2f i32 2 to float
  169 = fdiv float %167, float %168
  170 = fadd float %a, float %169
  112521 = fsub float %170, float %a
  114523 = fdiv float %112521, float %168
  115524 = fadd float %a, float %114523
  117525 = icmp eq i32 %flag, i32 1
  921292 = si2f i32 1 to float
  124530 = si2f i32 4 to float
  134536 = si2f i32 6 to float
  137540 = icmp eq i32 %flag, i32 2
  98995 = fmul float %170, float %170
  156555 = si2f i32 0 to float
  br i1 %117525, bb %simpson.then118, bb %simpson.if.exit119
entry157.split:  pred(simpson.then118, simpson.then138, simpson.if.exit139)
  175.ret = phi [bb %simpson.then118, float %135537, bb %simpson.then138, float %155552, bb %simpson.if.exit139, float %156555]
  112560 = fsub float %b, float %170
  114562 = fdiv float %112560, float %168
  115563 = fadd float %170, float %114562
  br i1 %117525, bb %simpson.then118566, bb %simpson.if.exit119578
entry157.split.split:  pred(simpson.then118566, simpson.then138581, simpson.if.exit139593)
  180.ret = phi [bb %simpson.then118566, float %135576, bb %simpson.then138581, float %155591, bb %simpson.if.exit139593, float %156555]
  183 = fadd float %175.ret, float %180.ret
  185 = fsub float %183, float %A
  41491 = fcmp ogt float %185, float %156555
  91496 = fneg float %185
  br i1 %41491, bb %186.ret.which.true, bb %entry157.split.split.split1538
entry157.split.split.split1538:  pred(entry157.split.split, 186.ret.which.true)
  1540 = phi [bb %186.ret.which.true, float %185, bb %entry157.split.split, float %91496]
  188 = si2f i32 15 to float
  189 = fmul float %188, float %eps
  190 = fcmp ole float %1540, float %189
  br i1 %190, bb %then191, bb %if.exit192
then191:  pred(entry157.split.split.split1538)
  201 = fdiv float %185, float 15.000000
  202 = fadd float %183, float %201
  ret float %202
if.exit192:  pred(entry157.split.split.split1538)
  207 = fdiv float %eps, float %168
  210 = call float asr5(float %a, float %170, float %207, float %175.ret, i32 %flag)
  218 = call float asr5(float %170, float %b, float %207, float %180.ret, i32 %flag)
  219 = fadd float %210, float %218
  ret float %219
simpson.then118:  pred(entry157)
  931293 = fdiv float %921292, float %a
  931299 = fdiv float %921292, float %115524
  125531 = fmul float %124530, float %931299
  126532 = fadd float %931293, float %125531
  931305 = fdiv float %921292, float %170
  129534 = fadd float %126532, float %931305
  133535 = fmul float %129534, float %112521
  135537 = fdiv float %133535, float %134536
  br bb %entry157.split
simpson.if.exit119:  pred(entry157)
  br i1 %137540, bb %simpson.then138, bb %simpson.if.exit139
simpson.then138:  pred(simpson.if.exit119)
  98977 = fmul float %a, float %a
  100979 = fsub float %921292, float %98977
  101980 = call float my_sqrt(float %100979)
  103981 = fdiv float %921292, float %101980
  98986 = fmul float %115524, float %115524
  100988 = fsub float %921292, float %98986
  101989 = call float my_sqrt(float %100988)
  103990 = fdiv float %921292, float %101989
  145546 = fmul float %124530, float %103990
  146547 = fadd float %103981, float %145546
  100997 = fsub float %921292, float %98995
  101998 = call float my_sqrt(float %100997)
  103999 = fdiv float %921292, float %101998
  149549 = fadd float %146547, float %103999
  153550 = fmul float %149549, float %112521
  155552 = fdiv float %153550, float %134536
  br bb %entry157.split
simpson.if.exit139:  pred(simpson.if.exit119)
  br bb %entry157.split
simpson.then118566:  pred(entry157.split)
  931311 = fdiv float %921292, float %170
  931317 = fdiv float %921292, float %115563
  125570 = fmul float %124530, float %931317
  126571 = fadd float %931311, float %125570
  931323 = fdiv float %921292, float %b
  129573 = fadd float %126571, float %931323
  133574 = fmul float %129573, float %112560
  135576 = fdiv float %133574, float %134536
  br bb %entry157.split.split
simpson.if.exit119578:  pred(entry157.split)
  br i1 %137540, bb %simpson.then138581, bb %simpson.if.exit139593
simpson.then138581:  pred(simpson.if.exit119578)
  1001006 = fsub float %921292, float %98995
  1011007 = call float my_sqrt(float %1001006)
  1031008 = fdiv float %921292, float %1011007
  981013 = fmul float %115563, float %115563
  1001015 = fsub float %921292, float %981013
  1011016 = call float my_sqrt(float %1001015)
  1031017 = fdiv float %921292, float %1011016
  145585 = fmul float %124530, float %1031017
  146586 = fadd float %1031008, float %145585
  981022 = fmul float %b, float %b
  1001024 = fsub float %921292, float %981022
  1011025 = call float my_sqrt(float %1001024)
  1031026 = fdiv float %921292, float %1011025
  149588 = fadd float %146586, float %1031026
  153589 = fmul float %149588, float %112560
  155591 = fdiv float %153589, float %134536
  br bb %entry157.split.split
simpson.if.exit139593:  pred(simpson.if.exit119578)
  br bb %entry157.split.split
186.ret.which.true:  pred(entry157.split.split)
  br bb %entry157.split.split.split1538
}

pure internal float my_sqrt(float x) {
entry46:  pred()
  49 = si2f i32 100 to float
  50 = fcmp ogt float %x, float %49
  br i1 %50, bb %then51, bb %if.exit52
then51:  pred(entry46)
  55 = fdiv float %x, float %49
  56 = call float my_sqrt(float %55)
  57 = fmul float 10.000000, float %56
  ret float %57
if.exit52:  pred(entry46)
  60 = si2f i32 8 to float
  61 = fdiv float %x, float %60
  62 = fadd float %61, float 0.500000
  64 = si2f i32 2 to float
  65 = fmul float %64, float %x
  67 = si2f i32 4 to float
  68 = fadd float %67, float %x
  69 = fdiv float %65, float %68
  70 = fadd float %62, float %69
  br bb %while.body73
while.body73:  pred(while.body73, if.exit52)
  t.phi1515 = phi [bb %while.body73, float %84, bb %if.exit52, float %70]
  c.phi1514 = phi [bb %while.body73, i32 %408, bb %if.exit52, i32 10]
  81 = fdiv float %x, float %t.phi1515
  82 = fadd float %t.phi1515, float %81
  84 = fdiv float %82, float %64
  408 = add i32 %c.phi1514, i32 -1
  76 = icmp ne i32 %408, i32 0
  br i1 %76, bb %while.body73, bb %while.body73_exclu_exit
while.body73_exclu_exit:  pred(while.body73)
  ret float %84
}

pure internal float my_pow(float a, i32 n) {
entry10:  pred()
  14 = icmp slt i32 %n, i32 0
  br i1 %14, bb %then15, bb %if.exit16
then15:  pred(entry10)
  19 = sub i32 0, i32 %n
  20 = call float my_pow(float %a, i32 %19)
  21 = si2f i32 1 to float
  22 = fdiv float %21, float %20
  ret float %22
if.exit16:  pred(entry10)
  .pinned = pin float 1.000000
  281516 = icmp ne i32 %n, i32 0
  br i1 %281516, bb %while.body_preheader, bb %while.exit
while.body_preheader:  pred(if.exit16)
  br bb %while.body
while.body:  pred(while.body.split, while.body_preheader)
  a.stack.phi1520 = phi [bb %while.body.split, float %41, bb %while.body_preheader, float %a]
  n.stack.phi1519 = phi [bb %while.body.split, i32 %44, bb %while.body_preheader, i32 %n]
  res.phi4021518 = phi [bb %while.body.split, float %1543, bb %while.body_preheader, float %.pinned]
  409 = and i32 %n.stack.phi1519, i32 1
  410 = icmp ne i32 %409, i32 0
  37 = fmul float %res.phi4021518, float %a.stack.phi1520
  br i1 %410, bb %res.phi.which.true, bb %while.body.split
while.body.split:  pred(while.body, res.phi.which.true)
  1543 = phi [bb %res.phi.which.true, float %37, bb %while.body, float %res.phi4021518]
  41 = fmul float %a.stack.phi1520, float %a.stack.phi1520
  44 = sdiv i32 %n.stack.phi1519, i32 2
  28 = icmp ne i32 %44, i32 0
  br i1 %28, bb %while.body, bb %while.body_exclu_exit
while.exit:  pred(if.exit16, while.body_exclu_exit)
  1517 = phi [bb %while.body_exclu_exit, float %1543, bb %if.exit16, float %.pinned]
  ret float %1517
while.body_exclu_exit:  pred(while.body.split)
  br bb %while.exit
res.phi.which.true:  pred(while.body)
  br bb %while.body.split
}

external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry323:  pred()
  325 = call i32 getint()
  3301521 = icmp ne i32 %325, i32 0
  br i1 %3301521, bb %while.body327_preheader, bb %while.exit328
while.body327_preheader:  pred(entry323)
  .pinned1537 = pin float 0.000000
  31501 = si2f i32 0 to float
  304449 = si2f i32 1 to float
  113795 = si2f i32 2 to float
  124803 = si2f i32 4 to float
  134809 = si2f i32 6 to float
  br bb %while.body327
while.body327:  pred(if.exit386, while.body327_preheader)
  num.phi1522 = phi [bb %if.exit386, i32 %411, bb %while.body327_preheader, i32 %325]
  332 = call float getfloat()
  334 = call float getfloat()
  41502 = fcmp ogt float %332, float %31501
  91507 = fneg float %332
  br i1 %41502, bb %336.ret.which.true, bb %while.body327.split1544
while.body327.split1544:  pred(while.body327, 336.ret.which.true)
  1546 = phi [bb %336.ret.which.true, float %332, bb %while.body327, float %91507]
  call void putfloat(float %1546)
  call void putch(i32 32)
  340 = call float my_pow(float %332, i32 2)
  call void putfloat(float %340)
  call void putch(i32 32)
  344 = call float my_sqrt(float %332)
  call void putfloat(float %344)
  call void putch(i32 32)
  348 = call float my_exp(float %332)
  call void putfloat(float %348)
  call void putch(i32 32)
  br i1 %41502, bb %then354, bb %else
while.exit328:  pred(entry323, if.exit386)
  ret i32 0
then354:  pred(while.body327.split1544)
  112794 = fsub float %332, float %304449
  114796 = fdiv float %112794, float %113795
  115797 = fadd float %304449, float %114796
  931419 = fdiv float %304449, float %304449
  931425 = fdiv float %304449, float %115797
  125804 = fmul float %124803, float %931425
  126805 = fadd float %931419, float %125804
  931431 = fdiv float %304449, float %332
  129807 = fadd float %126805, float %931431
  133808 = fmul float %129807, float %112794
  135810 = fdiv float %133808, float %134809
  233498 = call float asr5(float %304449, float %332, float %.pinned1537, float %135810, i32 1)
  call void putfloat(float %233498)
  br bb %if.exit355
if.exit355:  pred(then354, else)
  call void putch(i32 32)
  371 = fcmp ogt float %334, float %31501
  414 = and i1 %41502, i1 %371
  br i1 %414, bb %then373, bb %else375
else:  pred(while.body327.split1544)
  call void putch(i32 45)
  br bb %if.exit355
then373:  pred(if.exit355)
  112872 = fsub float %334, float %304449
  114874 = fdiv float %112872, float %113795
  115875 = fadd float %304449, float %114874
  931455 = fdiv float %304449, float %304449
  931461 = fdiv float %304449, float %115875
  125882 = fmul float %124803, float %931461
  126883 = fadd float %931455, float %125882
  931467 = fdiv float %304449, float %334
  129885 = fadd float %126883, float %931467
  133886 = fmul float %129885, float %112872
  135888 = fdiv float %133886, float %134809
  233510 = call float asr5(float %304449, float %334, float %.pinned1537, float %135888, i32 1)
  112911 = fsub float %332, float %304449
  114913 = fdiv float %112911, float %113795
  115914 = fadd float %304449, float %114913
  931479 = fdiv float %304449, float %115914
  125921 = fmul float %124803, float %931479
  126922 = fadd float %931455, float %125921
  931485 = fdiv float %304449, float %332
  129924 = fadd float %126922, float %931485
  133925 = fmul float %129924, float %112911
  135927 = fdiv float %133925, float %134809
  233516 = call float asr5(float %304449, float %332, float %.pinned1537, float %135927, i32 1)
  314426 = fdiv float %233510, float %233516
  call void putfloat(float %314426)
  br bb %if.exit374
if.exit374:  pred(then373, else375)
  call void putch(i32 32)
  br i1 %41502, bb %then385, bb %else387
else375:  pred(if.exit355)
  call void putch(i32 45)
  br bb %if.exit374
then385:  pred(if.exit374)
  112833 = fsub float %332, float %304449
  114835 = fdiv float %112833, float %113795
  115836 = fadd float %304449, float %114835
  931437 = fdiv float %304449, float %304449
  931443 = fdiv float %304449, float %115836
  125843 = fmul float %124803, float %931443
  126844 = fadd float %931437, float %125843
  931449 = fdiv float %304449, float %332
  129846 = fadd float %126844, float %931449
  133847 = fmul float %129846, float %112833
  135849 = fdiv float %133847, float %134809
  233504 = call float asr5(float %304449, float %332, float %.pinned1537, float %135849, i32 1)
  321418 = fmul float %334, float %233504
  322419 = call float my_exp(float %321418)
  call void putfloat(float %322419)
  br bb %if.exit386
if.exit386:  pred(then385, else387)
  call void putch(i32 10)
  411 = add i32 %num.phi1522, i32 -1
  330 = icmp ne i32 %411, i32 0
  br i1 %330, bb %while.body327, bb %while.exit328
else387:  pred(if.exit374)
  call void putch(i32 45)
  br bb %if.exit386
336.ret.which.true:  pred(while.body327)
  br bb %while.body327.split1544
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


