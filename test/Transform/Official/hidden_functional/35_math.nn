pure internal float my_exp(float x) {
entry272:  pred()
  275 = si2f i32 0 to float
  276 = fcmp olt float %x, float %275
  br i1 %276, bb %then277, bb %if.exit278
then277:  pred(entry272)
  280 = fneg float %x
  281 = call float my_exp(float %280)
  282 = si2f i32 1 to float
  283 = fdiv float %282, float %281
  ret float %283
if.exit278:  pred(entry272)
  286 = f2si float %x to i32
  290 = si2f i32 %286 to float
  291 = fsub float %x, float %290
  295 = call float my_pow(float 2.718282, i32 %286)
  298 = call float eee(float %291)
  301 = fmul float %295, float %298
  ret float %301
}

pure internal float eee(float x) {
entry234:  pred()
  237 = fcmp ogt float %x, float 0.001000
  242 = si2f i32 2 to float
  br i1 %237, bb %then238, bb %if.exit239
then238:  pred(entry234)
  243 = fdiv float %x, float %242
  244 = call float eee(float %243)
  247 = fmul float %244, float %244
  ret float %247
if.exit239:  pred(entry234)
  249 = si2f i32 1 to float
  250 = fadd float %249, float %x
  253 = fmul float %x, float %x
  255 = fdiv float %253, float %242
  256 = fadd float %250, float %255
  258 = call float my_pow(float %x, i32 3)
  259 = si2f i32 6 to float
  260 = fdiv float %258, float %259
  261 = fadd float %256, float %260
  263 = call float my_pow(float %x, i32 4)
  264 = si2f i32 24 to float
  265 = fdiv float %263, float %264
  266 = fadd float %261, float %265
  268 = call float my_pow(float %x, i32 5)
  269 = si2f i32 120 to float
  270 = fdiv float %268, float %269
  271 = fadd float %266, float %270
  ret float %271
}

pure internal float asr5(float a, float b, float eps, float A, i32 flag) {
entry157:  pred()
  167 = fsub float %b, float %a
  168 = si2f i32 2 to float
  169 = fdiv float %167, float %168
  170 = fadd float %a, float %169
  112535 = fsub float %170, float %a
  114537 = fdiv float %112535, float %168
  115538 = fadd float %a, float %114537
  117539 = icmp eq i32 %flag, i32 1
  921306 = si2f i32 1 to float
  124544 = si2f i32 4 to float
  134550 = si2f i32 6 to float
  137554 = icmp eq i32 %flag, i32 2
  981009 = fmul float %170, float %170
  156569 = si2f i32 0 to float
  br i1 %117539, bb %simpson.then118, bb %simpson.if.exit119
entry157.split:  pred(simpson.then118, simpson.then138, simpson.if.exit139)
  175.ret = phi [bb %simpson.then118, float %135551, bb %simpson.then138, float %155566, bb %simpson.if.exit139, float %156569]
  112574 = fsub float %b, float %170
  114576 = fdiv float %112574, float %168
  115577 = fadd float %170, float %114576
  br i1 %117539, bb %simpson.then118580, bb %simpson.if.exit119592
entry157.split.split:  pred(simpson.then118580, simpson.then138595, simpson.if.exit139607)
  180.ret = phi [bb %simpson.then118580, float %135590, bb %simpson.then138595, float %155605, bb %simpson.if.exit139607, float %156569]
  183 = fadd float %175.ret, float %180.ret
  185 = fsub float %183, float %A
  41505 = fcmp ogt float %185, float %156569
  91510 = fneg float %185
  br i1 %41505, bb %186.ret.which.true, bb %entry157.split.split.split1552
entry157.split.split.split1552:  pred(entry157.split.split, 186.ret.which.true)
  1554 = phi [bb %186.ret.which.true, float %185, bb %entry157.split.split, float %91510]
  188 = si2f i32 15 to float
  189 = fmul float %188, float %eps
  190 = fcmp ole float %1554, float %189
  br i1 %190, bb %then191, bb %if.exit192
then191:  pred(entry157.split.split.split1552)
  201 = fdiv float %185, float 15.000000
  202 = fadd float %183, float %201
  ret float %202
if.exit192:  pred(entry157.split.split.split1552)
  207 = fdiv float %eps, float %168
  210 = call float asr5(float %a, float %170, float %207, float %175.ret, i32 %flag)
  218 = call float asr5(float %170, float %b, float %207, float %180.ret, i32 %flag)
  219 = fadd float %210, float %218
  ret float %219
simpson.then118:  pred(entry157)
  931307 = fdiv float %921306, float %a
  931313 = fdiv float %921306, float %115538
  125545 = fmul float %124544, float %931313
  126546 = fadd float %931307, float %125545
  931319 = fdiv float %921306, float %170
  129548 = fadd float %126546, float %931319
  133549 = fmul float %129548, float %112535
  135551 = fdiv float %133549, float %134550
  br bb %entry157.split
simpson.if.exit119:  pred(entry157)
  br i1 %137554, bb %simpson.then138, bb %simpson.if.exit139
simpson.then138:  pred(simpson.if.exit119)
  98991 = fmul float %a, float %a
  100993 = fsub float %921306, float %98991
  101994 = call float my_sqrt(float %100993)
  103995 = fdiv float %921306, float %101994
  981000 = fmul float %115538, float %115538
  1001002 = fsub float %921306, float %981000
  1011003 = call float my_sqrt(float %1001002)
  1031004 = fdiv float %921306, float %1011003
  145560 = fmul float %124544, float %1031004
  146561 = fadd float %103995, float %145560
  1001011 = fsub float %921306, float %981009
  1011012 = call float my_sqrt(float %1001011)
  1031013 = fdiv float %921306, float %1011012
  149563 = fadd float %146561, float %1031013
  153564 = fmul float %149563, float %112535
  155566 = fdiv float %153564, float %134550
  br bb %entry157.split
simpson.if.exit139:  pred(simpson.if.exit119)
  br bb %entry157.split
simpson.then118580:  pred(entry157.split)
  931325 = fdiv float %921306, float %170
  931331 = fdiv float %921306, float %115577
  125584 = fmul float %124544, float %931331
  126585 = fadd float %931325, float %125584
  931337 = fdiv float %921306, float %b
  129587 = fadd float %126585, float %931337
  133588 = fmul float %129587, float %112574
  135590 = fdiv float %133588, float %134550
  br bb %entry157.split.split
simpson.if.exit119592:  pred(entry157.split)
  br i1 %137554, bb %simpson.then138595, bb %simpson.if.exit139607
simpson.then138595:  pred(simpson.if.exit119592)
  1001020 = fsub float %921306, float %981009
  1011021 = call float my_sqrt(float %1001020)
  1031022 = fdiv float %921306, float %1011021
  981027 = fmul float %115577, float %115577
  1001029 = fsub float %921306, float %981027
  1011030 = call float my_sqrt(float %1001029)
  1031031 = fdiv float %921306, float %1011030
  145599 = fmul float %124544, float %1031031
  146600 = fadd float %1031022, float %145599
  981036 = fmul float %b, float %b
  1001038 = fsub float %921306, float %981036
  1011039 = call float my_sqrt(float %1001038)
  1031040 = fdiv float %921306, float %1011039
  149602 = fadd float %146600, float %1031040
  153603 = fmul float %149602, float %112574
  155605 = fdiv float %153603, float %134550
  br bb %entry157.split.split
simpson.if.exit139607:  pred(simpson.if.exit119592)
  br bb %entry157.split.split
186.ret.which.true:  pred(entry157.split.split)
  br bb %entry157.split.split.split1552
}

pure internal float my_sqrt(float x) {
entry46:  pred()
  49 = si2f i32 100 to float
  50 = fcmp ogt float %x, float %49
  br i1 %50, bb %then51, bb %if.exit52
then51:  pred(entry46)
  55 = fdiv float %x, float %49
  56 = call float my_sqrt(float %55)
  57 = fmul float %56, float 10.000000
  ret float %57
if.exit52:  pred(entry46)
  60 = si2f i32 8 to float
  61 = fdiv float %x, float %60
  62 = fadd float %61, float 0.500000
  64 = si2f i32 2 to float
  65 = fmul float %64, float %x
  67 = si2f i32 4 to float
  68 = fadd float %67, float %x
  69 = fdiv float %65, float %68
  70 = fadd float %62, float %69
  br bb %while.body73
while.body73:  pred(while.body73, if.exit52)
  t.phi1529 = phi [bb %while.body73, float %84, bb %if.exit52, float %70]
  c.phi1528 = phi [bb %while.body73, i32 %422, bb %if.exit52, i32 10]
  81 = fdiv float %x, float %t.phi1529
  82 = fadd float %t.phi1529, float %81
  84 = fdiv float %82, float %64
  422 = add i32 %c.phi1528, i32 -1
  76 = icmp ne i32 %422, i32 0
  br i1 %76, bb %while.body73, bb %while.body73_exclu_exit
while.body73_exclu_exit:  pred(while.body73)
  ret float %84
}

pure internal float my_pow(float a, i32 n) {
entry10:  pred()
  14 = icmp slt i32 %n, i32 0
  br i1 %14, bb %then15, bb %if.exit16
then15:  pred(entry10)
  19 = sub i32 0, i32 %n
  20 = call float my_pow(float %a, i32 %19)
  21 = si2f i32 1 to float
  22 = fdiv float %21, float %20
  ret float %22
if.exit16:  pred(entry10)
  .pinned = pin float 1.000000
  281530 = icmp ne i32 %n, i32 0
  br i1 %281530, bb %while.body_preheader, bb %while.exit
while.body_preheader:  pred(if.exit16)
  br bb %while.body
while.body:  pred(while.body.split, while.body_preheader)
  a.stack.phi1534 = phi [bb %while.body.split, float %41, bb %while.body_preheader, float %a]
  n.stack.phi1533 = phi [bb %while.body.split, i32 %44, bb %while.body_preheader, i32 %n]
  res.phi4141532 = phi [bb %while.body.split, float %1557, bb %while.body_preheader, float %.pinned]
  423 = and i32 %n.stack.phi1533, i32 1
  424 = icmp ne i32 %423, i32 0
  37 = fmul float %res.phi4141532, float %a.stack.phi1534
  br i1 %424, bb %res.phi.which.true, bb %while.body.split
while.body.split:  pred(while.body, res.phi.which.true)
  1557 = phi [bb %res.phi.which.true, float %37, bb %while.body, float %res.phi4141532]
  41 = fmul float %a.stack.phi1534, float %a.stack.phi1534
  44 = sdiv i32 %n.stack.phi1533, i32 2
  28 = icmp ne i32 %44, i32 0
  br i1 %28, bb %while.body, bb %while.body_exclu_exit
while.exit:  pred(if.exit16, while.body_exclu_exit)
  1531 = phi [bb %while.body_exclu_exit, float %1557, bb %if.exit16, float %.pinned]
  ret float %1531
while.body_exclu_exit:  pred(while.body.split)
  br bb %while.exit
res.phi.which.true:  pred(while.body)
  br bb %while.body.split
}

external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry323:  pred()
  325 = call i32 getint()
  3301535 = icmp ne i32 %325, i32 0
  br i1 %3301535, bb %while.body327_preheader, bb %while.exit328
while.body327_preheader:  pred(entry323)
  .pinned1551 = pin float 0.000000
  31515 = si2f i32 0 to float
  304463 = si2f i32 1 to float
  113809 = si2f i32 2 to float
  124817 = si2f i32 4 to float
  134823 = si2f i32 6 to float
  931433 = fdiv float %304463, float %304463
  br bb %while.body327
while.body327:  pred(if.exit386, while.body327_preheader)
  num.phi1536 = phi [bb %if.exit386, i32 %425, bb %while.body327_preheader, i32 %325]
  332 = call float getfloat()
  334 = call float getfloat()
  41516 = fcmp ogt float %332, float %31515
  91521 = fneg float %332
  br i1 %41516, bb %336.ret.which.true, bb %while.body327.split1558
while.body327.split1558:  pred(while.body327, 336.ret.which.true)
  1560 = phi [bb %336.ret.which.true, float %332, bb %while.body327, float %91521]
  call void putfloat(float %1560)
  call void putch(i32 32)
  340 = call float my_pow(float %332, i32 2)
  call void putfloat(float %340)
  call void putch(i32 32)
  344 = call float my_sqrt(float %332)
  call void putfloat(float %344)
  call void putch(i32 32)
  348 = call float my_exp(float %332)
  call void putfloat(float %348)
  call void putch(i32 32)
  br i1 %41516, bb %then354, bb %else
while.exit328:  pred(entry323, if.exit386)
  ret i32 0
then354:  pred(while.body327.split1558)
  112808 = fsub float %332, float %304463
  114810 = fdiv float %112808, float %113809
  115811 = fadd float %304463, float %114810
  931439 = fdiv float %304463, float %115811
  125818 = fmul float %124817, float %931439
  126819 = fadd float %931433, float %125818
  931445 = fdiv float %304463, float %332
  129821 = fadd float %126819, float %931445
  133822 = fmul float %129821, float %112808
  135824 = fdiv float %133822, float %134823
  233512 = call float asr5(float %304463, float %332, float %.pinned1551, float %135824, i32 1)
  call void putfloat(float %233512)
  br bb %if.exit355
if.exit355:  pred(then354, else)
  call void putch(i32 32)
  371 = fcmp ogt float %334, float %31515
  428 = and i1 %41516, i1 %371
  br i1 %428, bb %then373, bb %else375
else:  pred(while.body327.split1558)
  call void putch(i32 45)
  br bb %if.exit355
then373:  pred(if.exit355)
  112886 = fsub float %334, float %304463
  114888 = fdiv float %112886, float %113809
  115889 = fadd float %304463, float %114888
  931475 = fdiv float %304463, float %115889
  125896 = fmul float %124817, float %931475
  126897 = fadd float %931433, float %125896
  931481 = fdiv float %304463, float %334
  129899 = fadd float %126897, float %931481
  133900 = fmul float %129899, float %112886
  135902 = fdiv float %133900, float %134823
  233524 = call float asr5(float %304463, float %334, float %.pinned1551, float %135902, i32 1)
  112925 = fsub float %332, float %304463
  114927 = fdiv float %112925, float %113809
  115928 = fadd float %304463, float %114927
  931493 = fdiv float %304463, float %115928
  125935 = fmul float %124817, float %931493
  126936 = fadd float %931433, float %125935
  931499 = fdiv float %304463, float %332
  129938 = fadd float %126936, float %931499
  133939 = fmul float %129938, float %112925
  135941 = fdiv float %133939, float %134823
  233530 = call float asr5(float %304463, float %332, float %.pinned1551, float %135941, i32 1)
  314440 = fdiv float %233524, float %233530
  call void putfloat(float %314440)
  br bb %if.exit374
if.exit374:  pred(then373, else375)
  call void putch(i32 32)
  br i1 %41516, bb %then385, bb %else387
else375:  pred(if.exit355)
  call void putch(i32 45)
  br bb %if.exit374
then385:  pred(if.exit374)
  112847 = fsub float %332, float %304463
  114849 = fdiv float %112847, float %113809
  115850 = fadd float %304463, float %114849
  931457 = fdiv float %304463, float %115850
  125857 = fmul float %124817, float %931457
  126858 = fadd float %931433, float %125857
  931463 = fdiv float %304463, float %332
  129860 = fadd float %126858, float %931463
  133861 = fmul float %129860, float %112847
  135863 = fdiv float %133861, float %134823
  233518 = call float asr5(float %304463, float %332, float %.pinned1551, float %135863, i32 1)
  321432 = fmul float %334, float %233518
  322433 = call float my_exp(float %321432)
  call void putfloat(float %322433)
  br bb %if.exit386
if.exit386:  pred(then385, else387)
  call void putch(i32 10)
  425 = add i32 %num.phi1536, i32 -1
  330 = icmp ne i32 %425, i32 0
  br i1 %330, bb %while.body327, bb %while.exit328
else387:  pred(if.exit374)
  call void putch(i32 45)
  br bb %if.exit386
336.ret.which.true:  pred(while.body327)
  br bb %while.body327.split1558
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


