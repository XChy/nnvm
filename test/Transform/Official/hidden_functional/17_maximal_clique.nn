global ptr m init with i32 0
global ptr n init with i32 0
global ptr store init with 30 x i32 zeros
global ptr maxM init with i32 600
global ptr graph init with 900 x i32 zeros
global ptr maxN init with i32 30
external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry82:
  %edges = stack 4800
  83 = call i32 getint()
  store i32 %83 to ptr @n
  84 = call i32 getint()
  store i32 %84 to ptr @m
  br bb %while.cond87
while.cond87:
  i86.phi152 = phi [bb %entry82, i32 0, bb %while.body88, i32 %107]
  m.load = load i32 from ptr @m
  92 = icmp slt i32 %i86.phi152, i32 %m.load
  93 = icmp ne i1 %92, i1 0
  br i1 %93, bb %while.body88, bb %while.exit89
while.body88:
  95 = mul i32 %i86.phi152, i32 8
  96 = ptradd ptr %edges, i32 %95
  98 = ptradd ptr %96, i32 0
  99 = call i32 getint()
  store i32 %99 to ptr %98
  101 = mul i32 %i86.phi152, i32 8
  102 = ptradd ptr %edges, i32 %101
  104 = ptradd ptr %102, i32 4
  105 = call i32 getint()
  store i32 %105 to ptr %104
  107 = add i32 %i86.phi152, i32 1
  br bb %while.cond87
while.exit89:
  br bb %while.cond108
while.cond108:
  i86.phi = phi [bb %while.exit89, i32 0, bb %while.body109, i32 %148]
  m.load112 = load i32 from ptr @m
  113 = icmp slt i32 %i86.phi, i32 %m.load112
  114 = icmp ne i1 %113, i1 0
  br i1 %114, bb %while.body109, bb %while.exit110
while.body109:
  116 = mul i32 %i86.phi, i32 8
  117 = ptradd ptr %edges, i32 %116
  119 = ptradd ptr %117, i32 0
  119.load = load i32 from ptr %119
  121 = mul i32 %119.load, i32 120
  122 = ptradd ptr @graph, i32 %121
  124 = mul i32 %i86.phi, i32 8
  125 = ptradd ptr %edges, i32 %124
  127 = ptradd ptr %125, i32 4
  127.load = load i32 from ptr %127
  129 = mul i32 %127.load, i32 4
  130 = ptradd ptr %122, i32 %129
  store i32 1 to ptr %130
  132 = mul i32 %i86.phi, i32 8
  133 = ptradd ptr %edges, i32 %132
  135 = ptradd ptr %133, i32 4
  135.load = load i32 from ptr %135
  137 = mul i32 %135.load, i32 120
  138 = ptradd ptr @graph, i32 %137
  140 = mul i32 %i86.phi, i32 8
  141 = ptradd ptr %edges, i32 %140
  143 = ptradd ptr %141, i32 0
  143.load = load i32 from ptr %143
  145 = mul i32 %143.load, i32 4
  146 = ptradd ptr %138, i32 %145
  store i32 1 to ptr %146
  148 = add i32 %i86.phi, i32 1
  br bb %while.cond108
while.exit110:
  149 = call i32 maxCliques(i32 0, i32 1)
  call void putint(i32 %149)
  ret i32 0
}

external float getfloat()

external void putfloat(float )

i32 is_clique(i32 num) {
entry:
  br bb %while.cond
while.cond:
  i.phi = phi [bb %entry, i32 1, bb %while.exit15, i32 %39]
  8 = icmp slt i32 %i.phi, i32 %num
  9 = icmp ne i1 %8, i1 0
  br i1 %9, bb %while.body, bb %while.exit
while.body:
  12 = add i32 %i.phi, i32 1
  br bb %while.cond13
while.exit:
  ret i32 1
while.cond13:
  j.phi = phi [bb %while.body, i32 %12, bb %if.exit, i32 %37]
  18 = icmp slt i32 %j.phi, i32 %num
  19 = icmp ne i1 %18, i1 0
  br i1 %19, bb %while.body14, bb %while.exit15
while.body14:
  21 = mul i32 %i.phi, i32 4
  22 = ptradd ptr @store, i32 %21
  22.load = load i32 from ptr %22
  24 = mul i32 %22.load, i32 120
  25 = ptradd ptr @graph, i32 %24
  27 = mul i32 %j.phi, i32 4
  28 = ptradd ptr @store, i32 %27
  28.load = load i32 from ptr %28
  30 = mul i32 %28.load, i32 4
  31 = ptradd ptr %25, i32 %30
  31.load = load i32 from ptr %31
  33 = icmp eq i32 %31.load, i32 0
  br i1 %33, bb %then, bb %if.exit
while.exit15:
  39 = add i32 %i.phi, i32 1
  br bb %while.cond
then:
  ret i32 0
if.exit:
  37 = add i32 %j.phi, i32 1
  br bb %while.cond13
}

external void putch(i32 )

external void _sysy_stoptime(i32 )

i32 maxCliques(i32 i, i32 k) {
entry40:
  br bb %while.cond45
while.cond45:
  tmp.phi162 = phi [bb %entry40, i32 ub, bb %if.exit61, i32 %tmp.phi]
  j44.phi = phi [bb %entry40, i32 1, bb %if.exit61, i32 %80]
  max_.phi158 = phi [bb %entry40, i32 0, bb %if.exit61, i32 %max_.phi157]
  n.load = load i32 from ptr @n
  50 = icmp sle i32 %j44.phi, i32 %n.load
  51 = icmp ne i1 %50, i1 0
  br i1 %51, bb %while.body46, bb %while.exit47
while.body46:
  53 = mul i32 %k, i32 4
  54 = ptradd ptr @store, i32 %53
  store i32 %j44.phi to ptr %54
  57 = add i32 %k, i32 1
  58 = call i32 is_clique(i32 %57)
  59 = icmp ne i32 %58, i32 0
  br i1 %59, bb %then60, bb %if.exit61
while.exit47:
  ret i32 %max_.phi158
then60:
  64 = icmp sgt i32 %k, i32 %max_.phi158
  br i1 %64, bb %then65, bb %if.exit66
if.exit61:
  tmp.phi = phi [bb %while.body46, i32 %tmp.phi162, bb %if.exit77, i32 %72]
  max_.phi157 = phi [bb %while.body46, i32 %max_.phi158, bb %if.exit77, i32 %max_.phi]
  80 = add i32 %j44.phi, i32 1
  br bb %while.cond45
then65:
  br bb %if.exit66
if.exit66:
  max_.phi159 = phi [bb %then60, i32 %max_.phi158, bb %then65, i32 %k]
  71 = add i32 %k, i32 1
  72 = call i32 maxCliques(i32 %j44.phi, i32 %71)
  75 = icmp sgt i32 %72, i32 %max_.phi159
  br i1 %75, bb %then76, bb %if.exit77
then76:
  br bb %if.exit77
if.exit77:
  max_.phi = phi [bb %if.exit66, i32 %max_.phi159, bb %then76, i32 %72]
  br bb %if.exit61
}

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


