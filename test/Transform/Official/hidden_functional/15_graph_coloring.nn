immutable global ptr LF init with i32 10
immutable global ptr space init with i32 32
immutable global ptr V init with i32 4
external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

i32 graphColoring(ptr graph, i32 m, i32 i, ptr color) {
entry81:  pred()
  86 = icmp eq i32 %i, i32 4
  br i1 %86, bb %then87, bb %if.exit88
then87:  pred(entry81)
  br bb %isSafe.while.cond34
then87.split:  pred(isSafe.while.exit36, isSafe.then)
  89.ret = phi [bb %isSafe.while.exit36, i32 1, bb %isSafe.then, i32 0]
  90 = icmp ne i32 %89.ret, i32 0
  br i1 %90, bb %then91, bb %if.exit92
if.exit88:  pred(entry81)
  br bb %while.cond95
then91:  pred(then87.split)
  br bb %printSolution.while.body
if.exit92:  pred(then87.split)
  ret i32 0
while.cond95:  pred(if.exit88, if.exit113)
  j94.phi = phi [bb %if.exit88, i32 1, bb %if.exit113, i32 %120]
  100 = icmp sle i32 %j94.phi, i32 %m
  br i1 %100, bb %while.body96, bb %while.exit97
while.body96:  pred(while.cond95)
  174 = shl i32 %i, i32 2
  104 = ptradd ptr %color, i32 %174
  store i32 %j94.phi to ptr %104
  109 = add i32 %i, i32 1
  110 = call i32 graphColoring(ptr %graph, i32 %m, i32 %109, ptr %color)
  111 = icmp ne i32 %110, i32 0
  br i1 %111, bb %then112, bb %if.exit113
while.exit97:  pred(while.cond95)
  ret i32 0
then112:  pred(while.body96)
  ret i32 1
if.exit113:  pred(while.body96)
  store i32 0 to ptr %104
  120 = add i32 %j94.phi, i32 1
  br bb %while.cond95
isSafe.while.cond34:  pred(then87, isSafe.while.exit46)
  select.phi172186 = phi [bb %then87, i1 0, bb %isSafe.while.exit46, i1 %select.phi171196]
  i33.phi187 = phi [bb %then87, i32 0, bb %isSafe.while.exit46, i32 %43191]
  39188 = icmp slt i32 %i33.phi187, i32 4
  br i1 %39188, bb %isSafe.while.body35, bb %isSafe.while.exit36
isSafe.while.body35:  pred(isSafe.while.cond34)
  43191 = add i32 %i33.phi187, i32 1
  br bb %isSafe.while.cond44
isSafe.while.exit36:  pred(isSafe.while.cond34)
  br bb %then87.split
isSafe.while.cond44:  pred(isSafe.while.body35, isSafe.if.exit)
  select.phi171196 = phi [bb %isSafe.while.body35, i1 %select.phi172186, bb %isSafe.if.exit, i1 %select.phi221]
  j.phi197 = phi [bb %isSafe.while.body35, i32 %43191, bb %isSafe.if.exit, i32 %77226]
  49198 = icmp slt i32 %j.phi197, i32 4
  br i1 %49198, bb %isSafe.while.body45, bb %isSafe.while.exit46
isSafe.while.body45:  pred(isSafe.while.cond44)
  177201 = shl i32 %i33.phi187, i32 4
  53202 = ptradd ptr %graph, i32 %177201
  178203 = shl i32 %j.phi197, i32 2
  56204 = ptradd ptr %53202, i32 %178203
  56.load205 = load i32 from ptr %56204
  58206 = icmp ne i32 %56.load205, i32 0
  br i1 %58206, bb %isSafe.select.then, bb %isSafe.select.else
isSafe.while.exit46:  pred(isSafe.while.cond44)
  br bb %isSafe.while.cond34
isSafe.select.then:  pred(isSafe.while.body45)
  65211 = ptradd ptr %color, i32 %178203
  65.load212 = load i32 from ptr %65211
  180213 = shl i32 %i33.phi187, i32 2
  69214 = ptradd ptr %color, i32 %180213
  69.load215 = load i32 from ptr %69214
  71216 = icmp eq i32 %65.load212, i32 %69.load215
  br bb %isSafe.select.exit
isSafe.select.else:  pred(isSafe.while.body45)
  br bb %isSafe.select.exit
isSafe.select.exit:  pred(isSafe.select.then, isSafe.select.else)
  select.phi221 = phi [bb %isSafe.select.else, i1 0, bb %isSafe.select.then, i1 %71216]
  br i1 %select.phi221, bb %isSafe.then, bb %isSafe.if.exit
isSafe.then:  pred(isSafe.select.exit)
  br bb %then87.split
isSafe.if.exit:  pred(isSafe.select.exit)
  77226 = add i32 %j.phi197, i32 1
  br bb %isSafe.while.cond44
printSolution.while.body:  pred(printSolution.while.body, then91)
  i.phi245260 = phi [bb %printSolution.while.body, i32 %18254, bb %then91, i32 0]
  181249 = shl i32 %i.phi245260, i32 2
  11250 = ptradd ptr %color, i32 %181249
  11.load251 = load i32 from ptr %11250
  call void putint(i32 %11.load251)
  call void putch(i32 32)
  18254 = add i32 %i.phi245260, i32 1
  7246 = icmp slt i32 %18254, i32 4
  br i1 %7246, bb %printSolution.while.body, bb %printSolution.while.exit
printSolution.while.exit:  pred(printSolution.while.body)
  call void putch(i32 10)
  ret i32 1
}

external i32 getfarray(ptr )

i32 main() {
entry121:  pred()
  %color = stack 16
  %graph = stack 64
  store i32 0 to ptr %graph
  arr.index124 = ptradd ptr %graph, i32 4
  store i32 1 to ptr %arr.index124
  arr.index125 = ptradd ptr %graph, i32 8
  store i32 1 to ptr %arr.index125
  arr.index126 = ptradd ptr %graph, i32 12
  store i32 1 to ptr %arr.index126
  arr.index127 = ptradd ptr %graph, i32 16
  store i32 1 to ptr %arr.index127
  arr.index128 = ptradd ptr %graph, i32 20
  store i32 0 to ptr %arr.index128
  arr.index129 = ptradd ptr %graph, i32 24
  store i32 1 to ptr %arr.index129
  arr.index130 = ptradd ptr %graph, i32 28
  store i32 0 to ptr %arr.index130
  arr.index131 = ptradd ptr %graph, i32 32
  store i32 1 to ptr %arr.index131
  arr.index132 = ptradd ptr %graph, i32 36
  store i32 1 to ptr %arr.index132
  arr.index133 = ptradd ptr %graph, i32 40
  store i32 0 to ptr %arr.index133
  arr.index134 = ptradd ptr %graph, i32 44
  store i32 1 to ptr %arr.index134
  arr.index135 = ptradd ptr %graph, i32 48
  store i32 1 to ptr %arr.index135
  arr.index136 = ptradd ptr %graph, i32 52
  store i32 0 to ptr %arr.index136
  arr.index137 = ptradd ptr %graph, i32 56
  store i32 1 to ptr %arr.index137
  arr.index138 = ptradd ptr %graph, i32 60
  store i32 0 to ptr %arr.index138
  br bb %while.body143
while.body143:  pred(while.body143, entry121)
  i141.phi262 = phi [bb %while.body143, i32 %155, bb %entry121, i32 0]
  176 = shl i32 %i141.phi262, i32 2
  151 = ptradd ptr %color, i32 %176
  store i32 0 to ptr %151
  155 = add i32 %i141.phi262, i32 1
  147 = icmp slt i32 %155, i32 4
  br i1 %147, bb %while.body143, bb %while.exit144
while.exit144:  pred(while.body143)
  157 = call i32 graphColoring(ptr %graph, i32 3, i32 0, ptr %color)
  158 = icmp ne i32 %157, i32 0
  159 = xor i1 %158, i1 -1
  160 = zext i1 %159 to i32
  161 = icmp ne i32 %160, i32 0
  br i1 %161, bb %then162, bb %if.exit163
then162:  pred(while.exit144)
  call void putch(i32 78)
  call void putch(i32 111)
  call void putch(i32 116)
  call void putch(i32 32)
  call void putch(i32 101)
  call void putch(i32 120)
  call void putch(i32 105)
  call void putch(i32 115)
  call void putch(i32 116)
  br bb %if.exit163
if.exit163:  pred(while.exit144, then162)
  ret i32 0
}

i32 isSafe(ptr graph, ptr color) {
entry32:  pred()
  br bb %while.cond34
while.cond34:  pred(entry32, while.exit46)
  select.phi172 = phi [bb %entry32, i1 0, bb %while.exit46, i1 %select.phi171]
  i33.phi = phi [bb %entry32, i32 0, bb %while.exit46, i32 %43]
  39 = icmp slt i32 %i33.phi, i32 4
  br i1 %39, bb %while.body35, bb %while.exit36
while.body35:  pred(while.cond34)
  43 = add i32 %i33.phi, i32 1
  br bb %while.cond44
while.exit36:  pred(while.cond34)
  ret i32 1
while.cond44:  pred(while.body35, if.exit)
  select.phi171 = phi [bb %while.body35, i1 %select.phi172, bb %if.exit, i1 %select.phi]
  j.phi = phi [bb %while.body35, i32 %43, bb %if.exit, i32 %77]
  49 = icmp slt i32 %j.phi, i32 4
  br i1 %49, bb %while.body45, bb %while.exit46
while.body45:  pred(while.cond44)
  177 = shl i32 %i33.phi, i32 4
  53 = ptradd ptr %graph, i32 %177
  178 = shl i32 %j.phi, i32 2
  56 = ptradd ptr %53, i32 %178
  56.load = load i32 from ptr %56
  58 = icmp ne i32 %56.load, i32 0
  br i1 %58, bb %select.then, bb %select.else
while.exit46:  pred(while.cond44)
  br bb %while.cond34
select.then:  pred(while.body45)
  65 = ptradd ptr %color, i32 %178
  65.load = load i32 from ptr %65
  180 = shl i32 %i33.phi, i32 2
  69 = ptradd ptr %color, i32 %180
  69.load = load i32 from ptr %69
  71 = icmp eq i32 %65.load, i32 %69.load
  br bb %select.exit
select.else:  pred(while.body45)
  br bb %select.exit
select.exit:  pred(select.then, select.else)
  select.phi = phi [bb %select.else, i1 0, bb %select.then, i1 %71]
  br i1 %select.phi, bb %then, bb %if.exit
then:  pred(select.exit)
  ret i32 0
if.exit:  pred(select.exit)
  77 = add i32 %j.phi, i32 1
  br bb %while.cond44
}

void printMessage() {
entry21:  pred()
  call void putch(i32 78)
  call void putch(i32 111)
  call void putch(i32 116)
  call void putch(i32 32)
  call void putch(i32 101)
  call void putch(i32 120)
  call void putch(i32 105)
  call void putch(i32 115)
  call void putch(i32 116)
  ret 
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void _sysy_stoptime(i32 )

void printSolution(ptr color) {
entry:  pred()
  br bb %while.body
while.body:  pred(while.body, entry)
  i.phi264 = phi [bb %while.body, i32 %18, bb %entry, i32 0]
  181 = shl i32 %i.phi264, i32 2
  11 = ptradd ptr %color, i32 %181
  11.load = load i32 from ptr %11
  call void putint(i32 %11.load)
  call void putch(i32 32)
  18 = add i32 %i.phi264, i32 1
  7 = icmp slt i32 %18, i32 4
  br i1 %7, bb %while.body, bb %while.exit
while.exit:  pred(while.body)
  call void putch(i32 10)
  ret 
}

external void putfarray(i32 , ptr )


