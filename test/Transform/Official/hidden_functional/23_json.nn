global ptr buffer init with 50000000 x i32 zeros
global ptr pos init with i32 0
i32 detect_item(i32 type, ptr buf, i32 len) {
entry63:
  %mNull = stack 16
  %mFalse = stack 20
  %mTrue = stack 16
  pos.load66 = load i32 from ptr @pos
  68 = icmp sge i32 %pos.load66, i32 %len
  br i1 %68, bb %then69, bb %if.exit70
then69:
  ret i32 0
if.exit70:
  br bb %skip_space.entry12
then75:
  pos.load78 = load i32 from ptr @pos
  79 = mul i32 %pos.load78, i32 4
  80 = ptradd ptr %buf, i32 %79
  80.load = load i32 from ptr %80
  82 = icmp eq i32 %80.load, i32 123
  br i1 %82, bb %then83, bb %else85
if.exit76:
  ret i32 1
else77:
  170 = icmp eq i32 %type, i32 1
  br i1 %170, bb %then171, bb %else173
then83:
  87 = call i32 detect_item(i32 4, ptr %buf, i32 %len)
  ret i32 %87
else85:
  pos.load88 = load i32 from ptr @pos
  89 = mul i32 %pos.load88, i32 4
  90 = ptradd ptr %buf, i32 %89
  90.load = load i32 from ptr %90
  92 = icmp eq i32 %90.load, i32 91
  br i1 %92, bb %then93, bb %else95
then93:
  97 = call i32 detect_item(i32 3, ptr %buf, i32 %len)
  ret i32 %97
else95:
  pos.load98 = load i32 from ptr @pos
  99 = mul i32 %pos.load98, i32 4
  100 = ptradd ptr %buf, i32 %99
  100.load = load i32 from ptr %100
  102 = icmp eq i32 %100.load, i32 34
  br i1 %102, bb %then103, bb %else105
then103:
  107 = call i32 detect_item(i32 2, ptr %buf, i32 %len)
  ret i32 %107
else105:
  pos.load108 = load i32 from ptr @pos
  109 = mul i32 %pos.load108, i32 4
  110 = ptradd ptr %buf, i32 %109
  110.load = load i32 from ptr %110
  31931 = icmp sge i32 %110.load, i32 48
  br i1 %31931, bb %is_number.then, bb %is_number.else
else105.split:
  112.ret = phi [bb %is_number.else, i32 0, bb %is_number.then9, i32 1, bb %is_number.else11, i32 0]
  113 = icmp eq i32 %112.ret, i32 1
  br i1 %113, bb %then114, bb %else116
then114:
  118 = call i32 detect_item(i32 1, ptr %buf, i32 %len)
  ret i32 %118
else116:
  pos.load119 = load i32 from ptr @pos
  120 = mul i32 %pos.load119, i32 4
  121 = ptradd ptr %buf, i32 %120
  121.load = load i32 from ptr %121
  123 = icmp eq i32 %121.load, i32 43
  br i1 %123, bb %then124, bb %else126
then124:
  128 = call i32 detect_item(i32 1, ptr %buf, i32 %len)
  ret i32 %128
else126:
  pos.load129 = load i32 from ptr @pos
  130 = mul i32 %pos.load129, i32 4
  131 = ptradd ptr %buf, i32 %130
  131.load = load i32 from ptr %131
  133 = icmp eq i32 %131.load, i32 45
  br i1 %133, bb %then134, bb %else136
then134:
  138 = call i32 detect_item(i32 1, ptr %buf, i32 %len)
  ret i32 %138
else136:
  pos.load139 = load i32 from ptr @pos
  140 = mul i32 %pos.load139, i32 4
  141 = ptradd ptr %buf, i32 %140
  141.load = load i32 from ptr %141
  143 = icmp eq i32 %141.load, i32 116
  br i1 %143, bb %then144, bb %else146
then144:
  148 = call i32 detect_item(i32 5, ptr %buf, i32 %len)
  ret i32 %148
else146:
  pos.load149 = load i32 from ptr @pos
  150 = mul i32 %pos.load149, i32 4
  151 = ptradd ptr %buf, i32 %150
  151.load = load i32 from ptr %151
  153 = icmp eq i32 %151.load, i32 102
  br i1 %153, bb %then154, bb %else156
then154:
  158 = call i32 detect_item(i32 6, ptr %buf, i32 %len)
  ret i32 %158
else156:
  pos.load159 = load i32 from ptr @pos
  160 = mul i32 %pos.load159, i32 4
  161 = ptradd ptr %buf, i32 %160
  161.load = load i32 from ptr %161
  163 = icmp eq i32 %161.load, i32 110
  br i1 %163, bb %then164, bb %else166
then164:
  168 = call i32 detect_item(i32 7, ptr %buf, i32 %len)
  ret i32 %168
else166:
  ret i32 0
then171:
  pos.load174 = load i32 from ptr @pos
  175 = mul i32 %pos.load174, i32 4
  176 = ptradd ptr %buf, i32 %175
  176.load = load i32 from ptr %176
  178 = icmp eq i32 %176.load, i32 43
  br i1 %178, bb %then179, bb %else181
if.exit172:
  br bb %if.exit76
else173:
  315 = icmp eq i32 %type, i32 2
  br i1 %315, bb %then316, bb %else318
then179:
  pos.load182 = load i32 from ptr @pos
  183 = add i32 %pos.load182, i32 1
  store i32 %183 to ptr @pos
  br bb %if.exit180
if.exit180:
  pos.load193 = load i32 from ptr @pos
  195 = icmp sge i32 %pos.load193, i32 %len
  br i1 %195, bb %then196, bb %else198
else181:
  pos.load184 = load i32 from ptr @pos
  185 = mul i32 %pos.load184, i32 4
  186 = ptradd ptr %buf, i32 %185
  186.load = load i32 from ptr %186
  188 = icmp eq i32 %186.load, i32 45
  br i1 %188, bb %then189, bb %if.exit190
then189:
  pos.load191 = load i32 from ptr @pos
  192 = add i32 %pos.load191, i32 1
  store i32 %192 to ptr @pos
  br bb %if.exit190
if.exit190:
  br bb %if.exit180
then196:
  ret i32 0
if.exit197:
  br bb %while.cond207
else198:
  pos.load199 = load i32 from ptr @pos
  200 = mul i32 %pos.load199, i32 4
  201 = ptradd ptr %buf, i32 %200
  201.load = load i32 from ptr %201
  31945 = icmp sge i32 %201.load, i32 48
  br i1 %31945, bb %is_number.then1947, bb %is_number.else1950
else198.split:
  203.ret = phi [bb %is_number.else1950, i32 0, bb %is_number.then91952, i32 1, bb %is_number.else111954, i32 0]
  204 = icmp eq i32 %203.ret, i32 0
  br i1 %204, bb %then205, bb %if.exit206
then205:
  ret i32 0
if.exit206:
  br bb %if.exit197
while.cond207:
  pos.load210 = load i32 from ptr @pos
  212 = icmp slt i32 %pos.load210, i32 %len
  br i1 %212, bb %while.body208, bb %while.exit209
while.body208:
  pos.load214 = load i32 from ptr @pos
  215 = mul i32 %pos.load214, i32 4
  216 = ptradd ptr %buf, i32 %215
  216.load = load i32 from ptr %216
  31959 = icmp sge i32 %216.load, i32 48
  br i1 %31959, bb %is_number.then1961, bb %is_number.else1964
while.body208.split:
  218.ret = phi [bb %is_number.else1964, i32 0, bb %is_number.then91966, i32 1, bb %is_number.else111968, i32 0]
  219 = icmp ne i32 %218.ret, i32 1
  br i1 %219, bb %then220, bb %if.exit221
while.exit209:
  pos.load224 = load i32 from ptr @pos
  226 = icmp slt i32 %pos.load224, i32 %len
  br i1 %226, bb %then227, bb %if.exit228
then220:
  br bb %while.exit209
if.exit221:
  pos.load222 = load i32 from ptr @pos
  223 = add i32 %pos.load222, i32 1
  store i32 %223 to ptr @pos
  br bb %while.cond207
then227:
  pos.load229 = load i32 from ptr @pos
  230 = mul i32 %pos.load229, i32 4
  231 = ptradd ptr %buf, i32 %230
  231.load = load i32 from ptr %231
  233 = icmp eq i32 %231.load, i32 46
  br i1 %233, bb %then234, bb %if.exit235
if.exit228:
  pos.load255 = load i32 from ptr @pos
  257 = icmp slt i32 %pos.load255, i32 %len
  br i1 %257, bb %then258, bb %if.exit259
then234:
  pos.load236 = load i32 from ptr @pos
  237 = add i32 %pos.load236, i32 1
  store i32 %237 to ptr @pos
  br bb %while.cond238
if.exit235:
  br bb %if.exit228
while.cond238:
  pos.load241 = load i32 from ptr @pos
  243 = icmp slt i32 %pos.load241, i32 %len
  br i1 %243, bb %while.body239, bb %while.exit240
while.body239:
  pos.load245 = load i32 from ptr @pos
  246 = mul i32 %pos.load245, i32 4
  247 = ptradd ptr %buf, i32 %246
  247.load = load i32 from ptr %247
  31973 = icmp sge i32 %247.load, i32 48
  br i1 %31973, bb %is_number.then1975, bb %is_number.else1978
while.body239.split:
  249.ret = phi [bb %is_number.else1978, i32 0, bb %is_number.then91980, i32 1, bb %is_number.else111982, i32 0]
  250 = icmp ne i32 %249.ret, i32 1
  br i1 %250, bb %then251, bb %if.exit252
while.exit240:
  br bb %if.exit235
then251:
  br bb %while.exit240
if.exit252:
  pos.load253 = load i32 from ptr @pos
  254 = add i32 %pos.load253, i32 1
  store i32 %254 to ptr @pos
  br bb %while.cond238
then258:
  pos.load260 = load i32 from ptr @pos
  261 = mul i32 %pos.load260, i32 4
  262 = ptradd ptr %buf, i32 %261
  262.load = load i32 from ptr %262
  264 = icmp eq i32 %262.load, i32 101
  br i1 %264, bb %then265, bb %if.exit266
if.exit259:
  br bb %if.exit172
then265:
  pos.load267 = load i32 from ptr @pos
  268 = add i32 %pos.load267, i32 1
  store i32 %268 to ptr @pos
  271 = icmp slt i32 %268, i32 %len
  br i1 %271, bb %then272, bb %if.exit273
if.exit266:
  br bb %if.exit259
then272:
  pos.load274 = load i32 from ptr @pos
  275 = mul i32 %pos.load274, i32 4
  276 = ptradd ptr %buf, i32 %275
  276.load = load i32 from ptr %276
  278 = icmp eq i32 %276.load, i32 43
  br i1 %278, bb %then279, bb %if.exit280
if.exit273:
  pos.load283 = load i32 from ptr @pos
  285 = icmp slt i32 %pos.load283, i32 %len
  br i1 %285, bb %then286, bb %if.exit287
then279:
  pos.load281 = load i32 from ptr @pos
  282 = add i32 %pos.load281, i32 1
  store i32 %282 to ptr @pos
  br bb %if.exit280
if.exit280:
  br bb %if.exit273
then286:
  pos.load288 = load i32 from ptr @pos
  289 = mul i32 %pos.load288, i32 4
  290 = ptradd ptr %buf, i32 %289
  290.load = load i32 from ptr %290
  292 = icmp eq i32 %290.load, i32 45
  br i1 %292, bb %then293, bb %if.exit294
if.exit287:
  br bb %while.cond297
then293:
  pos.load295 = load i32 from ptr @pos
  296 = add i32 %pos.load295, i32 1
  store i32 %296 to ptr @pos
  br bb %if.exit294
if.exit294:
  br bb %if.exit287
while.cond297:
  pos.load300 = load i32 from ptr @pos
  302 = icmp slt i32 %pos.load300, i32 %len
  br i1 %302, bb %while.body298, bb %while.exit299
while.body298:
  pos.load304 = load i32 from ptr @pos
  305 = mul i32 %pos.load304, i32 4
  306 = ptradd ptr %buf, i32 %305
  306.load = load i32 from ptr %306
  31987 = icmp sge i32 %306.load, i32 48
  br i1 %31987, bb %is_number.then1989, bb %is_number.else1992
while.body298.split:
  308.ret = phi [bb %is_number.else1992, i32 0, bb %is_number.then91994, i32 1, bb %is_number.else111996, i32 0]
  309 = icmp ne i32 %308.ret, i32 1
  br i1 %309, bb %then310, bb %if.exit311
while.exit299:
  br bb %if.exit266
then310:
  br bb %while.exit299
if.exit311:
  pos.load312 = load i32 from ptr @pos
  313 = add i32 %pos.load312, i32 1
  store i32 %313 to ptr @pos
  br bb %while.cond297
then316:
  pos.load319 = load i32 from ptr @pos
  320 = add i32 %pos.load319, i32 1
  store i32 %320 to ptr @pos
  br bb %while.cond321
if.exit317:
  br bb %if.exit172
else318:
  363 = icmp eq i32 %type, i32 3
  br i1 %363, bb %then364, bb %else366
while.cond321:
  pos.load324 = load i32 from ptr @pos
  326 = icmp slt i32 %pos.load324, i32 %len
  br i1 %326, bb %while.body322, bb %while.exit323
while.body322:
  pos.load328 = load i32 from ptr @pos
  329 = mul i32 %pos.load328, i32 4
  330 = ptradd ptr %buf, i32 %329
  330.load = load i32 from ptr %330
  332 = icmp eq i32 %330.load, i32 34
  br i1 %332, bb %then333, bb %if.exit334
while.exit323:
  pos.load347 = load i32 from ptr @pos
  349 = icmp sge i32 %pos.load347, i32 %len
  br i1 %349, bb %then350, bb %else352
then333:
  br bb %while.exit323
if.exit334:
  pos.load335 = load i32 from ptr @pos
  336 = mul i32 %pos.load335, i32 4
  337 = ptradd ptr %buf, i32 %336
  337.load = load i32 from ptr %337
  339 = icmp eq i32 %337.load, i32 92
  br i1 %339, bb %then340, bb %else342
then340:
  pos.load343 = load i32 from ptr @pos
  344 = add i32 %pos.load343, i32 2
  store i32 %344 to ptr @pos
  br bb %if.exit341
if.exit341:
  br bb %while.cond321
else342:
  pos.load345 = load i32 from ptr @pos
  346 = add i32 %pos.load345, i32 1
  store i32 %346 to ptr @pos
  br bb %if.exit341
then350:
  ret i32 0
else352:
  pos.load353 = load i32 from ptr @pos
  354 = mul i32 %pos.load353, i32 4
  355 = ptradd ptr %buf, i32 %354
  355.load = load i32 from ptr %355
  357 = icmp ne i32 %355.load, i32 34
  br i1 %357, bb %then358, bb %if.exit359
then358:
  ret i32 0
if.exit359:
  pos.load360 = load i32 from ptr @pos
  361 = add i32 %pos.load360, i32 1
  store i32 %361 to ptr @pos
  br bb %if.exit317
then364:
  pos.load367 = load i32 from ptr @pos
  368 = add i32 %pos.load367, i32 1
  store i32 %368 to ptr @pos
  br bb %skip_space.entry12858
if.exit365:
  br bb %if.exit317
else366:
  429 = icmp eq i32 %type, i32 4
  br i1 %429, bb %then430, bb %else432
then374:
  pos.load376 = load i32 from ptr @pos
  377 = mul i32 %pos.load376, i32 4
  378 = ptradd ptr %buf, i32 %377
  378.load = load i32 from ptr %378
  380 = icmp eq i32 %378.load, i32 93
  br i1 %380, bb %then381, bb %if.exit382
if.exit375:
  386 = call i32 detect_item(i32 0, ptr %buf, i32 %len)
  387 = icmp eq i32 %386, i32 0
  br i1 %387, bb %then388, bb %if.exit389
then381:
  pos.load383 = load i32 from ptr @pos
  384 = add i32 %pos.load383, i32 1
  store i32 %384 to ptr @pos
  ret i32 1
if.exit382:
  br bb %if.exit375
then388:
  ret i32 0
if.exit389:
  br bb %skip_space.entry12925
if.exit389.split:
  br bb %while.cond392
while.cond392:
  pos.load395 = load i32 from ptr @pos
  396 = mul i32 %pos.load395, i32 4
  397 = ptradd ptr %buf, i32 %396
  397.load = load i32 from ptr %397
  399 = icmp eq i32 %397.load, i32 44
  br i1 %399, bb %while.body393, bb %while.exit394
while.body393:
  pos.load401 = load i32 from ptr @pos
  402 = add i32 %pos.load401, i32 1
  store i32 %402 to ptr @pos
  br bb %skip_space.entry12992
while.exit394:
  br bb %skip_space.entry121126
then408:
  ret i32 0
if.exit409:
  br bb %skip_space.entry121059
if.exit409.split:
  br bb %while.cond392
then417:
  ret i32 0
if.exit418:
  pos.load419 = load i32 from ptr @pos
  420 = mul i32 %pos.load419, i32 4
  421 = ptradd ptr %buf, i32 %420
  421.load = load i32 from ptr %421
  423 = icmp ne i32 %421.load, i32 93
  br i1 %423, bb %then424, bb %if.exit425
then424:
  ret i32 0
if.exit425:
  pos.load426 = load i32 from ptr @pos
  427 = add i32 %pos.load426, i32 1
  store i32 %427 to ptr @pos
  br bb %if.exit365
then430:
  pos.load433 = load i32 from ptr @pos
  434 = add i32 %pos.load433, i32 1
  store i32 %434 to ptr @pos
  br bb %skip_space.entry121193
if.exit431:
  br bb %if.exit365
else432:
  542 = icmp eq i32 %type, i32 5
  br i1 %542, bb %then543, bb %else545
then440:
  pos.load442 = load i32 from ptr @pos
  443 = mul i32 %pos.load442, i32 4
  444 = ptradd ptr %buf, i32 %443
  444.load = load i32 from ptr %444
  446 = icmp eq i32 %444.load, i32 125
  br i1 %446, bb %then447, bb %if.exit448
if.exit441:
  452 = call i32 detect_item(i32 2, ptr %buf, i32 %len)
  453 = icmp eq i32 %452, i32 0
  br i1 %453, bb %then454, bb %if.exit455
then447:
  pos.load449 = load i32 from ptr @pos
  450 = add i32 %pos.load449, i32 1
  store i32 %450 to ptr @pos
  ret i32 1
if.exit448:
  br bb %if.exit441
then454:
  ret i32 0
if.exit455:
  br bb %skip_space.entry121260
then461:
  ret i32 0
if.exit462:
  pos.load463 = load i32 from ptr @pos
  464 = mul i32 %pos.load463, i32 4
  465 = ptradd ptr %buf, i32 %464
  465.load = load i32 from ptr %465
  467 = icmp ne i32 %465.load, i32 58
  br i1 %467, bb %then468, bb %if.exit469
then468:
  ret i32 0
if.exit469:
  pos.load470 = load i32 from ptr @pos
  471 = add i32 %pos.load470, i32 1
  store i32 %471 to ptr @pos
  br bb %skip_space.entry121327
then477:
  ret i32 0
if.exit478:
  br bb %skip_space.entry121394
if.exit478.split:
  br bb %while.cond481
while.cond481:
  pos.load484 = load i32 from ptr @pos
  485 = mul i32 %pos.load484, i32 4
  486 = ptradd ptr %buf, i32 %485
  486.load = load i32 from ptr %486
  488 = icmp eq i32 %486.load, i32 44
  br i1 %488, bb %while.body482, bb %while.exit483
while.body482:
  pos.load490 = load i32 from ptr @pos
  491 = add i32 %pos.load490, i32 1
  store i32 %491 to ptr @pos
  br bb %skip_space.entry121461
while.exit483:
  br bb %skip_space.entry121729
then497:
  ret i32 0
if.exit498:
  br bb %skip_space.entry121528
then504:
  ret i32 0
if.exit505:
  pos.load506 = load i32 from ptr @pos
  507 = mul i32 %pos.load506, i32 4
  508 = ptradd ptr %buf, i32 %507
  508.load = load i32 from ptr %508
  510 = icmp ne i32 %508.load, i32 58
  br i1 %510, bb %then511, bb %if.exit512
then511:
  ret i32 0
if.exit512:
  pos.load513 = load i32 from ptr @pos
  514 = add i32 %pos.load513, i32 1
  store i32 %514 to ptr @pos
  br bb %skip_space.entry121595
then520:
  ret i32 0
if.exit521:
  br bb %skip_space.entry121662
if.exit521.split:
  br bb %while.cond481
then529:
  ret i32 0
else531:
  pos.load532 = load i32 from ptr @pos
  533 = mul i32 %pos.load532, i32 4
  534 = ptradd ptr %buf, i32 %533
  534.load = load i32 from ptr %534
  536 = icmp ne i32 %534.load, i32 125
  br i1 %536, bb %then537, bb %if.exit538
then537:
  ret i32 0
if.exit538:
  pos.load539 = load i32 from ptr @pos
  540 = add i32 %pos.load539, i32 1
  store i32 %540 to ptr @pos
  br bb %if.exit431
then543:
  store i32 116 to ptr %mTrue
  arr.index548 = ptradd ptr %mTrue, i32 4
  store i32 114 to ptr %arr.index548
  arr.index549 = ptradd ptr %mTrue, i32 8
  store i32 117 to ptr %arr.index549
  arr.index550 = ptradd ptr %mTrue, i32 12
  store i32 101 to ptr %arr.index550
  pos.load551 = load i32 from ptr @pos
  552 = add i32 %pos.load551, i32 3
  554 = icmp sge i32 %552, i32 %len
  br i1 %554, bb %then555, bb %else557
if.exit544:
  br bb %if.exit431
else545:
  607 = icmp eq i32 %type, i32 6
  br i1 %607, bb %then608, bb %else610
then555:
  ret i32 0
else557:
  pos.load558 = load i32 from ptr @pos
  559 = mul i32 %pos.load558, i32 4
  560 = ptradd ptr %buf, i32 %559
  560.load = load i32 from ptr %560
  563.load = load i32 from ptr %mTrue
  565 = icmp ne i32 %560.load, i32 %563.load
  br i1 %565, bb %then566, bb %else568
then566:
  ret i32 0
else568:
  pos.load569 = load i32 from ptr @pos
  570 = add i32 %pos.load569, i32 1
  571 = mul i32 %570, i32 4
  572 = ptradd ptr %buf, i32 %571
  572.load = load i32 from ptr %572
  575.load = load i32 from ptr %arr.index548
  577 = icmp ne i32 %572.load, i32 %575.load
  br i1 %577, bb %then578, bb %else580
then578:
  ret i32 0
else580:
  pos.load581 = load i32 from ptr @pos
  582 = add i32 %pos.load581, i32 2
  583 = mul i32 %582, i32 4
  584 = ptradd ptr %buf, i32 %583
  584.load = load i32 from ptr %584
  587.load = load i32 from ptr %arr.index549
  589 = icmp ne i32 %584.load, i32 %587.load
  br i1 %589, bb %then590, bb %else592
then590:
  ret i32 0
else592:
  pos.load593 = load i32 from ptr @pos
  594 = add i32 %pos.load593, i32 3
  595 = mul i32 %594, i32 4
  596 = ptradd ptr %buf, i32 %595
  596.load = load i32 from ptr %596
  599.load = load i32 from ptr %arr.index550
  601 = icmp ne i32 %596.load, i32 %599.load
  br i1 %601, bb %then602, bb %if.exit603
then602:
  ret i32 0
if.exit603:
  pos.load604 = load i32 from ptr @pos
  605 = add i32 %pos.load604, i32 4
  store i32 %605 to ptr @pos
  br bb %if.exit544
then608:
  store i32 102 to ptr %mFalse
  arr.index613 = ptradd ptr %mFalse, i32 4
  store i32 97 to ptr %arr.index613
  arr.index614 = ptradd ptr %mFalse, i32 8
  store i32 108 to ptr %arr.index614
  arr.index615 = ptradd ptr %mFalse, i32 12
  store i32 115 to ptr %arr.index615
  arr.index616 = ptradd ptr %mFalse, i32 16
  store i32 101 to ptr %arr.index616
  pos.load617 = load i32 from ptr @pos
  618 = add i32 %pos.load617, i32 4
  620 = icmp sge i32 %618, i32 %len
  br i1 %620, bb %then621, bb %else623
if.exit609:
  br bb %if.exit544
else610:
  685 = icmp eq i32 %type, i32 7
  br i1 %685, bb %then686, bb %else688
then621:
  ret i32 0
else623:
  pos.load624 = load i32 from ptr @pos
  625 = mul i32 %pos.load624, i32 4
  626 = ptradd ptr %buf, i32 %625
  626.load = load i32 from ptr %626
  629.load = load i32 from ptr %mFalse
  631 = icmp ne i32 %626.load, i32 %629.load
  br i1 %631, bb %then632, bb %else634
then632:
  ret i32 0
else634:
  pos.load635 = load i32 from ptr @pos
  636 = add i32 %pos.load635, i32 1
  637 = mul i32 %636, i32 4
  638 = ptradd ptr %buf, i32 %637
  638.load = load i32 from ptr %638
  641.load = load i32 from ptr %arr.index613
  643 = icmp ne i32 %638.load, i32 %641.load
  br i1 %643, bb %then644, bb %else646
then644:
  ret i32 0
else646:
  pos.load647 = load i32 from ptr @pos
  648 = add i32 %pos.load647, i32 2
  649 = mul i32 %648, i32 4
  650 = ptradd ptr %buf, i32 %649
  650.load = load i32 from ptr %650
  653.load = load i32 from ptr %arr.index614
  655 = icmp ne i32 %650.load, i32 %653.load
  br i1 %655, bb %then656, bb %else658
then656:
  ret i32 0
else658:
  pos.load659 = load i32 from ptr @pos
  660 = add i32 %pos.load659, i32 3
  661 = mul i32 %660, i32 4
  662 = ptradd ptr %buf, i32 %661
  662.load = load i32 from ptr %662
  665.load = load i32 from ptr %arr.index615
  667 = icmp ne i32 %662.load, i32 %665.load
  br i1 %667, bb %then668, bb %else670
then668:
  ret i32 0
else670:
  pos.load671 = load i32 from ptr @pos
  672 = add i32 %pos.load671, i32 4
  673 = mul i32 %672, i32 4
  674 = ptradd ptr %buf, i32 %673
  674.load = load i32 from ptr %674
  677.load = load i32 from ptr %arr.index616
  679 = icmp ne i32 %674.load, i32 %677.load
  br i1 %679, bb %then680, bb %if.exit681
then680:
  ret i32 0
if.exit681:
  pos.load682 = load i32 from ptr @pos
  683 = add i32 %pos.load682, i32 5
  store i32 %683 to ptr @pos
  br bb %if.exit609
then686:
  store i32 110 to ptr %mNull
  arr.index691 = ptradd ptr %mNull, i32 4
  store i32 117 to ptr %arr.index691
  arr.index692 = ptradd ptr %mNull, i32 8
  store i32 108 to ptr %arr.index692
  arr.index693 = ptradd ptr %mNull, i32 12
  store i32 108 to ptr %arr.index693
  pos.load694 = load i32 from ptr @pos
  695 = add i32 %pos.load694, i32 3
  697 = icmp sge i32 %695, i32 %len
  br i1 %697, bb %then698, bb %else700
else688:
  ret i32 0
then698:
  ret i32 0
else700:
  pos.load701 = load i32 from ptr @pos
  702 = mul i32 %pos.load701, i32 4
  703 = ptradd ptr %buf, i32 %702
  703.load = load i32 from ptr %703
  706.load = load i32 from ptr %mNull
  708 = icmp ne i32 %703.load, i32 %706.load
  br i1 %708, bb %then709, bb %else711
then709:
  ret i32 0
else711:
  pos.load712 = load i32 from ptr @pos
  713 = add i32 %pos.load712, i32 1
  714 = mul i32 %713, i32 4
  715 = ptradd ptr %buf, i32 %714
  715.load = load i32 from ptr %715
  718.load = load i32 from ptr %arr.index691
  720 = icmp ne i32 %715.load, i32 %718.load
  br i1 %720, bb %then721, bb %else723
then721:
  ret i32 0
else723:
  pos.load724 = load i32 from ptr @pos
  725 = add i32 %pos.load724, i32 2
  726 = mul i32 %725, i32 4
  727 = ptradd ptr %buf, i32 %726
  727.load = load i32 from ptr %727
  730.load = load i32 from ptr %arr.index692
  732 = icmp ne i32 %727.load, i32 %730.load
  br i1 %732, bb %then733, bb %else735
then733:
  ret i32 0
else735:
  pos.load736 = load i32 from ptr @pos
  737 = add i32 %pos.load736, i32 3
  738 = mul i32 %737, i32 4
  739 = ptradd ptr %buf, i32 %738
  739.load = load i32 from ptr %739
  742.load = load i32 from ptr %arr.index693
  744 = icmp ne i32 %739.load, i32 %742.load
  br i1 %744, bb %then745, bb %if.exit746
then745:
  ret i32 0
if.exit746:
  pos.load747 = load i32 from ptr @pos
  748 = add i32 %pos.load747, i32 4
  store i32 %748 to ptr @pos
  br bb %if.exit609
skip_space.entry12:
  br bb %skip_space.while.cond
skip_space.while.cond:
  pos.load794 = load i32 from ptr @pos
  20795 = icmp sge i32 %pos.load794, i32 %len
  br i1 %20795, bb %skip_space.then21, bb %skip_space.if.exit22
skip_space.while.exit:
  74 = icmp eq i32 %type, i32 0
  br i1 %74, bb %then75, bb %else77
skip_space.then21:
  br bb %skip_space.while.exit
skip_space.if.exit22:
  pos.load23802 = load i32 from ptr @pos
  24803 = mul i32 %pos.load23802, i32 4
  25804 = ptradd ptr %buf, i32 %24803
  25.load805 = load i32 from ptr %25804
  27806 = icmp eq i32 %25.load805, i32 32
  br i1 %27806, bb %skip_space.then28, bb %skip_space.else30
skip_space.then28:
  pos.load31809 = load i32 from ptr @pos
  32810 = add i32 %pos.load31809, i32 1
  store i32 %32810 to ptr @pos
  br bb %skip_space.if.exit29
skip_space.if.exit29:
  br bb %skip_space.while.cond
skip_space.else30:
  pos.load33816 = load i32 from ptr @pos
  34817 = mul i32 %pos.load33816, i32 4
  35818 = ptradd ptr %buf, i32 %34817
  35.load819 = load i32 from ptr %35818
  37820 = icmp eq i32 %35.load819, i32 9
  br i1 %37820, bb %skip_space.then38, bb %skip_space.else40
skip_space.then38:
  pos.load41823 = load i32 from ptr @pos
  42824 = add i32 %pos.load41823, i32 1
  store i32 %42824 to ptr @pos
  br bb %skip_space.if.exit39
skip_space.if.exit39:
  br bb %skip_space.if.exit29
skip_space.else40:
  pos.load43830 = load i32 from ptr @pos
  44831 = mul i32 %pos.load43830, i32 4
  45832 = ptradd ptr %buf, i32 %44831
  45.load833 = load i32 from ptr %45832
  47834 = icmp eq i32 %45.load833, i32 10
  br i1 %47834, bb %skip_space.then48, bb %skip_space.else50
skip_space.then48:
  pos.load51837 = load i32 from ptr @pos
  52838 = add i32 %pos.load51837, i32 1
  store i32 %52838 to ptr @pos
  br bb %skip_space.if.exit49
skip_space.if.exit49:
  br bb %skip_space.if.exit39
skip_space.else50:
  pos.load53844 = load i32 from ptr @pos
  54845 = mul i32 %pos.load53844, i32 4
  55846 = ptradd ptr %buf, i32 %54845
  55.load847 = load i32 from ptr %55846
  57848 = icmp eq i32 %55.load847, i32 13
  br i1 %57848, bb %skip_space.then58, bb %skip_space.else60
skip_space.then58:
  pos.load61851 = load i32 from ptr @pos
  62852 = add i32 %pos.load61851, i32 1
  store i32 %62852 to ptr @pos
  br bb %skip_space.if.exit49
skip_space.else60:
  br bb %skip_space.while.exit
skip_space.entry12858:
  br bb %skip_space.while.cond860
skip_space.while.cond860:
  pos.load861 = load i32 from ptr @pos
  20862 = icmp sge i32 %pos.load861, i32 %len
  br i1 %20862, bb %skip_space.then21866, bb %skip_space.if.exit22868
skip_space.while.exit864:
  pos.load371 = load i32 from ptr @pos
  373 = icmp slt i32 %pos.load371, i32 %len
  br i1 %373, bb %then374, bb %if.exit375
skip_space.then21866:
  br bb %skip_space.while.exit864
skip_space.if.exit22868:
  pos.load23869 = load i32 from ptr @pos
  24870 = mul i32 %pos.load23869, i32 4
  25871 = ptradd ptr %buf, i32 %24870
  25.load872 = load i32 from ptr %25871
  27873 = icmp eq i32 %25.load872, i32 32
  br i1 %27873, bb %skip_space.then28875, bb %skip_space.else30882
skip_space.then28875:
  pos.load31876 = load i32 from ptr @pos
  32877 = add i32 %pos.load31876, i32 1
  store i32 %32877 to ptr @pos
  br bb %skip_space.if.exit29880
skip_space.if.exit29880:
  br bb %skip_space.while.cond860
skip_space.else30882:
  pos.load33883 = load i32 from ptr @pos
  34884 = mul i32 %pos.load33883, i32 4
  35885 = ptradd ptr %buf, i32 %34884
  35.load886 = load i32 from ptr %35885
  37887 = icmp eq i32 %35.load886, i32 9
  br i1 %37887, bb %skip_space.then38889, bb %skip_space.else40896
skip_space.then38889:
  pos.load41890 = load i32 from ptr @pos
  42891 = add i32 %pos.load41890, i32 1
  store i32 %42891 to ptr @pos
  br bb %skip_space.if.exit39894
skip_space.if.exit39894:
  br bb %skip_space.if.exit29880
skip_space.else40896:
  pos.load43897 = load i32 from ptr @pos
  44898 = mul i32 %pos.load43897, i32 4
  45899 = ptradd ptr %buf, i32 %44898
  45.load900 = load i32 from ptr %45899
  47901 = icmp eq i32 %45.load900, i32 10
  br i1 %47901, bb %skip_space.then48903, bb %skip_space.else50910
skip_space.then48903:
  pos.load51904 = load i32 from ptr @pos
  52905 = add i32 %pos.load51904, i32 1
  store i32 %52905 to ptr @pos
  br bb %skip_space.if.exit49908
skip_space.if.exit49908:
  br bb %skip_space.if.exit39894
skip_space.else50910:
  pos.load53911 = load i32 from ptr @pos
  54912 = mul i32 %pos.load53911, i32 4
  55913 = ptradd ptr %buf, i32 %54912
  55.load914 = load i32 from ptr %55913
  57915 = icmp eq i32 %55.load914, i32 13
  br i1 %57915, bb %skip_space.then58917, bb %skip_space.else60922
skip_space.then58917:
  pos.load61918 = load i32 from ptr @pos
  62919 = add i32 %pos.load61918, i32 1
  store i32 %62919 to ptr @pos
  br bb %skip_space.if.exit49908
skip_space.else60922:
  br bb %skip_space.while.exit864
skip_space.entry12925:
  br bb %skip_space.while.cond927
skip_space.while.cond927:
  pos.load928 = load i32 from ptr @pos
  20929 = icmp sge i32 %pos.load928, i32 %len
  br i1 %20929, bb %skip_space.then21933, bb %skip_space.if.exit22935
skip_space.while.exit931:
  br bb %if.exit389.split
skip_space.then21933:
  br bb %skip_space.while.exit931
skip_space.if.exit22935:
  pos.load23936 = load i32 from ptr @pos
  24937 = mul i32 %pos.load23936, i32 4
  25938 = ptradd ptr %buf, i32 %24937
  25.load939 = load i32 from ptr %25938
  27940 = icmp eq i32 %25.load939, i32 32
  br i1 %27940, bb %skip_space.then28942, bb %skip_space.else30949
skip_space.then28942:
  pos.load31943 = load i32 from ptr @pos
  32944 = add i32 %pos.load31943, i32 1
  store i32 %32944 to ptr @pos
  br bb %skip_space.if.exit29947
skip_space.if.exit29947:
  br bb %skip_space.while.cond927
skip_space.else30949:
  pos.load33950 = load i32 from ptr @pos
  34951 = mul i32 %pos.load33950, i32 4
  35952 = ptradd ptr %buf, i32 %34951
  35.load953 = load i32 from ptr %35952
  37954 = icmp eq i32 %35.load953, i32 9
  br i1 %37954, bb %skip_space.then38956, bb %skip_space.else40963
skip_space.then38956:
  pos.load41957 = load i32 from ptr @pos
  42958 = add i32 %pos.load41957, i32 1
  store i32 %42958 to ptr @pos
  br bb %skip_space.if.exit39961
skip_space.if.exit39961:
  br bb %skip_space.if.exit29947
skip_space.else40963:
  pos.load43964 = load i32 from ptr @pos
  44965 = mul i32 %pos.load43964, i32 4
  45966 = ptradd ptr %buf, i32 %44965
  45.load967 = load i32 from ptr %45966
  47968 = icmp eq i32 %45.load967, i32 10
  br i1 %47968, bb %skip_space.then48970, bb %skip_space.else50977
skip_space.then48970:
  pos.load51971 = load i32 from ptr @pos
  52972 = add i32 %pos.load51971, i32 1
  store i32 %52972 to ptr @pos
  br bb %skip_space.if.exit49975
skip_space.if.exit49975:
  br bb %skip_space.if.exit39961
skip_space.else50977:
  pos.load53978 = load i32 from ptr @pos
  54979 = mul i32 %pos.load53978, i32 4
  55980 = ptradd ptr %buf, i32 %54979
  55.load981 = load i32 from ptr %55980
  57982 = icmp eq i32 %55.load981, i32 13
  br i1 %57982, bb %skip_space.then58984, bb %skip_space.else60989
skip_space.then58984:
  pos.load61985 = load i32 from ptr @pos
  62986 = add i32 %pos.load61985, i32 1
  store i32 %62986 to ptr @pos
  br bb %skip_space.if.exit49975
skip_space.else60989:
  br bb %skip_space.while.exit931
skip_space.entry12992:
  br bb %skip_space.while.cond994
skip_space.while.cond994:
  pos.load995 = load i32 from ptr @pos
  20996 = icmp sge i32 %pos.load995, i32 %len
  br i1 %20996, bb %skip_space.then211000, bb %skip_space.if.exit221002
skip_space.while.exit998:
  406 = call i32 detect_item(i32 0, ptr %buf, i32 %len)
  407 = icmp eq i32 %406, i32 0
  br i1 %407, bb %then408, bb %if.exit409
skip_space.then211000:
  br bb %skip_space.while.exit998
skip_space.if.exit221002:
  pos.load231003 = load i32 from ptr @pos
  241004 = mul i32 %pos.load231003, i32 4
  251005 = ptradd ptr %buf, i32 %241004
  25.load1006 = load i32 from ptr %251005
  271007 = icmp eq i32 %25.load1006, i32 32
  br i1 %271007, bb %skip_space.then281009, bb %skip_space.else301016
skip_space.then281009:
  pos.load311010 = load i32 from ptr @pos
  321011 = add i32 %pos.load311010, i32 1
  store i32 %321011 to ptr @pos
  br bb %skip_space.if.exit291014
skip_space.if.exit291014:
  br bb %skip_space.while.cond994
skip_space.else301016:
  pos.load331017 = load i32 from ptr @pos
  341018 = mul i32 %pos.load331017, i32 4
  351019 = ptradd ptr %buf, i32 %341018
  35.load1020 = load i32 from ptr %351019
  371021 = icmp eq i32 %35.load1020, i32 9
  br i1 %371021, bb %skip_space.then381023, bb %skip_space.else401030
skip_space.then381023:
  pos.load411024 = load i32 from ptr @pos
  421025 = add i32 %pos.load411024, i32 1
  store i32 %421025 to ptr @pos
  br bb %skip_space.if.exit391028
skip_space.if.exit391028:
  br bb %skip_space.if.exit291014
skip_space.else401030:
  pos.load431031 = load i32 from ptr @pos
  441032 = mul i32 %pos.load431031, i32 4
  451033 = ptradd ptr %buf, i32 %441032
  45.load1034 = load i32 from ptr %451033
  471035 = icmp eq i32 %45.load1034, i32 10
  br i1 %471035, bb %skip_space.then481037, bb %skip_space.else501044
skip_space.then481037:
  pos.load511038 = load i32 from ptr @pos
  521039 = add i32 %pos.load511038, i32 1
  store i32 %521039 to ptr @pos
  br bb %skip_space.if.exit491042
skip_space.if.exit491042:
  br bb %skip_space.if.exit391028
skip_space.else501044:
  pos.load531045 = load i32 from ptr @pos
  541046 = mul i32 %pos.load531045, i32 4
  551047 = ptradd ptr %buf, i32 %541046
  55.load1048 = load i32 from ptr %551047
  571049 = icmp eq i32 %55.load1048, i32 13
  br i1 %571049, bb %skip_space.then581051, bb %skip_space.else601056
skip_space.then581051:
  pos.load611052 = load i32 from ptr @pos
  621053 = add i32 %pos.load611052, i32 1
  store i32 %621053 to ptr @pos
  br bb %skip_space.if.exit491042
skip_space.else601056:
  br bb %skip_space.while.exit998
skip_space.entry121059:
  br bb %skip_space.while.cond1061
skip_space.while.cond1061:
  pos.load1062 = load i32 from ptr @pos
  201063 = icmp sge i32 %pos.load1062, i32 %len
  br i1 %201063, bb %skip_space.then211067, bb %skip_space.if.exit221069
skip_space.while.exit1065:
  br bb %if.exit409.split
skip_space.then211067:
  br bb %skip_space.while.exit1065
skip_space.if.exit221069:
  pos.load231070 = load i32 from ptr @pos
  241071 = mul i32 %pos.load231070, i32 4
  251072 = ptradd ptr %buf, i32 %241071
  25.load1073 = load i32 from ptr %251072
  271074 = icmp eq i32 %25.load1073, i32 32
  br i1 %271074, bb %skip_space.then281076, bb %skip_space.else301083
skip_space.then281076:
  pos.load311077 = load i32 from ptr @pos
  321078 = add i32 %pos.load311077, i32 1
  store i32 %321078 to ptr @pos
  br bb %skip_space.if.exit291081
skip_space.if.exit291081:
  br bb %skip_space.while.cond1061
skip_space.else301083:
  pos.load331084 = load i32 from ptr @pos
  341085 = mul i32 %pos.load331084, i32 4
  351086 = ptradd ptr %buf, i32 %341085
  35.load1087 = load i32 from ptr %351086
  371088 = icmp eq i32 %35.load1087, i32 9
  br i1 %371088, bb %skip_space.then381090, bb %skip_space.else401097
skip_space.then381090:
  pos.load411091 = load i32 from ptr @pos
  421092 = add i32 %pos.load411091, i32 1
  store i32 %421092 to ptr @pos
  br bb %skip_space.if.exit391095
skip_space.if.exit391095:
  br bb %skip_space.if.exit291081
skip_space.else401097:
  pos.load431098 = load i32 from ptr @pos
  441099 = mul i32 %pos.load431098, i32 4
  451100 = ptradd ptr %buf, i32 %441099
  45.load1101 = load i32 from ptr %451100
  471102 = icmp eq i32 %45.load1101, i32 10
  br i1 %471102, bb %skip_space.then481104, bb %skip_space.else501111
skip_space.then481104:
  pos.load511105 = load i32 from ptr @pos
  521106 = add i32 %pos.load511105, i32 1
  store i32 %521106 to ptr @pos
  br bb %skip_space.if.exit491109
skip_space.if.exit491109:
  br bb %skip_space.if.exit391095
skip_space.else501111:
  pos.load531112 = load i32 from ptr @pos
  541113 = mul i32 %pos.load531112, i32 4
  551114 = ptradd ptr %buf, i32 %541113
  55.load1115 = load i32 from ptr %551114
  571116 = icmp eq i32 %55.load1115, i32 13
  br i1 %571116, bb %skip_space.then581118, bb %skip_space.else601123
skip_space.then581118:
  pos.load611119 = load i32 from ptr @pos
  621120 = add i32 %pos.load611119, i32 1
  store i32 %621120 to ptr @pos
  br bb %skip_space.if.exit491109
skip_space.else601123:
  br bb %skip_space.while.exit1065
skip_space.entry121126:
  br bb %skip_space.while.cond1128
skip_space.while.cond1128:
  pos.load1129 = load i32 from ptr @pos
  201130 = icmp sge i32 %pos.load1129, i32 %len
  br i1 %201130, bb %skip_space.then211134, bb %skip_space.if.exit221136
skip_space.while.exit1132:
  pos.load414 = load i32 from ptr @pos
  416 = icmp sge i32 %pos.load414, i32 %len
  br i1 %416, bb %then417, bb %if.exit418
skip_space.then211134:
  br bb %skip_space.while.exit1132
skip_space.if.exit221136:
  pos.load231137 = load i32 from ptr @pos
  241138 = mul i32 %pos.load231137, i32 4
  251139 = ptradd ptr %buf, i32 %241138
  25.load1140 = load i32 from ptr %251139
  271141 = icmp eq i32 %25.load1140, i32 32
  br i1 %271141, bb %skip_space.then281143, bb %skip_space.else301150
skip_space.then281143:
  pos.load311144 = load i32 from ptr @pos
  321145 = add i32 %pos.load311144, i32 1
  store i32 %321145 to ptr @pos
  br bb %skip_space.if.exit291148
skip_space.if.exit291148:
  br bb %skip_space.while.cond1128
skip_space.else301150:
  pos.load331151 = load i32 from ptr @pos
  341152 = mul i32 %pos.load331151, i32 4
  351153 = ptradd ptr %buf, i32 %341152
  35.load1154 = load i32 from ptr %351153
  371155 = icmp eq i32 %35.load1154, i32 9
  br i1 %371155, bb %skip_space.then381157, bb %skip_space.else401164
skip_space.then381157:
  pos.load411158 = load i32 from ptr @pos
  421159 = add i32 %pos.load411158, i32 1
  store i32 %421159 to ptr @pos
  br bb %skip_space.if.exit391162
skip_space.if.exit391162:
  br bb %skip_space.if.exit291148
skip_space.else401164:
  pos.load431165 = load i32 from ptr @pos
  441166 = mul i32 %pos.load431165, i32 4
  451167 = ptradd ptr %buf, i32 %441166
  45.load1168 = load i32 from ptr %451167
  471169 = icmp eq i32 %45.load1168, i32 10
  br i1 %471169, bb %skip_space.then481171, bb %skip_space.else501178
skip_space.then481171:
  pos.load511172 = load i32 from ptr @pos
  521173 = add i32 %pos.load511172, i32 1
  store i32 %521173 to ptr @pos
  br bb %skip_space.if.exit491176
skip_space.if.exit491176:
  br bb %skip_space.if.exit391162
skip_space.else501178:
  pos.load531179 = load i32 from ptr @pos
  541180 = mul i32 %pos.load531179, i32 4
  551181 = ptradd ptr %buf, i32 %541180
  55.load1182 = load i32 from ptr %551181
  571183 = icmp eq i32 %55.load1182, i32 13
  br i1 %571183, bb %skip_space.then581185, bb %skip_space.else601190
skip_space.then581185:
  pos.load611186 = load i32 from ptr @pos
  621187 = add i32 %pos.load611186, i32 1
  store i32 %621187 to ptr @pos
  br bb %skip_space.if.exit491176
skip_space.else601190:
  br bb %skip_space.while.exit1132
skip_space.entry121193:
  br bb %skip_space.while.cond1195
skip_space.while.cond1195:
  pos.load1196 = load i32 from ptr @pos
  201197 = icmp sge i32 %pos.load1196, i32 %len
  br i1 %201197, bb %skip_space.then211201, bb %skip_space.if.exit221203
skip_space.while.exit1199:
  pos.load437 = load i32 from ptr @pos
  439 = icmp slt i32 %pos.load437, i32 %len
  br i1 %439, bb %then440, bb %if.exit441
skip_space.then211201:
  br bb %skip_space.while.exit1199
skip_space.if.exit221203:
  pos.load231204 = load i32 from ptr @pos
  241205 = mul i32 %pos.load231204, i32 4
  251206 = ptradd ptr %buf, i32 %241205
  25.load1207 = load i32 from ptr %251206
  271208 = icmp eq i32 %25.load1207, i32 32
  br i1 %271208, bb %skip_space.then281210, bb %skip_space.else301217
skip_space.then281210:
  pos.load311211 = load i32 from ptr @pos
  321212 = add i32 %pos.load311211, i32 1
  store i32 %321212 to ptr @pos
  br bb %skip_space.if.exit291215
skip_space.if.exit291215:
  br bb %skip_space.while.cond1195
skip_space.else301217:
  pos.load331218 = load i32 from ptr @pos
  341219 = mul i32 %pos.load331218, i32 4
  351220 = ptradd ptr %buf, i32 %341219
  35.load1221 = load i32 from ptr %351220
  371222 = icmp eq i32 %35.load1221, i32 9
  br i1 %371222, bb %skip_space.then381224, bb %skip_space.else401231
skip_space.then381224:
  pos.load411225 = load i32 from ptr @pos
  421226 = add i32 %pos.load411225, i32 1
  store i32 %421226 to ptr @pos
  br bb %skip_space.if.exit391229
skip_space.if.exit391229:
  br bb %skip_space.if.exit291215
skip_space.else401231:
  pos.load431232 = load i32 from ptr @pos
  441233 = mul i32 %pos.load431232, i32 4
  451234 = ptradd ptr %buf, i32 %441233
  45.load1235 = load i32 from ptr %451234
  471236 = icmp eq i32 %45.load1235, i32 10
  br i1 %471236, bb %skip_space.then481238, bb %skip_space.else501245
skip_space.then481238:
  pos.load511239 = load i32 from ptr @pos
  521240 = add i32 %pos.load511239, i32 1
  store i32 %521240 to ptr @pos
  br bb %skip_space.if.exit491243
skip_space.if.exit491243:
  br bb %skip_space.if.exit391229
skip_space.else501245:
  pos.load531246 = load i32 from ptr @pos
  541247 = mul i32 %pos.load531246, i32 4
  551248 = ptradd ptr %buf, i32 %541247
  55.load1249 = load i32 from ptr %551248
  571250 = icmp eq i32 %55.load1249, i32 13
  br i1 %571250, bb %skip_space.then581252, bb %skip_space.else601257
skip_space.then581252:
  pos.load611253 = load i32 from ptr @pos
  621254 = add i32 %pos.load611253, i32 1
  store i32 %621254 to ptr @pos
  br bb %skip_space.if.exit491243
skip_space.else601257:
  br bb %skip_space.while.exit1199
skip_space.entry121260:
  br bb %skip_space.while.cond1262
skip_space.while.cond1262:
  pos.load1263 = load i32 from ptr @pos
  201264 = icmp sge i32 %pos.load1263, i32 %len
  br i1 %201264, bb %skip_space.then211268, bb %skip_space.if.exit221270
skip_space.while.exit1266:
  pos.load458 = load i32 from ptr @pos
  460 = icmp sge i32 %pos.load458, i32 %len
  br i1 %460, bb %then461, bb %if.exit462
skip_space.then211268:
  br bb %skip_space.while.exit1266
skip_space.if.exit221270:
  pos.load231271 = load i32 from ptr @pos
  241272 = mul i32 %pos.load231271, i32 4
  251273 = ptradd ptr %buf, i32 %241272
  25.load1274 = load i32 from ptr %251273
  271275 = icmp eq i32 %25.load1274, i32 32
  br i1 %271275, bb %skip_space.then281277, bb %skip_space.else301284
skip_space.then281277:
  pos.load311278 = load i32 from ptr @pos
  321279 = add i32 %pos.load311278, i32 1
  store i32 %321279 to ptr @pos
  br bb %skip_space.if.exit291282
skip_space.if.exit291282:
  br bb %skip_space.while.cond1262
skip_space.else301284:
  pos.load331285 = load i32 from ptr @pos
  341286 = mul i32 %pos.load331285, i32 4
  351287 = ptradd ptr %buf, i32 %341286
  35.load1288 = load i32 from ptr %351287
  371289 = icmp eq i32 %35.load1288, i32 9
  br i1 %371289, bb %skip_space.then381291, bb %skip_space.else401298
skip_space.then381291:
  pos.load411292 = load i32 from ptr @pos
  421293 = add i32 %pos.load411292, i32 1
  store i32 %421293 to ptr @pos
  br bb %skip_space.if.exit391296
skip_space.if.exit391296:
  br bb %skip_space.if.exit291282
skip_space.else401298:
  pos.load431299 = load i32 from ptr @pos
  441300 = mul i32 %pos.load431299, i32 4
  451301 = ptradd ptr %buf, i32 %441300
  45.load1302 = load i32 from ptr %451301
  471303 = icmp eq i32 %45.load1302, i32 10
  br i1 %471303, bb %skip_space.then481305, bb %skip_space.else501312
skip_space.then481305:
  pos.load511306 = load i32 from ptr @pos
  521307 = add i32 %pos.load511306, i32 1
  store i32 %521307 to ptr @pos
  br bb %skip_space.if.exit491310
skip_space.if.exit491310:
  br bb %skip_space.if.exit391296
skip_space.else501312:
  pos.load531313 = load i32 from ptr @pos
  541314 = mul i32 %pos.load531313, i32 4
  551315 = ptradd ptr %buf, i32 %541314
  55.load1316 = load i32 from ptr %551315
  571317 = icmp eq i32 %55.load1316, i32 13
  br i1 %571317, bb %skip_space.then581319, bb %skip_space.else601324
skip_space.then581319:
  pos.load611320 = load i32 from ptr @pos
  621321 = add i32 %pos.load611320, i32 1
  store i32 %621321 to ptr @pos
  br bb %skip_space.if.exit491310
skip_space.else601324:
  br bb %skip_space.while.exit1266
skip_space.entry121327:
  br bb %skip_space.while.cond1329
skip_space.while.cond1329:
  pos.load1330 = load i32 from ptr @pos
  201331 = icmp sge i32 %pos.load1330, i32 %len
  br i1 %201331, bb %skip_space.then211335, bb %skip_space.if.exit221337
skip_space.while.exit1333:
  475 = call i32 detect_item(i32 0, ptr %buf, i32 %len)
  476 = icmp eq i32 %475, i32 0
  br i1 %476, bb %then477, bb %if.exit478
skip_space.then211335:
  br bb %skip_space.while.exit1333
skip_space.if.exit221337:
  pos.load231338 = load i32 from ptr @pos
  241339 = mul i32 %pos.load231338, i32 4
  251340 = ptradd ptr %buf, i32 %241339
  25.load1341 = load i32 from ptr %251340
  271342 = icmp eq i32 %25.load1341, i32 32
  br i1 %271342, bb %skip_space.then281344, bb %skip_space.else301351
skip_space.then281344:
  pos.load311345 = load i32 from ptr @pos
  321346 = add i32 %pos.load311345, i32 1
  store i32 %321346 to ptr @pos
  br bb %skip_space.if.exit291349
skip_space.if.exit291349:
  br bb %skip_space.while.cond1329
skip_space.else301351:
  pos.load331352 = load i32 from ptr @pos
  341353 = mul i32 %pos.load331352, i32 4
  351354 = ptradd ptr %buf, i32 %341353
  35.load1355 = load i32 from ptr %351354
  371356 = icmp eq i32 %35.load1355, i32 9
  br i1 %371356, bb %skip_space.then381358, bb %skip_space.else401365
skip_space.then381358:
  pos.load411359 = load i32 from ptr @pos
  421360 = add i32 %pos.load411359, i32 1
  store i32 %421360 to ptr @pos
  br bb %skip_space.if.exit391363
skip_space.if.exit391363:
  br bb %skip_space.if.exit291349
skip_space.else401365:
  pos.load431366 = load i32 from ptr @pos
  441367 = mul i32 %pos.load431366, i32 4
  451368 = ptradd ptr %buf, i32 %441367
  45.load1369 = load i32 from ptr %451368
  471370 = icmp eq i32 %45.load1369, i32 10
  br i1 %471370, bb %skip_space.then481372, bb %skip_space.else501379
skip_space.then481372:
  pos.load511373 = load i32 from ptr @pos
  521374 = add i32 %pos.load511373, i32 1
  store i32 %521374 to ptr @pos
  br bb %skip_space.if.exit491377
skip_space.if.exit491377:
  br bb %skip_space.if.exit391363
skip_space.else501379:
  pos.load531380 = load i32 from ptr @pos
  541381 = mul i32 %pos.load531380, i32 4
  551382 = ptradd ptr %buf, i32 %541381
  55.load1383 = load i32 from ptr %551382
  571384 = icmp eq i32 %55.load1383, i32 13
  br i1 %571384, bb %skip_space.then581386, bb %skip_space.else601391
skip_space.then581386:
  pos.load611387 = load i32 from ptr @pos
  621388 = add i32 %pos.load611387, i32 1
  store i32 %621388 to ptr @pos
  br bb %skip_space.if.exit491377
skip_space.else601391:
  br bb %skip_space.while.exit1333
skip_space.entry121394:
  br bb %skip_space.while.cond1396
skip_space.while.cond1396:
  pos.load1397 = load i32 from ptr @pos
  201398 = icmp sge i32 %pos.load1397, i32 %len
  br i1 %201398, bb %skip_space.then211402, bb %skip_space.if.exit221404
skip_space.while.exit1400:
  br bb %if.exit478.split
skip_space.then211402:
  br bb %skip_space.while.exit1400
skip_space.if.exit221404:
  pos.load231405 = load i32 from ptr @pos
  241406 = mul i32 %pos.load231405, i32 4
  251407 = ptradd ptr %buf, i32 %241406
  25.load1408 = load i32 from ptr %251407
  271409 = icmp eq i32 %25.load1408, i32 32
  br i1 %271409, bb %skip_space.then281411, bb %skip_space.else301418
skip_space.then281411:
  pos.load311412 = load i32 from ptr @pos
  321413 = add i32 %pos.load311412, i32 1
  store i32 %321413 to ptr @pos
  br bb %skip_space.if.exit291416
skip_space.if.exit291416:
  br bb %skip_space.while.cond1396
skip_space.else301418:
  pos.load331419 = load i32 from ptr @pos
  341420 = mul i32 %pos.load331419, i32 4
  351421 = ptradd ptr %buf, i32 %341420
  35.load1422 = load i32 from ptr %351421
  371423 = icmp eq i32 %35.load1422, i32 9
  br i1 %371423, bb %skip_space.then381425, bb %skip_space.else401432
skip_space.then381425:
  pos.load411426 = load i32 from ptr @pos
  421427 = add i32 %pos.load411426, i32 1
  store i32 %421427 to ptr @pos
  br bb %skip_space.if.exit391430
skip_space.if.exit391430:
  br bb %skip_space.if.exit291416
skip_space.else401432:
  pos.load431433 = load i32 from ptr @pos
  441434 = mul i32 %pos.load431433, i32 4
  451435 = ptradd ptr %buf, i32 %441434
  45.load1436 = load i32 from ptr %451435
  471437 = icmp eq i32 %45.load1436, i32 10
  br i1 %471437, bb %skip_space.then481439, bb %skip_space.else501446
skip_space.then481439:
  pos.load511440 = load i32 from ptr @pos
  521441 = add i32 %pos.load511440, i32 1
  store i32 %521441 to ptr @pos
  br bb %skip_space.if.exit491444
skip_space.if.exit491444:
  br bb %skip_space.if.exit391430
skip_space.else501446:
  pos.load531447 = load i32 from ptr @pos
  541448 = mul i32 %pos.load531447, i32 4
  551449 = ptradd ptr %buf, i32 %541448
  55.load1450 = load i32 from ptr %551449
  571451 = icmp eq i32 %55.load1450, i32 13
  br i1 %571451, bb %skip_space.then581453, bb %skip_space.else601458
skip_space.then581453:
  pos.load611454 = load i32 from ptr @pos
  621455 = add i32 %pos.load611454, i32 1
  store i32 %621455 to ptr @pos
  br bb %skip_space.if.exit491444
skip_space.else601458:
  br bb %skip_space.while.exit1400
skip_space.entry121461:
  br bb %skip_space.while.cond1463
skip_space.while.cond1463:
  pos.load1464 = load i32 from ptr @pos
  201465 = icmp sge i32 %pos.load1464, i32 %len
  br i1 %201465, bb %skip_space.then211469, bb %skip_space.if.exit221471
skip_space.while.exit1467:
  495 = call i32 detect_item(i32 2, ptr %buf, i32 %len)
  496 = icmp eq i32 %495, i32 0
  br i1 %496, bb %then497, bb %if.exit498
skip_space.then211469:
  br bb %skip_space.while.exit1467
skip_space.if.exit221471:
  pos.load231472 = load i32 from ptr @pos
  241473 = mul i32 %pos.load231472, i32 4
  251474 = ptradd ptr %buf, i32 %241473
  25.load1475 = load i32 from ptr %251474
  271476 = icmp eq i32 %25.load1475, i32 32
  br i1 %271476, bb %skip_space.then281478, bb %skip_space.else301485
skip_space.then281478:
  pos.load311479 = load i32 from ptr @pos
  321480 = add i32 %pos.load311479, i32 1
  store i32 %321480 to ptr @pos
  br bb %skip_space.if.exit291483
skip_space.if.exit291483:
  br bb %skip_space.while.cond1463
skip_space.else301485:
  pos.load331486 = load i32 from ptr @pos
  341487 = mul i32 %pos.load331486, i32 4
  351488 = ptradd ptr %buf, i32 %341487
  35.load1489 = load i32 from ptr %351488
  371490 = icmp eq i32 %35.load1489, i32 9
  br i1 %371490, bb %skip_space.then381492, bb %skip_space.else401499
skip_space.then381492:
  pos.load411493 = load i32 from ptr @pos
  421494 = add i32 %pos.load411493, i32 1
  store i32 %421494 to ptr @pos
  br bb %skip_space.if.exit391497
skip_space.if.exit391497:
  br bb %skip_space.if.exit291483
skip_space.else401499:
  pos.load431500 = load i32 from ptr @pos
  441501 = mul i32 %pos.load431500, i32 4
  451502 = ptradd ptr %buf, i32 %441501
  45.load1503 = load i32 from ptr %451502
  471504 = icmp eq i32 %45.load1503, i32 10
  br i1 %471504, bb %skip_space.then481506, bb %skip_space.else501513
skip_space.then481506:
  pos.load511507 = load i32 from ptr @pos
  521508 = add i32 %pos.load511507, i32 1
  store i32 %521508 to ptr @pos
  br bb %skip_space.if.exit491511
skip_space.if.exit491511:
  br bb %skip_space.if.exit391497
skip_space.else501513:
  pos.load531514 = load i32 from ptr @pos
  541515 = mul i32 %pos.load531514, i32 4
  551516 = ptradd ptr %buf, i32 %541515
  55.load1517 = load i32 from ptr %551516
  571518 = icmp eq i32 %55.load1517, i32 13
  br i1 %571518, bb %skip_space.then581520, bb %skip_space.else601525
skip_space.then581520:
  pos.load611521 = load i32 from ptr @pos
  621522 = add i32 %pos.load611521, i32 1
  store i32 %621522 to ptr @pos
  br bb %skip_space.if.exit491511
skip_space.else601525:
  br bb %skip_space.while.exit1467
skip_space.entry121528:
  br bb %skip_space.while.cond1530
skip_space.while.cond1530:
  pos.load1531 = load i32 from ptr @pos
  201532 = icmp sge i32 %pos.load1531, i32 %len
  br i1 %201532, bb %skip_space.then211536, bb %skip_space.if.exit221538
skip_space.while.exit1534:
  pos.load501 = load i32 from ptr @pos
  503 = icmp sge i32 %pos.load501, i32 %len
  br i1 %503, bb %then504, bb %if.exit505
skip_space.then211536:
  br bb %skip_space.while.exit1534
skip_space.if.exit221538:
  pos.load231539 = load i32 from ptr @pos
  241540 = mul i32 %pos.load231539, i32 4
  251541 = ptradd ptr %buf, i32 %241540
  25.load1542 = load i32 from ptr %251541
  271543 = icmp eq i32 %25.load1542, i32 32
  br i1 %271543, bb %skip_space.then281545, bb %skip_space.else301552
skip_space.then281545:
  pos.load311546 = load i32 from ptr @pos
  321547 = add i32 %pos.load311546, i32 1
  store i32 %321547 to ptr @pos
  br bb %skip_space.if.exit291550
skip_space.if.exit291550:
  br bb %skip_space.while.cond1530
skip_space.else301552:
  pos.load331553 = load i32 from ptr @pos
  341554 = mul i32 %pos.load331553, i32 4
  351555 = ptradd ptr %buf, i32 %341554
  35.load1556 = load i32 from ptr %351555
  371557 = icmp eq i32 %35.load1556, i32 9
  br i1 %371557, bb %skip_space.then381559, bb %skip_space.else401566
skip_space.then381559:
  pos.load411560 = load i32 from ptr @pos
  421561 = add i32 %pos.load411560, i32 1
  store i32 %421561 to ptr @pos
  br bb %skip_space.if.exit391564
skip_space.if.exit391564:
  br bb %skip_space.if.exit291550
skip_space.else401566:
  pos.load431567 = load i32 from ptr @pos
  441568 = mul i32 %pos.load431567, i32 4
  451569 = ptradd ptr %buf, i32 %441568
  45.load1570 = load i32 from ptr %451569
  471571 = icmp eq i32 %45.load1570, i32 10
  br i1 %471571, bb %skip_space.then481573, bb %skip_space.else501580
skip_space.then481573:
  pos.load511574 = load i32 from ptr @pos
  521575 = add i32 %pos.load511574, i32 1
  store i32 %521575 to ptr @pos
  br bb %skip_space.if.exit491578
skip_space.if.exit491578:
  br bb %skip_space.if.exit391564
skip_space.else501580:
  pos.load531581 = load i32 from ptr @pos
  541582 = mul i32 %pos.load531581, i32 4
  551583 = ptradd ptr %buf, i32 %541582
  55.load1584 = load i32 from ptr %551583
  571585 = icmp eq i32 %55.load1584, i32 13
  br i1 %571585, bb %skip_space.then581587, bb %skip_space.else601592
skip_space.then581587:
  pos.load611588 = load i32 from ptr @pos
  621589 = add i32 %pos.load611588, i32 1
  store i32 %621589 to ptr @pos
  br bb %skip_space.if.exit491578
skip_space.else601592:
  br bb %skip_space.while.exit1534
skip_space.entry121595:
  br bb %skip_space.while.cond1597
skip_space.while.cond1597:
  pos.load1598 = load i32 from ptr @pos
  201599 = icmp sge i32 %pos.load1598, i32 %len
  br i1 %201599, bb %skip_space.then211603, bb %skip_space.if.exit221605
skip_space.while.exit1601:
  518 = call i32 detect_item(i32 0, ptr %buf, i32 %len)
  519 = icmp eq i32 %518, i32 0
  br i1 %519, bb %then520, bb %if.exit521
skip_space.then211603:
  br bb %skip_space.while.exit1601
skip_space.if.exit221605:
  pos.load231606 = load i32 from ptr @pos
  241607 = mul i32 %pos.load231606, i32 4
  251608 = ptradd ptr %buf, i32 %241607
  25.load1609 = load i32 from ptr %251608
  271610 = icmp eq i32 %25.load1609, i32 32
  br i1 %271610, bb %skip_space.then281612, bb %skip_space.else301619
skip_space.then281612:
  pos.load311613 = load i32 from ptr @pos
  321614 = add i32 %pos.load311613, i32 1
  store i32 %321614 to ptr @pos
  br bb %skip_space.if.exit291617
skip_space.if.exit291617:
  br bb %skip_space.while.cond1597
skip_space.else301619:
  pos.load331620 = load i32 from ptr @pos
  341621 = mul i32 %pos.load331620, i32 4
  351622 = ptradd ptr %buf, i32 %341621
  35.load1623 = load i32 from ptr %351622
  371624 = icmp eq i32 %35.load1623, i32 9
  br i1 %371624, bb %skip_space.then381626, bb %skip_space.else401633
skip_space.then381626:
  pos.load411627 = load i32 from ptr @pos
  421628 = add i32 %pos.load411627, i32 1
  store i32 %421628 to ptr @pos
  br bb %skip_space.if.exit391631
skip_space.if.exit391631:
  br bb %skip_space.if.exit291617
skip_space.else401633:
  pos.load431634 = load i32 from ptr @pos
  441635 = mul i32 %pos.load431634, i32 4
  451636 = ptradd ptr %buf, i32 %441635
  45.load1637 = load i32 from ptr %451636
  471638 = icmp eq i32 %45.load1637, i32 10
  br i1 %471638, bb %skip_space.then481640, bb %skip_space.else501647
skip_space.then481640:
  pos.load511641 = load i32 from ptr @pos
  521642 = add i32 %pos.load511641, i32 1
  store i32 %521642 to ptr @pos
  br bb %skip_space.if.exit491645
skip_space.if.exit491645:
  br bb %skip_space.if.exit391631
skip_space.else501647:
  pos.load531648 = load i32 from ptr @pos
  541649 = mul i32 %pos.load531648, i32 4
  551650 = ptradd ptr %buf, i32 %541649
  55.load1651 = load i32 from ptr %551650
  571652 = icmp eq i32 %55.load1651, i32 13
  br i1 %571652, bb %skip_space.then581654, bb %skip_space.else601659
skip_space.then581654:
  pos.load611655 = load i32 from ptr @pos
  621656 = add i32 %pos.load611655, i32 1
  store i32 %621656 to ptr @pos
  br bb %skip_space.if.exit491645
skip_space.else601659:
  br bb %skip_space.while.exit1601
skip_space.entry121662:
  br bb %skip_space.while.cond1664
skip_space.while.cond1664:
  pos.load1665 = load i32 from ptr @pos
  201666 = icmp sge i32 %pos.load1665, i32 %len
  br i1 %201666, bb %skip_space.then211670, bb %skip_space.if.exit221672
skip_space.while.exit1668:
  br bb %if.exit521.split
skip_space.then211670:
  br bb %skip_space.while.exit1668
skip_space.if.exit221672:
  pos.load231673 = load i32 from ptr @pos
  241674 = mul i32 %pos.load231673, i32 4
  251675 = ptradd ptr %buf, i32 %241674
  25.load1676 = load i32 from ptr %251675
  271677 = icmp eq i32 %25.load1676, i32 32
  br i1 %271677, bb %skip_space.then281679, bb %skip_space.else301686
skip_space.then281679:
  pos.load311680 = load i32 from ptr @pos
  321681 = add i32 %pos.load311680, i32 1
  store i32 %321681 to ptr @pos
  br bb %skip_space.if.exit291684
skip_space.if.exit291684:
  br bb %skip_space.while.cond1664
skip_space.else301686:
  pos.load331687 = load i32 from ptr @pos
  341688 = mul i32 %pos.load331687, i32 4
  351689 = ptradd ptr %buf, i32 %341688
  35.load1690 = load i32 from ptr %351689
  371691 = icmp eq i32 %35.load1690, i32 9
  br i1 %371691, bb %skip_space.then381693, bb %skip_space.else401700
skip_space.then381693:
  pos.load411694 = load i32 from ptr @pos
  421695 = add i32 %pos.load411694, i32 1
  store i32 %421695 to ptr @pos
  br bb %skip_space.if.exit391698
skip_space.if.exit391698:
  br bb %skip_space.if.exit291684
skip_space.else401700:
  pos.load431701 = load i32 from ptr @pos
  441702 = mul i32 %pos.load431701, i32 4
  451703 = ptradd ptr %buf, i32 %441702
  45.load1704 = load i32 from ptr %451703
  471705 = icmp eq i32 %45.load1704, i32 10
  br i1 %471705, bb %skip_space.then481707, bb %skip_space.else501714
skip_space.then481707:
  pos.load511708 = load i32 from ptr @pos
  521709 = add i32 %pos.load511708, i32 1
  store i32 %521709 to ptr @pos
  br bb %skip_space.if.exit491712
skip_space.if.exit491712:
  br bb %skip_space.if.exit391698
skip_space.else501714:
  pos.load531715 = load i32 from ptr @pos
  541716 = mul i32 %pos.load531715, i32 4
  551717 = ptradd ptr %buf, i32 %541716
  55.load1718 = load i32 from ptr %551717
  571719 = icmp eq i32 %55.load1718, i32 13
  br i1 %571719, bb %skip_space.then581721, bb %skip_space.else601726
skip_space.then581721:
  pos.load611722 = load i32 from ptr @pos
  621723 = add i32 %pos.load611722, i32 1
  store i32 %621723 to ptr @pos
  br bb %skip_space.if.exit491712
skip_space.else601726:
  br bb %skip_space.while.exit1668
skip_space.entry121729:
  br bb %skip_space.while.cond1731
skip_space.while.cond1731:
  pos.load1732 = load i32 from ptr @pos
  201733 = icmp sge i32 %pos.load1732, i32 %len
  br i1 %201733, bb %skip_space.then211737, bb %skip_space.if.exit221739
skip_space.while.exit1735:
  pos.load526 = load i32 from ptr @pos
  528 = icmp sge i32 %pos.load526, i32 %len
  br i1 %528, bb %then529, bb %else531
skip_space.then211737:
  br bb %skip_space.while.exit1735
skip_space.if.exit221739:
  pos.load231740 = load i32 from ptr @pos
  241741 = mul i32 %pos.load231740, i32 4
  251742 = ptradd ptr %buf, i32 %241741
  25.load1743 = load i32 from ptr %251742
  271744 = icmp eq i32 %25.load1743, i32 32
  br i1 %271744, bb %skip_space.then281746, bb %skip_space.else301753
skip_space.then281746:
  pos.load311747 = load i32 from ptr @pos
  321748 = add i32 %pos.load311747, i32 1
  store i32 %321748 to ptr @pos
  br bb %skip_space.if.exit291751
skip_space.if.exit291751:
  br bb %skip_space.while.cond1731
skip_space.else301753:
  pos.load331754 = load i32 from ptr @pos
  341755 = mul i32 %pos.load331754, i32 4
  351756 = ptradd ptr %buf, i32 %341755
  35.load1757 = load i32 from ptr %351756
  371758 = icmp eq i32 %35.load1757, i32 9
  br i1 %371758, bb %skip_space.then381760, bb %skip_space.else401767
skip_space.then381760:
  pos.load411761 = load i32 from ptr @pos
  421762 = add i32 %pos.load411761, i32 1
  store i32 %421762 to ptr @pos
  br bb %skip_space.if.exit391765
skip_space.if.exit391765:
  br bb %skip_space.if.exit291751
skip_space.else401767:
  pos.load431768 = load i32 from ptr @pos
  441769 = mul i32 %pos.load431768, i32 4
  451770 = ptradd ptr %buf, i32 %441769
  45.load1771 = load i32 from ptr %451770
  471772 = icmp eq i32 %45.load1771, i32 10
  br i1 %471772, bb %skip_space.then481774, bb %skip_space.else501781
skip_space.then481774:
  pos.load511775 = load i32 from ptr @pos
  521776 = add i32 %pos.load511775, i32 1
  store i32 %521776 to ptr @pos
  br bb %skip_space.if.exit491779
skip_space.if.exit491779:
  br bb %skip_space.if.exit391765
skip_space.else501781:
  pos.load531782 = load i32 from ptr @pos
  541783 = mul i32 %pos.load531782, i32 4
  551784 = ptradd ptr %buf, i32 %541783
  55.load1785 = load i32 from ptr %551784
  571786 = icmp eq i32 %55.load1785, i32 13
  br i1 %571786, bb %skip_space.then581788, bb %skip_space.else601793
skip_space.then581788:
  pos.load611789 = load i32 from ptr @pos
  621790 = add i32 %pos.load611789, i32 1
  store i32 %621790 to ptr @pos
  br bb %skip_space.if.exit491779
skip_space.else601793:
  br bb %skip_space.while.exit1735
is_number.then:
  81934 = icmp sle i32 %110.load, i32 57
  br i1 %81934, bb %is_number.then9, bb %is_number.else11
is_number.else:
  br bb %else105.split
is_number.then9:
  br bb %else105.split
is_number.else11:
  br bb %else105.split
is_number.then1947:
  81948 = icmp sle i32 %201.load, i32 57
  br i1 %81948, bb %is_number.then91952, bb %is_number.else111954
is_number.else1950:
  br bb %else198.split
is_number.then91952:
  br bb %else198.split
is_number.else111954:
  br bb %else198.split
is_number.then1961:
  81962 = icmp sle i32 %216.load, i32 57
  br i1 %81962, bb %is_number.then91966, bb %is_number.else111968
is_number.else1964:
  br bb %while.body208.split
is_number.then91966:
  br bb %while.body208.split
is_number.else111968:
  br bb %while.body208.split
is_number.then1975:
  81976 = icmp sle i32 %247.load, i32 57
  br i1 %81976, bb %is_number.then91980, bb %is_number.else111982
is_number.else1978:
  br bb %while.body239.split
is_number.then91980:
  br bb %while.body239.split
is_number.else111982:
  br bb %while.body239.split
is_number.then1989:
  81990 = icmp sle i32 %306.load, i32 57
  br i1 %81990, bb %is_number.then91994, bb %is_number.else111996
is_number.else1992:
  br bb %while.body298.split
is_number.then91994:
  br bb %while.body298.split
is_number.else111996:
  br bb %while.body298.split
}

external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry749:
  751 = call i32 getch()
  br bb %while.cond753
while.cond753:
  i.phi = phi [bb %entry749, i32 0, bb %while.body754, i32 %764]
  get.phi = phi [bb %entry749, i32 %751, bb %while.body754, i32 %765]
  757 = icmp ne i32 %get.phi, i32 35
  br i1 %757, bb %while.body754, bb %while.exit755
while.body754:
  760 = mul i32 %i.phi, i32 4
  761 = ptradd ptr @buffer, i32 %760
  store i32 %get.phi to ptr %761
  764 = add i32 %i.phi, i32 1
  765 = call i32 getch()
  br bb %while.cond753
while.exit755:
  br bb %skip_space.entry121796
then775:
  call void putch(i32 111)
  call void putch(i32 107)
  call void putch(i32 10)
  ret i32 0
else777:
  call void putch(i32 110)
  call void putch(i32 111)
  call void putch(i32 116)
  call void putch(i32 32)
  call void putch(i32 111)
  call void putch(i32 107)
  call void putch(i32 10)
  ret i32 1
skip_space.entry121796:
  br bb %skip_space.while.cond1798
skip_space.while.cond1798:
  pos.load1799 = load i32 from ptr @pos
  201800 = icmp sge i32 %pos.load1799, i32 %i.phi
  br i1 %201800, bb %skip_space.then211804, bb %skip_space.if.exit221806
skip_space.while.exit1802:
  770 = call i32 detect_item(i32 0, ptr @buffer, i32 %i.phi)
  br bb %skip_space.entry121863
skip_space.then211804:
  br bb %skip_space.while.exit1802
skip_space.if.exit221806:
  pos.load231807 = load i32 from ptr @pos
  241808 = mul i32 %pos.load231807, i32 4
  251809 = ptradd ptr @buffer, i32 %241808
  25.load1810 = load i32 from ptr %251809
  271811 = icmp eq i32 %25.load1810, i32 32
  br i1 %271811, bb %skip_space.then281813, bb %skip_space.else301820
skip_space.then281813:
  pos.load311814 = load i32 from ptr @pos
  321815 = add i32 %pos.load311814, i32 1
  store i32 %321815 to ptr @pos
  br bb %skip_space.if.exit291818
skip_space.if.exit291818:
  br bb %skip_space.while.cond1798
skip_space.else301820:
  pos.load331821 = load i32 from ptr @pos
  341822 = mul i32 %pos.load331821, i32 4
  351823 = ptradd ptr @buffer, i32 %341822
  35.load1824 = load i32 from ptr %351823
  371825 = icmp eq i32 %35.load1824, i32 9
  br i1 %371825, bb %skip_space.then381827, bb %skip_space.else401834
skip_space.then381827:
  pos.load411828 = load i32 from ptr @pos
  421829 = add i32 %pos.load411828, i32 1
  store i32 %421829 to ptr @pos
  br bb %skip_space.if.exit391832
skip_space.if.exit391832:
  br bb %skip_space.if.exit291818
skip_space.else401834:
  pos.load431835 = load i32 from ptr @pos
  441836 = mul i32 %pos.load431835, i32 4
  451837 = ptradd ptr @buffer, i32 %441836
  45.load1838 = load i32 from ptr %451837
  471839 = icmp eq i32 %45.load1838, i32 10
  br i1 %471839, bb %skip_space.then481841, bb %skip_space.else501848
skip_space.then481841:
  pos.load511842 = load i32 from ptr @pos
  521843 = add i32 %pos.load511842, i32 1
  store i32 %521843 to ptr @pos
  br bb %skip_space.if.exit491846
skip_space.if.exit491846:
  br bb %skip_space.if.exit391832
skip_space.else501848:
  pos.load531849 = load i32 from ptr @pos
  541850 = mul i32 %pos.load531849, i32 4
  551851 = ptradd ptr @buffer, i32 %541850
  55.load1852 = load i32 from ptr %551851
  571853 = icmp eq i32 %55.load1852, i32 13
  br i1 %571853, bb %skip_space.then581855, bb %skip_space.else601860
skip_space.then581855:
  pos.load611856 = load i32 from ptr @pos
  621857 = add i32 %pos.load611856, i32 1
  store i32 %621857 to ptr @pos
  br bb %skip_space.if.exit491846
skip_space.else601860:
  br bb %skip_space.while.exit1802
skip_space.entry121863:
  br bb %skip_space.while.cond1865
skip_space.while.cond1865:
  pos.load1866 = load i32 from ptr @pos
  201867 = icmp sge i32 %pos.load1866, i32 %i.phi
  br i1 %201867, bb %skip_space.then211871, bb %skip_space.if.exit221873
skip_space.while.exit1869:
  774 = icmp ne i32 %770, i32 0
  br i1 %774, bb %then775, bb %else777
skip_space.then211871:
  br bb %skip_space.while.exit1869
skip_space.if.exit221873:
  pos.load231874 = load i32 from ptr @pos
  241875 = mul i32 %pos.load231874, i32 4
  251876 = ptradd ptr @buffer, i32 %241875
  25.load1877 = load i32 from ptr %251876
  271878 = icmp eq i32 %25.load1877, i32 32
  br i1 %271878, bb %skip_space.then281880, bb %skip_space.else301887
skip_space.then281880:
  pos.load311881 = load i32 from ptr @pos
  321882 = add i32 %pos.load311881, i32 1
  store i32 %321882 to ptr @pos
  br bb %skip_space.if.exit291885
skip_space.if.exit291885:
  br bb %skip_space.while.cond1865
skip_space.else301887:
  pos.load331888 = load i32 from ptr @pos
  341889 = mul i32 %pos.load331888, i32 4
  351890 = ptradd ptr @buffer, i32 %341889
  35.load1891 = load i32 from ptr %351890
  371892 = icmp eq i32 %35.load1891, i32 9
  br i1 %371892, bb %skip_space.then381894, bb %skip_space.else401901
skip_space.then381894:
  pos.load411895 = load i32 from ptr @pos
  421896 = add i32 %pos.load411895, i32 1
  store i32 %421896 to ptr @pos
  br bb %skip_space.if.exit391899
skip_space.if.exit391899:
  br bb %skip_space.if.exit291885
skip_space.else401901:
  pos.load431902 = load i32 from ptr @pos
  441903 = mul i32 %pos.load431902, i32 4
  451904 = ptradd ptr @buffer, i32 %441903
  45.load1905 = load i32 from ptr %451904
  471906 = icmp eq i32 %45.load1905, i32 10
  br i1 %471906, bb %skip_space.then481908, bb %skip_space.else501915
skip_space.then481908:
  pos.load511909 = load i32 from ptr @pos
  521910 = add i32 %pos.load511909, i32 1
  store i32 %521910 to ptr @pos
  br bb %skip_space.if.exit491913
skip_space.if.exit491913:
  br bb %skip_space.if.exit391899
skip_space.else501915:
  pos.load531916 = load i32 from ptr @pos
  541917 = mul i32 %pos.load531916, i32 4
  551918 = ptradd ptr @buffer, i32 %541917
  55.load1919 = load i32 from ptr %551918
  571920 = icmp eq i32 %55.load1919, i32 13
  br i1 %571920, bb %skip_space.then581922, bb %skip_space.else601927
skip_space.then581922:
  pos.load611923 = load i32 from ptr @pos
  621924 = add i32 %pos.load611923, i32 1
  store i32 %621924 to ptr @pos
  br bb %skip_space.if.exit491913
skip_space.else601927:
  br bb %skip_space.while.exit1869
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

void skip_space(ptr buf, i32 len) {
entry12:
  br bb %while.cond
while.cond:
  pos.load = load i32 from ptr @pos
  20 = icmp sge i32 %pos.load, i32 %len
  br i1 %20, bb %then21, bb %if.exit22
while.exit:
  ret 
then21:
  br bb %while.exit
if.exit22:
  pos.load23 = load i32 from ptr @pos
  24 = mul i32 %pos.load23, i32 4
  25 = ptradd ptr %buf, i32 %24
  25.load = load i32 from ptr %25
  27 = icmp eq i32 %25.load, i32 32
  br i1 %27, bb %then28, bb %else30
then28:
  pos.load31 = load i32 from ptr @pos
  32 = add i32 %pos.load31, i32 1
  store i32 %32 to ptr @pos
  br bb %if.exit29
if.exit29:
  br bb %while.cond
else30:
  pos.load33 = load i32 from ptr @pos
  34 = mul i32 %pos.load33, i32 4
  35 = ptradd ptr %buf, i32 %34
  35.load = load i32 from ptr %35
  37 = icmp eq i32 %35.load, i32 9
  br i1 %37, bb %then38, bb %else40
then38:
  pos.load41 = load i32 from ptr @pos
  42 = add i32 %pos.load41, i32 1
  store i32 %42 to ptr @pos
  br bb %if.exit39
if.exit39:
  br bb %if.exit29
else40:
  pos.load43 = load i32 from ptr @pos
  44 = mul i32 %pos.load43, i32 4
  45 = ptradd ptr %buf, i32 %44
  45.load = load i32 from ptr %45
  47 = icmp eq i32 %45.load, i32 10
  br i1 %47, bb %then48, bb %else50
then48:
  pos.load51 = load i32 from ptr @pos
  52 = add i32 %pos.load51, i32 1
  store i32 %52 to ptr @pos
  br bb %if.exit49
if.exit49:
  br bb %if.exit39
else50:
  pos.load53 = load i32 from ptr @pos
  54 = mul i32 %pos.load53, i32 4
  55 = ptradd ptr %buf, i32 %54
  55.load = load i32 from ptr %55
  57 = icmp eq i32 %55.load, i32 13
  br i1 %57, bb %then58, bb %else60
then58:
  pos.load61 = load i32 from ptr @pos
  62 = add i32 %pos.load61, i32 1
  store i32 %62 to ptr @pos
  br bb %if.exit49
else60:
  br bb %while.exit
}

i32 is_number(i32 ch) {
entry:
  3 = icmp sge i32 %ch, i32 48
  br i1 %3, bb %then, bb %else
then:
  8 = icmp sle i32 %ch, i32 57
  br i1 %8, bb %then9, bb %else11
else:
  ret i32 0
then9:
  ret i32 1
else11:
  ret i32 0
}


