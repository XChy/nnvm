global ptr buffer init with 50000000 x i32 zeros
global ptr pos init with i32 0
i32 detect_item(i32 type, ptr buf, i32 len) {
entry63:
  %mNull = stack 16
  %mFalse = stack 20
  %mTrue = stack 16
  pos.load66 = load i32 from ptr @pos
  68 = icmp sge i32 %pos.load66, i32 %len
  br i1 %68, bb %then69, bb %skip_space.while.cond
then69:
  ret i32 0
then75:
  pos.load78 = load i32 from ptr @pos
  79 = mul i32 %pos.load78, i32 4
  80 = ptradd ptr %buf, i32 %79
  80.load = load i32 from ptr %80
  82 = icmp eq i32 %80.load, i32 123
  br i1 %82, bb %then83, bb %else85
else77:
  170 = icmp eq i32 %type, i32 1
  br i1 %170, bb %then171, bb %else173
then83:
  87 = call i32 detect_item(i32 4, ptr %buf, i32 %len)
  ret i32 %87
else85:
  pos.load88 = load i32 from ptr @pos
  89 = mul i32 %pos.load88, i32 4
  90 = ptradd ptr %buf, i32 %89
  90.load = load i32 from ptr %90
  92 = icmp eq i32 %90.load, i32 91
  br i1 %92, bb %then93, bb %else95
then93:
  97 = call i32 detect_item(i32 3, ptr %buf, i32 %len)
  ret i32 %97
else95:
  pos.load98 = load i32 from ptr @pos
  99 = mul i32 %pos.load98, i32 4
  100 = ptradd ptr %buf, i32 %99
  100.load = load i32 from ptr %100
  102 = icmp eq i32 %100.load, i32 34
  br i1 %102, bb %then103, bb %else105
then103:
  107 = call i32 detect_item(i32 2, ptr %buf, i32 %len)
  ret i32 %107
else105:
  pos.load108 = load i32 from ptr @pos
  109 = mul i32 %pos.load108, i32 4
  110 = ptradd ptr %buf, i32 %109
  110.load = load i32 from ptr %110
  31761 = icmp sge i32 %110.load, i32 48
  br i1 %31761, bb %is_number.then, bb %is_number.else
else105.split:
  112.ret = phi [bb %is_number.else, i32 0, bb %is_number.then9, i32 1, bb %is_number.else11, i32 0]
  113 = icmp eq i32 %112.ret, i32 1
  br i1 %113, bb %then114, bb %else116
then114:
  118 = call i32 detect_item(i32 1, ptr %buf, i32 %len)
  ret i32 %118
else116:
  pos.load119 = load i32 from ptr @pos
  120 = mul i32 %pos.load119, i32 4
  121 = ptradd ptr %buf, i32 %120
  121.load = load i32 from ptr %121
  123 = icmp eq i32 %121.load, i32 43
  br i1 %123, bb %then124, bb %else126
then124:
  128 = call i32 detect_item(i32 1, ptr %buf, i32 %len)
  ret i32 %128
else126:
  pos.load129 = load i32 from ptr @pos
  130 = mul i32 %pos.load129, i32 4
  131 = ptradd ptr %buf, i32 %130
  131.load = load i32 from ptr %131
  133 = icmp eq i32 %131.load, i32 45
  br i1 %133, bb %then134, bb %else136
then134:
  138 = call i32 detect_item(i32 1, ptr %buf, i32 %len)
  ret i32 %138
else136:
  pos.load139 = load i32 from ptr @pos
  140 = mul i32 %pos.load139, i32 4
  141 = ptradd ptr %buf, i32 %140
  141.load = load i32 from ptr %141
  143 = icmp eq i32 %141.load, i32 116
  br i1 %143, bb %then144, bb %else146
then144:
  148 = call i32 detect_item(i32 5, ptr %buf, i32 %len)
  ret i32 %148
else146:
  pos.load149 = load i32 from ptr @pos
  150 = mul i32 %pos.load149, i32 4
  151 = ptradd ptr %buf, i32 %150
  151.load = load i32 from ptr %151
  153 = icmp eq i32 %151.load, i32 102
  br i1 %153, bb %then154, bb %else156
then154:
  158 = call i32 detect_item(i32 6, ptr %buf, i32 %len)
  ret i32 %158
else156:
  pos.load159 = load i32 from ptr @pos
  160 = mul i32 %pos.load159, i32 4
  161 = ptradd ptr %buf, i32 %160
  161.load = load i32 from ptr %161
  163 = icmp eq i32 %161.load, i32 110
  br i1 %163, bb %then164, bb %else166
then164:
  168 = call i32 detect_item(i32 7, ptr %buf, i32 %len)
  ret i32 %168
else166:
  ret i32 0
then171:
  pos.load174 = load i32 from ptr @pos
  175 = mul i32 %pos.load174, i32 4
  176 = ptradd ptr %buf, i32 %175
  176.load = load i32 from ptr %176
  178 = icmp eq i32 %176.load, i32 43
  br i1 %178, bb %then179, bb %else181
if.exit172:
  ret i32 1
else173:
  315 = icmp eq i32 %type, i32 2
  br i1 %315, bb %then316, bb %else318
then179:
  pos.load182 = load i32 from ptr @pos
  183 = add i32 %pos.load182, i32 1
  store i32 %183 to ptr @pos
  br bb %if.exit180
if.exit180:
  pos.load193 = load i32 from ptr @pos
  195 = icmp sge i32 %pos.load193, i32 %len
  br i1 %195, bb %then196, bb %else198
else181:
  pos.load184 = load i32 from ptr @pos
  185 = mul i32 %pos.load184, i32 4
  186 = ptradd ptr %buf, i32 %185
  186.load = load i32 from ptr %186
  188 = icmp eq i32 %186.load, i32 45
  br i1 %188, bb %then189, bb %if.exit180
then189:
  pos.load191 = load i32 from ptr @pos
  192 = add i32 %pos.load191, i32 1
  store i32 %192 to ptr @pos
  br bb %if.exit180
then196:
  ret i32 0
else198:
  pos.load199 = load i32 from ptr @pos
  200 = mul i32 %pos.load199, i32 4
  201 = ptradd ptr %buf, i32 %200
  201.load = load i32 from ptr %201
  31775 = icmp sge i32 %201.load, i32 48
  br i1 %31775, bb %is_number.then1777, bb %is_number.else1780
else198.split:
  203.ret = phi [bb %is_number.else1780, i32 0, bb %is_number.then91782, i32 1, bb %is_number.else111784, i32 0]
  204 = icmp eq i32 %203.ret, i32 0
  br i1 %204, bb %then205, bb %while.cond207
then205:
  ret i32 0
while.cond207:
  pos.load210 = load i32 from ptr @pos
  212 = icmp slt i32 %pos.load210, i32 %len
  br i1 %212, bb %while.body208, bb %while.exit209
while.body208:
  pos.load214 = load i32 from ptr @pos
  215 = mul i32 %pos.load214, i32 4
  216 = ptradd ptr %buf, i32 %215
  216.load = load i32 from ptr %216
  31789 = icmp sge i32 %216.load, i32 48
  br i1 %31789, bb %is_number.then1791, bb %is_number.else1794
while.body208.split:
  218.ret = phi [bb %is_number.else1794, i32 0, bb %is_number.then91796, i32 1, bb %is_number.else111798, i32 0]
  219 = icmp ne i32 %218.ret, i32 1
  br i1 %219, bb %while.exit209, bb %if.exit221
while.exit209:
  pos.load224 = load i32 from ptr @pos
  226 = icmp slt i32 %pos.load224, i32 %len
  br i1 %226, bb %then227, bb %if.exit228
if.exit221:
  pos.load222 = load i32 from ptr @pos
  223 = add i32 %pos.load222, i32 1
  store i32 %223 to ptr @pos
  br bb %while.cond207
then227:
  pos.load229 = load i32 from ptr @pos
  230 = mul i32 %pos.load229, i32 4
  231 = ptradd ptr %buf, i32 %230
  231.load = load i32 from ptr %231
  233 = icmp eq i32 %231.load, i32 46
  br i1 %233, bb %then234, bb %if.exit228
if.exit228:
  pos.load255 = load i32 from ptr @pos
  257 = icmp slt i32 %pos.load255, i32 %len
  br i1 %257, bb %then258, bb %if.exit172
then234:
  pos.load236 = load i32 from ptr @pos
  237 = add i32 %pos.load236, i32 1
  store i32 %237 to ptr @pos
  br bb %while.cond238
while.cond238:
  pos.load241 = load i32 from ptr @pos
  243 = icmp slt i32 %pos.load241, i32 %len
  br i1 %243, bb %while.body239, bb %if.exit228
while.body239:
  pos.load245 = load i32 from ptr @pos
  246 = mul i32 %pos.load245, i32 4
  247 = ptradd ptr %buf, i32 %246
  247.load = load i32 from ptr %247
  31803 = icmp sge i32 %247.load, i32 48
  br i1 %31803, bb %is_number.then1805, bb %is_number.else1808
while.body239.split:
  249.ret = phi [bb %is_number.else1808, i32 0, bb %is_number.then91810, i32 1, bb %is_number.else111812, i32 0]
  250 = icmp ne i32 %249.ret, i32 1
  br i1 %250, bb %if.exit228, bb %if.exit252
if.exit252:
  pos.load253 = load i32 from ptr @pos
  254 = add i32 %pos.load253, i32 1
  store i32 %254 to ptr @pos
  br bb %while.cond238
then258:
  pos.load260 = load i32 from ptr @pos
  261 = mul i32 %pos.load260, i32 4
  262 = ptradd ptr %buf, i32 %261
  262.load = load i32 from ptr %262
  264 = icmp eq i32 %262.load, i32 101
  br i1 %264, bb %then265, bb %if.exit172
then265:
  pos.load267 = load i32 from ptr @pos
  268 = add i32 %pos.load267, i32 1
  store i32 %268 to ptr @pos
  271 = icmp slt i32 %268, i32 %len
  br i1 %271, bb %then272, bb %if.exit273
then272:
  pos.load274 = load i32 from ptr @pos
  275 = mul i32 %pos.load274, i32 4
  276 = ptradd ptr %buf, i32 %275
  276.load = load i32 from ptr %276
  278 = icmp eq i32 %276.load, i32 43
  br i1 %278, bb %then279, bb %if.exit273
if.exit273:
  pos.load283 = load i32 from ptr @pos
  285 = icmp slt i32 %pos.load283, i32 %len
  br i1 %285, bb %then286, bb %while.cond297
then279:
  pos.load281 = load i32 from ptr @pos
  282 = add i32 %pos.load281, i32 1
  store i32 %282 to ptr @pos
  br bb %if.exit273
then286:
  pos.load288 = load i32 from ptr @pos
  289 = mul i32 %pos.load288, i32 4
  290 = ptradd ptr %buf, i32 %289
  290.load = load i32 from ptr %290
  292 = icmp eq i32 %290.load, i32 45
  br i1 %292, bb %then293, bb %while.cond297
then293:
  pos.load295 = load i32 from ptr @pos
  296 = add i32 %pos.load295, i32 1
  store i32 %296 to ptr @pos
  br bb %while.cond297
while.cond297:
  pos.load300 = load i32 from ptr @pos
  302 = icmp slt i32 %pos.load300, i32 %len
  br i1 %302, bb %while.body298, bb %if.exit172
while.body298:
  pos.load304 = load i32 from ptr @pos
  305 = mul i32 %pos.load304, i32 4
  306 = ptradd ptr %buf, i32 %305
  306.load = load i32 from ptr %306
  31817 = icmp sge i32 %306.load, i32 48
  br i1 %31817, bb %is_number.then1819, bb %is_number.else1822
while.body298.split:
  308.ret = phi [bb %is_number.else1822, i32 0, bb %is_number.then91824, i32 1, bb %is_number.else111826, i32 0]
  309 = icmp ne i32 %308.ret, i32 1
  br i1 %309, bb %if.exit172, bb %if.exit311
if.exit311:
  pos.load312 = load i32 from ptr @pos
  313 = add i32 %pos.load312, i32 1
  store i32 %313 to ptr @pos
  br bb %while.cond297
then316:
  pos.load319 = load i32 from ptr @pos
  320 = add i32 %pos.load319, i32 1
  store i32 %320 to ptr @pos
  br bb %while.cond321
else318:
  363 = icmp eq i32 %type, i32 3
  br i1 %363, bb %then364, bb %else366
while.cond321:
  pos.load324 = load i32 from ptr @pos
  326 = icmp slt i32 %pos.load324, i32 %len
  br i1 %326, bb %while.body322, bb %while.exit323
while.body322:
  pos.load328 = load i32 from ptr @pos
  329 = mul i32 %pos.load328, i32 4
  330 = ptradd ptr %buf, i32 %329
  330.load = load i32 from ptr %330
  332 = icmp eq i32 %330.load, i32 34
  br i1 %332, bb %while.exit323, bb %if.exit334
while.exit323:
  pos.load347 = load i32 from ptr @pos
  349 = icmp sge i32 %pos.load347, i32 %len
  br i1 %349, bb %then350, bb %else352
if.exit334:
  pos.load335 = load i32 from ptr @pos
  336 = mul i32 %pos.load335, i32 4
  337 = ptradd ptr %buf, i32 %336
  337.load = load i32 from ptr %337
  339 = icmp eq i32 %337.load, i32 92
  br i1 %339, bb %then340, bb %else342
then340:
  pos.load343 = load i32 from ptr @pos
  344 = add i32 %pos.load343, i32 2
  store i32 %344 to ptr @pos
  br bb %while.cond321
else342:
  pos.load345 = load i32 from ptr @pos
  346 = add i32 %pos.load345, i32 1
  store i32 %346 to ptr @pos
  br bb %while.cond321
then350:
  ret i32 0
else352:
  pos.load353 = load i32 from ptr @pos
  354 = mul i32 %pos.load353, i32 4
  355 = ptradd ptr %buf, i32 %354
  355.load = load i32 from ptr %355
  357 = icmp ne i32 %355.load, i32 34
  br i1 %357, bb %then358, bb %if.exit359
then358:
  ret i32 0
if.exit359:
  pos.load360 = load i32 from ptr @pos
  361 = add i32 %pos.load360, i32 1
  store i32 %361 to ptr @pos
  br bb %if.exit172
then364:
  pos.load367 = load i32 from ptr @pos
  368 = add i32 %pos.load367, i32 1
  store i32 %368 to ptr @pos
  br bb %skip_space.while.cond850
else366:
  429 = icmp eq i32 %type, i32 4
  br i1 %429, bb %then430, bb %else432
then374:
  pos.load376 = load i32 from ptr @pos
  377 = mul i32 %pos.load376, i32 4
  378 = ptradd ptr %buf, i32 %377
  378.load = load i32 from ptr %378
  380 = icmp eq i32 %378.load, i32 93
  br i1 %380, bb %then381, bb %if.exit375
if.exit375:
  386 = call i32 detect_item(i32 0, ptr %buf, i32 %len)
  387 = icmp eq i32 %386, i32 0
  br i1 %387, bb %then388, bb %skip_space.while.cond907
then381:
  pos.load383 = load i32 from ptr @pos
  384 = add i32 %pos.load383, i32 1
  store i32 %384 to ptr @pos
  ret i32 1
then388:
  ret i32 0
while.cond392:
  pos.load395 = load i32 from ptr @pos
  396 = mul i32 %pos.load395, i32 4
  397 = ptradd ptr %buf, i32 %396
  397.load = load i32 from ptr %397
  399 = icmp eq i32 %397.load, i32 44
  br i1 %399, bb %while.body393, bb %skip_space.while.cond1078
while.body393:
  pos.load401 = load i32 from ptr @pos
  402 = add i32 %pos.load401, i32 1
  store i32 %402 to ptr @pos
  br bb %skip_space.while.cond964
then408:
  ret i32 0
then417:
  ret i32 0
if.exit418:
  pos.load419 = load i32 from ptr @pos
  420 = mul i32 %pos.load419, i32 4
  421 = ptradd ptr %buf, i32 %420
  421.load = load i32 from ptr %421
  423 = icmp ne i32 %421.load, i32 93
  br i1 %423, bb %then424, bb %if.exit425
then424:
  ret i32 0
if.exit425:
  pos.load426 = load i32 from ptr @pos
  427 = add i32 %pos.load426, i32 1
  store i32 %427 to ptr @pos
  br bb %if.exit172
then430:
  pos.load433 = load i32 from ptr @pos
  434 = add i32 %pos.load433, i32 1
  store i32 %434 to ptr @pos
  br bb %skip_space.while.cond1135
else432:
  542 = icmp eq i32 %type, i32 5
  br i1 %542, bb %then543, bb %else545
then440:
  pos.load442 = load i32 from ptr @pos
  443 = mul i32 %pos.load442, i32 4
  444 = ptradd ptr %buf, i32 %443
  444.load = load i32 from ptr %444
  446 = icmp eq i32 %444.load, i32 125
  br i1 %446, bb %then447, bb %if.exit441
if.exit441:
  452 = call i32 detect_item(i32 2, ptr %buf, i32 %len)
  453 = icmp eq i32 %452, i32 0
  br i1 %453, bb %then454, bb %skip_space.while.cond1192
then447:
  pos.load449 = load i32 from ptr @pos
  450 = add i32 %pos.load449, i32 1
  store i32 %450 to ptr @pos
  ret i32 1
then454:
  ret i32 0
then461:
  ret i32 0
if.exit462:
  pos.load463 = load i32 from ptr @pos
  464 = mul i32 %pos.load463, i32 4
  465 = ptradd ptr %buf, i32 %464
  465.load = load i32 from ptr %465
  467 = icmp ne i32 %465.load, i32 58
  br i1 %467, bb %then468, bb %if.exit469
then468:
  ret i32 0
if.exit469:
  pos.load470 = load i32 from ptr @pos
  471 = add i32 %pos.load470, i32 1
  store i32 %471 to ptr @pos
  br bb %skip_space.while.cond1249
then477:
  ret i32 0
while.cond481:
  pos.load484 = load i32 from ptr @pos
  485 = mul i32 %pos.load484, i32 4
  486 = ptradd ptr %buf, i32 %485
  486.load = load i32 from ptr %486
  488 = icmp eq i32 %486.load, i32 44
  br i1 %488, bb %while.body482, bb %skip_space.while.cond1591
while.body482:
  pos.load490 = load i32 from ptr @pos
  491 = add i32 %pos.load490, i32 1
  store i32 %491 to ptr @pos
  br bb %skip_space.while.cond1363
then497:
  ret i32 0
then504:
  ret i32 0
if.exit505:
  pos.load506 = load i32 from ptr @pos
  507 = mul i32 %pos.load506, i32 4
  508 = ptradd ptr %buf, i32 %507
  508.load = load i32 from ptr %508
  510 = icmp ne i32 %508.load, i32 58
  br i1 %510, bb %then511, bb %if.exit512
then511:
  ret i32 0
if.exit512:
  pos.load513 = load i32 from ptr @pos
  514 = add i32 %pos.load513, i32 1
  store i32 %514 to ptr @pos
  br bb %skip_space.while.cond1477
then520:
  ret i32 0
then529:
  ret i32 0
else531:
  pos.load532 = load i32 from ptr @pos
  533 = mul i32 %pos.load532, i32 4
  534 = ptradd ptr %buf, i32 %533
  534.load = load i32 from ptr %534
  536 = icmp ne i32 %534.load, i32 125
  br i1 %536, bb %then537, bb %if.exit538
then537:
  ret i32 0
if.exit538:
  pos.load539 = load i32 from ptr @pos
  540 = add i32 %pos.load539, i32 1
  store i32 %540 to ptr @pos
  br bb %if.exit172
then543:
  store i32 116 to ptr %mTrue
  arr.index548 = ptradd ptr %mTrue, i32 4
  store i32 114 to ptr %arr.index548
  arr.index549 = ptradd ptr %mTrue, i32 8
  store i32 117 to ptr %arr.index549
  arr.index550 = ptradd ptr %mTrue, i32 12
  store i32 101 to ptr %arr.index550
  pos.load551 = load i32 from ptr @pos
  552 = add i32 %pos.load551, i32 3
  554 = icmp sge i32 %552, i32 %len
  br i1 %554, bb %then555, bb %else557
else545:
  607 = icmp eq i32 %type, i32 6
  br i1 %607, bb %then608, bb %else610
then555:
  ret i32 0
else557:
  pos.load558 = load i32 from ptr @pos
  559 = mul i32 %pos.load558, i32 4
  560 = ptradd ptr %buf, i32 %559
  560.load = load i32 from ptr %560
  563.load = load i32 from ptr %mTrue
  565 = icmp ne i32 %560.load, i32 %563.load
  br i1 %565, bb %then566, bb %else568
then566:
  ret i32 0
else568:
  pos.load569 = load i32 from ptr @pos
  570 = add i32 %pos.load569, i32 1
  571 = mul i32 %570, i32 4
  572 = ptradd ptr %buf, i32 %571
  572.load = load i32 from ptr %572
  575.load = load i32 from ptr %arr.index548
  577 = icmp ne i32 %572.load, i32 %575.load
  br i1 %577, bb %then578, bb %else580
then578:
  ret i32 0
else580:
  pos.load581 = load i32 from ptr @pos
  582 = add i32 %pos.load581, i32 2
  583 = mul i32 %582, i32 4
  584 = ptradd ptr %buf, i32 %583
  584.load = load i32 from ptr %584
  587.load = load i32 from ptr %arr.index549
  589 = icmp ne i32 %584.load, i32 %587.load
  br i1 %589, bb %then590, bb %else592
then590:
  ret i32 0
else592:
  pos.load593 = load i32 from ptr @pos
  594 = add i32 %pos.load593, i32 3
  595 = mul i32 %594, i32 4
  596 = ptradd ptr %buf, i32 %595
  596.load = load i32 from ptr %596
  599.load = load i32 from ptr %arr.index550
  601 = icmp ne i32 %596.load, i32 %599.load
  br i1 %601, bb %then602, bb %if.exit603
then602:
  ret i32 0
if.exit603:
  pos.load604 = load i32 from ptr @pos
  605 = add i32 %pos.load604, i32 4
  store i32 %605 to ptr @pos
  br bb %if.exit172
then608:
  store i32 102 to ptr %mFalse
  arr.index613 = ptradd ptr %mFalse, i32 4
  store i32 97 to ptr %arr.index613
  arr.index614 = ptradd ptr %mFalse, i32 8
  store i32 108 to ptr %arr.index614
  arr.index615 = ptradd ptr %mFalse, i32 12
  store i32 115 to ptr %arr.index615
  arr.index616 = ptradd ptr %mFalse, i32 16
  store i32 101 to ptr %arr.index616
  pos.load617 = load i32 from ptr @pos
  618 = add i32 %pos.load617, i32 4
  620 = icmp sge i32 %618, i32 %len
  br i1 %620, bb %then621, bb %else623
else610:
  685 = icmp eq i32 %type, i32 7
  br i1 %685, bb %then686, bb %else688
then621:
  ret i32 0
else623:
  pos.load624 = load i32 from ptr @pos
  625 = mul i32 %pos.load624, i32 4
  626 = ptradd ptr %buf, i32 %625
  626.load = load i32 from ptr %626
  629.load = load i32 from ptr %mFalse
  631 = icmp ne i32 %626.load, i32 %629.load
  br i1 %631, bb %then632, bb %else634
then632:
  ret i32 0
else634:
  pos.load635 = load i32 from ptr @pos
  636 = add i32 %pos.load635, i32 1
  637 = mul i32 %636, i32 4
  638 = ptradd ptr %buf, i32 %637
  638.load = load i32 from ptr %638
  641.load = load i32 from ptr %arr.index613
  643 = icmp ne i32 %638.load, i32 %641.load
  br i1 %643, bb %then644, bb %else646
then644:
  ret i32 0
else646:
  pos.load647 = load i32 from ptr @pos
  648 = add i32 %pos.load647, i32 2
  649 = mul i32 %648, i32 4
  650 = ptradd ptr %buf, i32 %649
  650.load = load i32 from ptr %650
  653.load = load i32 from ptr %arr.index614
  655 = icmp ne i32 %650.load, i32 %653.load
  br i1 %655, bb %then656, bb %else658
then656:
  ret i32 0
else658:
  pos.load659 = load i32 from ptr @pos
  660 = add i32 %pos.load659, i32 3
  661 = mul i32 %660, i32 4
  662 = ptradd ptr %buf, i32 %661
  662.load = load i32 from ptr %662
  665.load = load i32 from ptr %arr.index615
  667 = icmp ne i32 %662.load, i32 %665.load
  br i1 %667, bb %then668, bb %else670
then668:
  ret i32 0
else670:
  pos.load671 = load i32 from ptr @pos
  672 = add i32 %pos.load671, i32 4
  673 = mul i32 %672, i32 4
  674 = ptradd ptr %buf, i32 %673
  674.load = load i32 from ptr %674
  677.load = load i32 from ptr %arr.index616
  679 = icmp ne i32 %674.load, i32 %677.load
  br i1 %679, bb %then680, bb %if.exit681
then680:
  ret i32 0
if.exit681:
  pos.load682 = load i32 from ptr @pos
  683 = add i32 %pos.load682, i32 5
  store i32 %683 to ptr @pos
  br bb %if.exit172
then686:
  store i32 110 to ptr %mNull
  arr.index691 = ptradd ptr %mNull, i32 4
  store i32 117 to ptr %arr.index691
  arr.index692 = ptradd ptr %mNull, i32 8
  store i32 108 to ptr %arr.index692
  arr.index693 = ptradd ptr %mNull, i32 12
  store i32 108 to ptr %arr.index693
  pos.load694 = load i32 from ptr @pos
  695 = add i32 %pos.load694, i32 3
  697 = icmp sge i32 %695, i32 %len
  br i1 %697, bb %then698, bb %else700
else688:
  ret i32 0
then698:
  ret i32 0
else700:
  pos.load701 = load i32 from ptr @pos
  702 = mul i32 %pos.load701, i32 4
  703 = ptradd ptr %buf, i32 %702
  703.load = load i32 from ptr %703
  706.load = load i32 from ptr %mNull
  708 = icmp ne i32 %703.load, i32 %706.load
  br i1 %708, bb %then709, bb %else711
then709:
  ret i32 0
else711:
  pos.load712 = load i32 from ptr @pos
  713 = add i32 %pos.load712, i32 1
  714 = mul i32 %713, i32 4
  715 = ptradd ptr %buf, i32 %714
  715.load = load i32 from ptr %715
  718.load = load i32 from ptr %arr.index691
  720 = icmp ne i32 %715.load, i32 %718.load
  br i1 %720, bb %then721, bb %else723
then721:
  ret i32 0
else723:
  pos.load724 = load i32 from ptr @pos
  725 = add i32 %pos.load724, i32 2
  726 = mul i32 %725, i32 4
  727 = ptradd ptr %buf, i32 %726
  727.load = load i32 from ptr %727
  730.load = load i32 from ptr %arr.index692
  732 = icmp ne i32 %727.load, i32 %730.load
  br i1 %732, bb %then733, bb %else735
then733:
  ret i32 0
else735:
  pos.load736 = load i32 from ptr @pos
  737 = add i32 %pos.load736, i32 3
  738 = mul i32 %737, i32 4
  739 = ptradd ptr %buf, i32 %738
  739.load = load i32 from ptr %739
  742.load = load i32 from ptr %arr.index693
  744 = icmp ne i32 %739.load, i32 %742.load
  br i1 %744, bb %then745, bb %if.exit746
then745:
  ret i32 0
if.exit746:
  pos.load747 = load i32 from ptr @pos
  748 = add i32 %pos.load747, i32 4
  store i32 %748 to ptr @pos
  br bb %if.exit172
skip_space.while.cond:
  pos.load794 = load i32 from ptr @pos
  20795 = icmp sge i32 %pos.load794, i32 %len
  br i1 %20795, bb %skip_space.while.exit, bb %skip_space.if.exit22
skip_space.while.exit:
  74 = icmp eq i32 %type, i32 0
  br i1 %74, bb %then75, bb %else77
skip_space.if.exit22:
  pos.load23800 = load i32 from ptr @pos
  24801 = mul i32 %pos.load23800, i32 4
  25802 = ptradd ptr %buf, i32 %24801
  25.load803 = load i32 from ptr %25802
  27804 = icmp eq i32 %25.load803, i32 32
  br i1 %27804, bb %skip_space.then28, bb %skip_space.else30
skip_space.then28:
  pos.load31807 = load i32 from ptr @pos
  32808 = add i32 %pos.load31807, i32 1
  store i32 %32808 to ptr @pos
  br bb %skip_space.while.cond
skip_space.else30:
  pos.load33812 = load i32 from ptr @pos
  34813 = mul i32 %pos.load33812, i32 4
  35814 = ptradd ptr %buf, i32 %34813
  35.load815 = load i32 from ptr %35814
  37816 = icmp eq i32 %35.load815, i32 9
  br i1 %37816, bb %skip_space.then38, bb %skip_space.else40
skip_space.then38:
  pos.load41819 = load i32 from ptr @pos
  42820 = add i32 %pos.load41819, i32 1
  store i32 %42820 to ptr @pos
  br bb %skip_space.while.cond
skip_space.else40:
  pos.load43824 = load i32 from ptr @pos
  44825 = mul i32 %pos.load43824, i32 4
  45826 = ptradd ptr %buf, i32 %44825
  45.load827 = load i32 from ptr %45826
  47828 = icmp eq i32 %45.load827, i32 10
  br i1 %47828, bb %skip_space.then48, bb %skip_space.else50
skip_space.then48:
  pos.load51831 = load i32 from ptr @pos
  52832 = add i32 %pos.load51831, i32 1
  store i32 %52832 to ptr @pos
  br bb %skip_space.while.cond
skip_space.else50:
  pos.load53836 = load i32 from ptr @pos
  54837 = mul i32 %pos.load53836, i32 4
  55838 = ptradd ptr %buf, i32 %54837
  55.load839 = load i32 from ptr %55838
  57840 = icmp eq i32 %55.load839, i32 13
  br i1 %57840, bb %skip_space.then58, bb %skip_space.while.exit
skip_space.then58:
  pos.load61843 = load i32 from ptr @pos
  62844 = add i32 %pos.load61843, i32 1
  store i32 %62844 to ptr @pos
  br bb %skip_space.while.cond
skip_space.while.cond850:
  pos.load851 = load i32 from ptr @pos
  20852 = icmp sge i32 %pos.load851, i32 %len
  br i1 %20852, bb %skip_space.while.exit854, bb %skip_space.if.exit22856
skip_space.while.exit854:
  pos.load371 = load i32 from ptr @pos
  373 = icmp slt i32 %pos.load371, i32 %len
  br i1 %373, bb %then374, bb %if.exit375
skip_space.if.exit22856:
  pos.load23857 = load i32 from ptr @pos
  24858 = mul i32 %pos.load23857, i32 4
  25859 = ptradd ptr %buf, i32 %24858
  25.load860 = load i32 from ptr %25859
  27861 = icmp eq i32 %25.load860, i32 32
  br i1 %27861, bb %skip_space.then28863, bb %skip_space.else30868
skip_space.then28863:
  pos.load31864 = load i32 from ptr @pos
  32865 = add i32 %pos.load31864, i32 1
  store i32 %32865 to ptr @pos
  br bb %skip_space.while.cond850
skip_space.else30868:
  pos.load33869 = load i32 from ptr @pos
  34870 = mul i32 %pos.load33869, i32 4
  35871 = ptradd ptr %buf, i32 %34870
  35.load872 = load i32 from ptr %35871
  37873 = icmp eq i32 %35.load872, i32 9
  br i1 %37873, bb %skip_space.then38875, bb %skip_space.else40880
skip_space.then38875:
  pos.load41876 = load i32 from ptr @pos
  42877 = add i32 %pos.load41876, i32 1
  store i32 %42877 to ptr @pos
  br bb %skip_space.while.cond850
skip_space.else40880:
  pos.load43881 = load i32 from ptr @pos
  44882 = mul i32 %pos.load43881, i32 4
  45883 = ptradd ptr %buf, i32 %44882
  45.load884 = load i32 from ptr %45883
  47885 = icmp eq i32 %45.load884, i32 10
  br i1 %47885, bb %skip_space.then48887, bb %skip_space.else50892
skip_space.then48887:
  pos.load51888 = load i32 from ptr @pos
  52889 = add i32 %pos.load51888, i32 1
  store i32 %52889 to ptr @pos
  br bb %skip_space.while.cond850
skip_space.else50892:
  pos.load53893 = load i32 from ptr @pos
  54894 = mul i32 %pos.load53893, i32 4
  55895 = ptradd ptr %buf, i32 %54894
  55.load896 = load i32 from ptr %55895
  57897 = icmp eq i32 %55.load896, i32 13
  br i1 %57897, bb %skip_space.then58899, bb %skip_space.while.exit854
skip_space.then58899:
  pos.load61900 = load i32 from ptr @pos
  62901 = add i32 %pos.load61900, i32 1
  store i32 %62901 to ptr @pos
  br bb %skip_space.while.cond850
skip_space.while.cond907:
  pos.load908 = load i32 from ptr @pos
  20909 = icmp sge i32 %pos.load908, i32 %len
  br i1 %20909, bb %while.cond392, bb %skip_space.if.exit22913
skip_space.if.exit22913:
  pos.load23914 = load i32 from ptr @pos
  24915 = mul i32 %pos.load23914, i32 4
  25916 = ptradd ptr %buf, i32 %24915
  25.load917 = load i32 from ptr %25916
  27918 = icmp eq i32 %25.load917, i32 32
  br i1 %27918, bb %skip_space.then28920, bb %skip_space.else30925
skip_space.then28920:
  pos.load31921 = load i32 from ptr @pos
  32922 = add i32 %pos.load31921, i32 1
  store i32 %32922 to ptr @pos
  br bb %skip_space.while.cond907
skip_space.else30925:
  pos.load33926 = load i32 from ptr @pos
  34927 = mul i32 %pos.load33926, i32 4
  35928 = ptradd ptr %buf, i32 %34927
  35.load929 = load i32 from ptr %35928
  37930 = icmp eq i32 %35.load929, i32 9
  br i1 %37930, bb %skip_space.then38932, bb %skip_space.else40937
skip_space.then38932:
  pos.load41933 = load i32 from ptr @pos
  42934 = add i32 %pos.load41933, i32 1
  store i32 %42934 to ptr @pos
  br bb %skip_space.while.cond907
skip_space.else40937:
  pos.load43938 = load i32 from ptr @pos
  44939 = mul i32 %pos.load43938, i32 4
  45940 = ptradd ptr %buf, i32 %44939
  45.load941 = load i32 from ptr %45940
  47942 = icmp eq i32 %45.load941, i32 10
  br i1 %47942, bb %skip_space.then48944, bb %skip_space.else50949
skip_space.then48944:
  pos.load51945 = load i32 from ptr @pos
  52946 = add i32 %pos.load51945, i32 1
  store i32 %52946 to ptr @pos
  br bb %skip_space.while.cond907
skip_space.else50949:
  pos.load53950 = load i32 from ptr @pos
  54951 = mul i32 %pos.load53950, i32 4
  55952 = ptradd ptr %buf, i32 %54951
  55.load953 = load i32 from ptr %55952
  57954 = icmp eq i32 %55.load953, i32 13
  br i1 %57954, bb %skip_space.then58956, bb %while.cond392
skip_space.then58956:
  pos.load61957 = load i32 from ptr @pos
  62958 = add i32 %pos.load61957, i32 1
  store i32 %62958 to ptr @pos
  br bb %skip_space.while.cond907
skip_space.while.cond964:
  pos.load965 = load i32 from ptr @pos
  20966 = icmp sge i32 %pos.load965, i32 %len
  br i1 %20966, bb %skip_space.while.exit968, bb %skip_space.if.exit22970
skip_space.while.exit968:
  406 = call i32 detect_item(i32 0, ptr %buf, i32 %len)
  407 = icmp eq i32 %406, i32 0
  br i1 %407, bb %then408, bb %skip_space.while.cond1021
skip_space.if.exit22970:
  pos.load23971 = load i32 from ptr @pos
  24972 = mul i32 %pos.load23971, i32 4
  25973 = ptradd ptr %buf, i32 %24972
  25.load974 = load i32 from ptr %25973
  27975 = icmp eq i32 %25.load974, i32 32
  br i1 %27975, bb %skip_space.then28977, bb %skip_space.else30982
skip_space.then28977:
  pos.load31978 = load i32 from ptr @pos
  32979 = add i32 %pos.load31978, i32 1
  store i32 %32979 to ptr @pos
  br bb %skip_space.while.cond964
skip_space.else30982:
  pos.load33983 = load i32 from ptr @pos
  34984 = mul i32 %pos.load33983, i32 4
  35985 = ptradd ptr %buf, i32 %34984
  35.load986 = load i32 from ptr %35985
  37987 = icmp eq i32 %35.load986, i32 9
  br i1 %37987, bb %skip_space.then38989, bb %skip_space.else40994
skip_space.then38989:
  pos.load41990 = load i32 from ptr @pos
  42991 = add i32 %pos.load41990, i32 1
  store i32 %42991 to ptr @pos
  br bb %skip_space.while.cond964
skip_space.else40994:
  pos.load43995 = load i32 from ptr @pos
  44996 = mul i32 %pos.load43995, i32 4
  45997 = ptradd ptr %buf, i32 %44996
  45.load998 = load i32 from ptr %45997
  47999 = icmp eq i32 %45.load998, i32 10
  br i1 %47999, bb %skip_space.then481001, bb %skip_space.else501006
skip_space.then481001:
  pos.load511002 = load i32 from ptr @pos
  521003 = add i32 %pos.load511002, i32 1
  store i32 %521003 to ptr @pos
  br bb %skip_space.while.cond964
skip_space.else501006:
  pos.load531007 = load i32 from ptr @pos
  541008 = mul i32 %pos.load531007, i32 4
  551009 = ptradd ptr %buf, i32 %541008
  55.load1010 = load i32 from ptr %551009
  571011 = icmp eq i32 %55.load1010, i32 13
  br i1 %571011, bb %skip_space.then581013, bb %skip_space.while.exit968
skip_space.then581013:
  pos.load611014 = load i32 from ptr @pos
  621015 = add i32 %pos.load611014, i32 1
  store i32 %621015 to ptr @pos
  br bb %skip_space.while.cond964
skip_space.while.cond1021:
  pos.load1022 = load i32 from ptr @pos
  201023 = icmp sge i32 %pos.load1022, i32 %len
  br i1 %201023, bb %while.cond392, bb %skip_space.if.exit221027
skip_space.if.exit221027:
  pos.load231028 = load i32 from ptr @pos
  241029 = mul i32 %pos.load231028, i32 4
  251030 = ptradd ptr %buf, i32 %241029
  25.load1031 = load i32 from ptr %251030
  271032 = icmp eq i32 %25.load1031, i32 32
  br i1 %271032, bb %skip_space.then281034, bb %skip_space.else301039
skip_space.then281034:
  pos.load311035 = load i32 from ptr @pos
  321036 = add i32 %pos.load311035, i32 1
  store i32 %321036 to ptr @pos
  br bb %skip_space.while.cond1021
skip_space.else301039:
  pos.load331040 = load i32 from ptr @pos
  341041 = mul i32 %pos.load331040, i32 4
  351042 = ptradd ptr %buf, i32 %341041
  35.load1043 = load i32 from ptr %351042
  371044 = icmp eq i32 %35.load1043, i32 9
  br i1 %371044, bb %skip_space.then381046, bb %skip_space.else401051
skip_space.then381046:
  pos.load411047 = load i32 from ptr @pos
  421048 = add i32 %pos.load411047, i32 1
  store i32 %421048 to ptr @pos
  br bb %skip_space.while.cond1021
skip_space.else401051:
  pos.load431052 = load i32 from ptr @pos
  441053 = mul i32 %pos.load431052, i32 4
  451054 = ptradd ptr %buf, i32 %441053
  45.load1055 = load i32 from ptr %451054
  471056 = icmp eq i32 %45.load1055, i32 10
  br i1 %471056, bb %skip_space.then481058, bb %skip_space.else501063
skip_space.then481058:
  pos.load511059 = load i32 from ptr @pos
  521060 = add i32 %pos.load511059, i32 1
  store i32 %521060 to ptr @pos
  br bb %skip_space.while.cond1021
skip_space.else501063:
  pos.load531064 = load i32 from ptr @pos
  541065 = mul i32 %pos.load531064, i32 4
  551066 = ptradd ptr %buf, i32 %541065
  55.load1067 = load i32 from ptr %551066
  571068 = icmp eq i32 %55.load1067, i32 13
  br i1 %571068, bb %skip_space.then581070, bb %while.cond392
skip_space.then581070:
  pos.load611071 = load i32 from ptr @pos
  621072 = add i32 %pos.load611071, i32 1
  store i32 %621072 to ptr @pos
  br bb %skip_space.while.cond1021
skip_space.while.cond1078:
  pos.load1079 = load i32 from ptr @pos
  201080 = icmp sge i32 %pos.load1079, i32 %len
  br i1 %201080, bb %skip_space.while.exit1082, bb %skip_space.if.exit221084
skip_space.while.exit1082:
  pos.load414 = load i32 from ptr @pos
  416 = icmp sge i32 %pos.load414, i32 %len
  br i1 %416, bb %then417, bb %if.exit418
skip_space.if.exit221084:
  pos.load231085 = load i32 from ptr @pos
  241086 = mul i32 %pos.load231085, i32 4
  251087 = ptradd ptr %buf, i32 %241086
  25.load1088 = load i32 from ptr %251087
  271089 = icmp eq i32 %25.load1088, i32 32
  br i1 %271089, bb %skip_space.then281091, bb %skip_space.else301096
skip_space.then281091:
  pos.load311092 = load i32 from ptr @pos
  321093 = add i32 %pos.load311092, i32 1
  store i32 %321093 to ptr @pos
  br bb %skip_space.while.cond1078
skip_space.else301096:
  pos.load331097 = load i32 from ptr @pos
  341098 = mul i32 %pos.load331097, i32 4
  351099 = ptradd ptr %buf, i32 %341098
  35.load1100 = load i32 from ptr %351099
  371101 = icmp eq i32 %35.load1100, i32 9
  br i1 %371101, bb %skip_space.then381103, bb %skip_space.else401108
skip_space.then381103:
  pos.load411104 = load i32 from ptr @pos
  421105 = add i32 %pos.load411104, i32 1
  store i32 %421105 to ptr @pos
  br bb %skip_space.while.cond1078
skip_space.else401108:
  pos.load431109 = load i32 from ptr @pos
  441110 = mul i32 %pos.load431109, i32 4
  451111 = ptradd ptr %buf, i32 %441110
  45.load1112 = load i32 from ptr %451111
  471113 = icmp eq i32 %45.load1112, i32 10
  br i1 %471113, bb %skip_space.then481115, bb %skip_space.else501120
skip_space.then481115:
  pos.load511116 = load i32 from ptr @pos
  521117 = add i32 %pos.load511116, i32 1
  store i32 %521117 to ptr @pos
  br bb %skip_space.while.cond1078
skip_space.else501120:
  pos.load531121 = load i32 from ptr @pos
  541122 = mul i32 %pos.load531121, i32 4
  551123 = ptradd ptr %buf, i32 %541122
  55.load1124 = load i32 from ptr %551123
  571125 = icmp eq i32 %55.load1124, i32 13
  br i1 %571125, bb %skip_space.then581127, bb %skip_space.while.exit1082
skip_space.then581127:
  pos.load611128 = load i32 from ptr @pos
  621129 = add i32 %pos.load611128, i32 1
  store i32 %621129 to ptr @pos
  br bb %skip_space.while.cond1078
skip_space.while.cond1135:
  pos.load1136 = load i32 from ptr @pos
  201137 = icmp sge i32 %pos.load1136, i32 %len
  br i1 %201137, bb %skip_space.while.exit1139, bb %skip_space.if.exit221141
skip_space.while.exit1139:
  pos.load437 = load i32 from ptr @pos
  439 = icmp slt i32 %pos.load437, i32 %len
  br i1 %439, bb %then440, bb %if.exit441
skip_space.if.exit221141:
  pos.load231142 = load i32 from ptr @pos
  241143 = mul i32 %pos.load231142, i32 4
  251144 = ptradd ptr %buf, i32 %241143
  25.load1145 = load i32 from ptr %251144
  271146 = icmp eq i32 %25.load1145, i32 32
  br i1 %271146, bb %skip_space.then281148, bb %skip_space.else301153
skip_space.then281148:
  pos.load311149 = load i32 from ptr @pos
  321150 = add i32 %pos.load311149, i32 1
  store i32 %321150 to ptr @pos
  br bb %skip_space.while.cond1135
skip_space.else301153:
  pos.load331154 = load i32 from ptr @pos
  341155 = mul i32 %pos.load331154, i32 4
  351156 = ptradd ptr %buf, i32 %341155
  35.load1157 = load i32 from ptr %351156
  371158 = icmp eq i32 %35.load1157, i32 9
  br i1 %371158, bb %skip_space.then381160, bb %skip_space.else401165
skip_space.then381160:
  pos.load411161 = load i32 from ptr @pos
  421162 = add i32 %pos.load411161, i32 1
  store i32 %421162 to ptr @pos
  br bb %skip_space.while.cond1135
skip_space.else401165:
  pos.load431166 = load i32 from ptr @pos
  441167 = mul i32 %pos.load431166, i32 4
  451168 = ptradd ptr %buf, i32 %441167
  45.load1169 = load i32 from ptr %451168
  471170 = icmp eq i32 %45.load1169, i32 10
  br i1 %471170, bb %skip_space.then481172, bb %skip_space.else501177
skip_space.then481172:
  pos.load511173 = load i32 from ptr @pos
  521174 = add i32 %pos.load511173, i32 1
  store i32 %521174 to ptr @pos
  br bb %skip_space.while.cond1135
skip_space.else501177:
  pos.load531178 = load i32 from ptr @pos
  541179 = mul i32 %pos.load531178, i32 4
  551180 = ptradd ptr %buf, i32 %541179
  55.load1181 = load i32 from ptr %551180
  571182 = icmp eq i32 %55.load1181, i32 13
  br i1 %571182, bb %skip_space.then581184, bb %skip_space.while.exit1139
skip_space.then581184:
  pos.load611185 = load i32 from ptr @pos
  621186 = add i32 %pos.load611185, i32 1
  store i32 %621186 to ptr @pos
  br bb %skip_space.while.cond1135
skip_space.while.cond1192:
  pos.load1193 = load i32 from ptr @pos
  201194 = icmp sge i32 %pos.load1193, i32 %len
  br i1 %201194, bb %skip_space.while.exit1196, bb %skip_space.if.exit221198
skip_space.while.exit1196:
  pos.load458 = load i32 from ptr @pos
  460 = icmp sge i32 %pos.load458, i32 %len
  br i1 %460, bb %then461, bb %if.exit462
skip_space.if.exit221198:
  pos.load231199 = load i32 from ptr @pos
  241200 = mul i32 %pos.load231199, i32 4
  251201 = ptradd ptr %buf, i32 %241200
  25.load1202 = load i32 from ptr %251201
  271203 = icmp eq i32 %25.load1202, i32 32
  br i1 %271203, bb %skip_space.then281205, bb %skip_space.else301210
skip_space.then281205:
  pos.load311206 = load i32 from ptr @pos
  321207 = add i32 %pos.load311206, i32 1
  store i32 %321207 to ptr @pos
  br bb %skip_space.while.cond1192
skip_space.else301210:
  pos.load331211 = load i32 from ptr @pos
  341212 = mul i32 %pos.load331211, i32 4
  351213 = ptradd ptr %buf, i32 %341212
  35.load1214 = load i32 from ptr %351213
  371215 = icmp eq i32 %35.load1214, i32 9
  br i1 %371215, bb %skip_space.then381217, bb %skip_space.else401222
skip_space.then381217:
  pos.load411218 = load i32 from ptr @pos
  421219 = add i32 %pos.load411218, i32 1
  store i32 %421219 to ptr @pos
  br bb %skip_space.while.cond1192
skip_space.else401222:
  pos.load431223 = load i32 from ptr @pos
  441224 = mul i32 %pos.load431223, i32 4
  451225 = ptradd ptr %buf, i32 %441224
  45.load1226 = load i32 from ptr %451225
  471227 = icmp eq i32 %45.load1226, i32 10
  br i1 %471227, bb %skip_space.then481229, bb %skip_space.else501234
skip_space.then481229:
  pos.load511230 = load i32 from ptr @pos
  521231 = add i32 %pos.load511230, i32 1
  store i32 %521231 to ptr @pos
  br bb %skip_space.while.cond1192
skip_space.else501234:
  pos.load531235 = load i32 from ptr @pos
  541236 = mul i32 %pos.load531235, i32 4
  551237 = ptradd ptr %buf, i32 %541236
  55.load1238 = load i32 from ptr %551237
  571239 = icmp eq i32 %55.load1238, i32 13
  br i1 %571239, bb %skip_space.then581241, bb %skip_space.while.exit1196
skip_space.then581241:
  pos.load611242 = load i32 from ptr @pos
  621243 = add i32 %pos.load611242, i32 1
  store i32 %621243 to ptr @pos
  br bb %skip_space.while.cond1192
skip_space.while.cond1249:
  pos.load1250 = load i32 from ptr @pos
  201251 = icmp sge i32 %pos.load1250, i32 %len
  br i1 %201251, bb %skip_space.while.exit1253, bb %skip_space.if.exit221255
skip_space.while.exit1253:
  475 = call i32 detect_item(i32 0, ptr %buf, i32 %len)
  476 = icmp eq i32 %475, i32 0
  br i1 %476, bb %then477, bb %skip_space.while.cond1306
skip_space.if.exit221255:
  pos.load231256 = load i32 from ptr @pos
  241257 = mul i32 %pos.load231256, i32 4
  251258 = ptradd ptr %buf, i32 %241257
  25.load1259 = load i32 from ptr %251258
  271260 = icmp eq i32 %25.load1259, i32 32
  br i1 %271260, bb %skip_space.then281262, bb %skip_space.else301267
skip_space.then281262:
  pos.load311263 = load i32 from ptr @pos
  321264 = add i32 %pos.load311263, i32 1
  store i32 %321264 to ptr @pos
  br bb %skip_space.while.cond1249
skip_space.else301267:
  pos.load331268 = load i32 from ptr @pos
  341269 = mul i32 %pos.load331268, i32 4
  351270 = ptradd ptr %buf, i32 %341269
  35.load1271 = load i32 from ptr %351270
  371272 = icmp eq i32 %35.load1271, i32 9
  br i1 %371272, bb %skip_space.then381274, bb %skip_space.else401279
skip_space.then381274:
  pos.load411275 = load i32 from ptr @pos
  421276 = add i32 %pos.load411275, i32 1
  store i32 %421276 to ptr @pos
  br bb %skip_space.while.cond1249
skip_space.else401279:
  pos.load431280 = load i32 from ptr @pos
  441281 = mul i32 %pos.load431280, i32 4
  451282 = ptradd ptr %buf, i32 %441281
  45.load1283 = load i32 from ptr %451282
  471284 = icmp eq i32 %45.load1283, i32 10
  br i1 %471284, bb %skip_space.then481286, bb %skip_space.else501291
skip_space.then481286:
  pos.load511287 = load i32 from ptr @pos
  521288 = add i32 %pos.load511287, i32 1
  store i32 %521288 to ptr @pos
  br bb %skip_space.while.cond1249
skip_space.else501291:
  pos.load531292 = load i32 from ptr @pos
  541293 = mul i32 %pos.load531292, i32 4
  551294 = ptradd ptr %buf, i32 %541293
  55.load1295 = load i32 from ptr %551294
  571296 = icmp eq i32 %55.load1295, i32 13
  br i1 %571296, bb %skip_space.then581298, bb %skip_space.while.exit1253
skip_space.then581298:
  pos.load611299 = load i32 from ptr @pos
  621300 = add i32 %pos.load611299, i32 1
  store i32 %621300 to ptr @pos
  br bb %skip_space.while.cond1249
skip_space.while.cond1306:
  pos.load1307 = load i32 from ptr @pos
  201308 = icmp sge i32 %pos.load1307, i32 %len
  br i1 %201308, bb %while.cond481, bb %skip_space.if.exit221312
skip_space.if.exit221312:
  pos.load231313 = load i32 from ptr @pos
  241314 = mul i32 %pos.load231313, i32 4
  251315 = ptradd ptr %buf, i32 %241314
  25.load1316 = load i32 from ptr %251315
  271317 = icmp eq i32 %25.load1316, i32 32
  br i1 %271317, bb %skip_space.then281319, bb %skip_space.else301324
skip_space.then281319:
  pos.load311320 = load i32 from ptr @pos
  321321 = add i32 %pos.load311320, i32 1
  store i32 %321321 to ptr @pos
  br bb %skip_space.while.cond1306
skip_space.else301324:
  pos.load331325 = load i32 from ptr @pos
  341326 = mul i32 %pos.load331325, i32 4
  351327 = ptradd ptr %buf, i32 %341326
  35.load1328 = load i32 from ptr %351327
  371329 = icmp eq i32 %35.load1328, i32 9
  br i1 %371329, bb %skip_space.then381331, bb %skip_space.else401336
skip_space.then381331:
  pos.load411332 = load i32 from ptr @pos
  421333 = add i32 %pos.load411332, i32 1
  store i32 %421333 to ptr @pos
  br bb %skip_space.while.cond1306
skip_space.else401336:
  pos.load431337 = load i32 from ptr @pos
  441338 = mul i32 %pos.load431337, i32 4
  451339 = ptradd ptr %buf, i32 %441338
  45.load1340 = load i32 from ptr %451339
  471341 = icmp eq i32 %45.load1340, i32 10
  br i1 %471341, bb %skip_space.then481343, bb %skip_space.else501348
skip_space.then481343:
  pos.load511344 = load i32 from ptr @pos
  521345 = add i32 %pos.load511344, i32 1
  store i32 %521345 to ptr @pos
  br bb %skip_space.while.cond1306
skip_space.else501348:
  pos.load531349 = load i32 from ptr @pos
  541350 = mul i32 %pos.load531349, i32 4
  551351 = ptradd ptr %buf, i32 %541350
  55.load1352 = load i32 from ptr %551351
  571353 = icmp eq i32 %55.load1352, i32 13
  br i1 %571353, bb %skip_space.then581355, bb %while.cond481
skip_space.then581355:
  pos.load611356 = load i32 from ptr @pos
  621357 = add i32 %pos.load611356, i32 1
  store i32 %621357 to ptr @pos
  br bb %skip_space.while.cond1306
skip_space.while.cond1363:
  pos.load1364 = load i32 from ptr @pos
  201365 = icmp sge i32 %pos.load1364, i32 %len
  br i1 %201365, bb %skip_space.while.exit1367, bb %skip_space.if.exit221369
skip_space.while.exit1367:
  495 = call i32 detect_item(i32 2, ptr %buf, i32 %len)
  496 = icmp eq i32 %495, i32 0
  br i1 %496, bb %then497, bb %skip_space.while.cond1420
skip_space.if.exit221369:
  pos.load231370 = load i32 from ptr @pos
  241371 = mul i32 %pos.load231370, i32 4
  251372 = ptradd ptr %buf, i32 %241371
  25.load1373 = load i32 from ptr %251372
  271374 = icmp eq i32 %25.load1373, i32 32
  br i1 %271374, bb %skip_space.then281376, bb %skip_space.else301381
skip_space.then281376:
  pos.load311377 = load i32 from ptr @pos
  321378 = add i32 %pos.load311377, i32 1
  store i32 %321378 to ptr @pos
  br bb %skip_space.while.cond1363
skip_space.else301381:
  pos.load331382 = load i32 from ptr @pos
  341383 = mul i32 %pos.load331382, i32 4
  351384 = ptradd ptr %buf, i32 %341383
  35.load1385 = load i32 from ptr %351384
  371386 = icmp eq i32 %35.load1385, i32 9
  br i1 %371386, bb %skip_space.then381388, bb %skip_space.else401393
skip_space.then381388:
  pos.load411389 = load i32 from ptr @pos
  421390 = add i32 %pos.load411389, i32 1
  store i32 %421390 to ptr @pos
  br bb %skip_space.while.cond1363
skip_space.else401393:
  pos.load431394 = load i32 from ptr @pos
  441395 = mul i32 %pos.load431394, i32 4
  451396 = ptradd ptr %buf, i32 %441395
  45.load1397 = load i32 from ptr %451396
  471398 = icmp eq i32 %45.load1397, i32 10
  br i1 %471398, bb %skip_space.then481400, bb %skip_space.else501405
skip_space.then481400:
  pos.load511401 = load i32 from ptr @pos
  521402 = add i32 %pos.load511401, i32 1
  store i32 %521402 to ptr @pos
  br bb %skip_space.while.cond1363
skip_space.else501405:
  pos.load531406 = load i32 from ptr @pos
  541407 = mul i32 %pos.load531406, i32 4
  551408 = ptradd ptr %buf, i32 %541407
  55.load1409 = load i32 from ptr %551408
  571410 = icmp eq i32 %55.load1409, i32 13
  br i1 %571410, bb %skip_space.then581412, bb %skip_space.while.exit1367
skip_space.then581412:
  pos.load611413 = load i32 from ptr @pos
  621414 = add i32 %pos.load611413, i32 1
  store i32 %621414 to ptr @pos
  br bb %skip_space.while.cond1363
skip_space.while.cond1420:
  pos.load1421 = load i32 from ptr @pos
  201422 = icmp sge i32 %pos.load1421, i32 %len
  br i1 %201422, bb %skip_space.while.exit1424, bb %skip_space.if.exit221426
skip_space.while.exit1424:
  pos.load501 = load i32 from ptr @pos
  503 = icmp sge i32 %pos.load501, i32 %len
  br i1 %503, bb %then504, bb %if.exit505
skip_space.if.exit221426:
  pos.load231427 = load i32 from ptr @pos
  241428 = mul i32 %pos.load231427, i32 4
  251429 = ptradd ptr %buf, i32 %241428
  25.load1430 = load i32 from ptr %251429
  271431 = icmp eq i32 %25.load1430, i32 32
  br i1 %271431, bb %skip_space.then281433, bb %skip_space.else301438
skip_space.then281433:
  pos.load311434 = load i32 from ptr @pos
  321435 = add i32 %pos.load311434, i32 1
  store i32 %321435 to ptr @pos
  br bb %skip_space.while.cond1420
skip_space.else301438:
  pos.load331439 = load i32 from ptr @pos
  341440 = mul i32 %pos.load331439, i32 4
  351441 = ptradd ptr %buf, i32 %341440
  35.load1442 = load i32 from ptr %351441
  371443 = icmp eq i32 %35.load1442, i32 9
  br i1 %371443, bb %skip_space.then381445, bb %skip_space.else401450
skip_space.then381445:
  pos.load411446 = load i32 from ptr @pos
  421447 = add i32 %pos.load411446, i32 1
  store i32 %421447 to ptr @pos
  br bb %skip_space.while.cond1420
skip_space.else401450:
  pos.load431451 = load i32 from ptr @pos
  441452 = mul i32 %pos.load431451, i32 4
  451453 = ptradd ptr %buf, i32 %441452
  45.load1454 = load i32 from ptr %451453
  471455 = icmp eq i32 %45.load1454, i32 10
  br i1 %471455, bb %skip_space.then481457, bb %skip_space.else501462
skip_space.then481457:
  pos.load511458 = load i32 from ptr @pos
  521459 = add i32 %pos.load511458, i32 1
  store i32 %521459 to ptr @pos
  br bb %skip_space.while.cond1420
skip_space.else501462:
  pos.load531463 = load i32 from ptr @pos
  541464 = mul i32 %pos.load531463, i32 4
  551465 = ptradd ptr %buf, i32 %541464
  55.load1466 = load i32 from ptr %551465
  571467 = icmp eq i32 %55.load1466, i32 13
  br i1 %571467, bb %skip_space.then581469, bb %skip_space.while.exit1424
skip_space.then581469:
  pos.load611470 = load i32 from ptr @pos
  621471 = add i32 %pos.load611470, i32 1
  store i32 %621471 to ptr @pos
  br bb %skip_space.while.cond1420
skip_space.while.cond1477:
  pos.load1478 = load i32 from ptr @pos
  201479 = icmp sge i32 %pos.load1478, i32 %len
  br i1 %201479, bb %skip_space.while.exit1481, bb %skip_space.if.exit221483
skip_space.while.exit1481:
  518 = call i32 detect_item(i32 0, ptr %buf, i32 %len)
  519 = icmp eq i32 %518, i32 0
  br i1 %519, bb %then520, bb %skip_space.while.cond1534
skip_space.if.exit221483:
  pos.load231484 = load i32 from ptr @pos
  241485 = mul i32 %pos.load231484, i32 4
  251486 = ptradd ptr %buf, i32 %241485
  25.load1487 = load i32 from ptr %251486
  271488 = icmp eq i32 %25.load1487, i32 32
  br i1 %271488, bb %skip_space.then281490, bb %skip_space.else301495
skip_space.then281490:
  pos.load311491 = load i32 from ptr @pos
  321492 = add i32 %pos.load311491, i32 1
  store i32 %321492 to ptr @pos
  br bb %skip_space.while.cond1477
skip_space.else301495:
  pos.load331496 = load i32 from ptr @pos
  341497 = mul i32 %pos.load331496, i32 4
  351498 = ptradd ptr %buf, i32 %341497
  35.load1499 = load i32 from ptr %351498
  371500 = icmp eq i32 %35.load1499, i32 9
  br i1 %371500, bb %skip_space.then381502, bb %skip_space.else401507
skip_space.then381502:
  pos.load411503 = load i32 from ptr @pos
  421504 = add i32 %pos.load411503, i32 1
  store i32 %421504 to ptr @pos
  br bb %skip_space.while.cond1477
skip_space.else401507:
  pos.load431508 = load i32 from ptr @pos
  441509 = mul i32 %pos.load431508, i32 4
  451510 = ptradd ptr %buf, i32 %441509
  45.load1511 = load i32 from ptr %451510
  471512 = icmp eq i32 %45.load1511, i32 10
  br i1 %471512, bb %skip_space.then481514, bb %skip_space.else501519
skip_space.then481514:
  pos.load511515 = load i32 from ptr @pos
  521516 = add i32 %pos.load511515, i32 1
  store i32 %521516 to ptr @pos
  br bb %skip_space.while.cond1477
skip_space.else501519:
  pos.load531520 = load i32 from ptr @pos
  541521 = mul i32 %pos.load531520, i32 4
  551522 = ptradd ptr %buf, i32 %541521
  55.load1523 = load i32 from ptr %551522
  571524 = icmp eq i32 %55.load1523, i32 13
  br i1 %571524, bb %skip_space.then581526, bb %skip_space.while.exit1481
skip_space.then581526:
  pos.load611527 = load i32 from ptr @pos
  621528 = add i32 %pos.load611527, i32 1
  store i32 %621528 to ptr @pos
  br bb %skip_space.while.cond1477
skip_space.while.cond1534:
  pos.load1535 = load i32 from ptr @pos
  201536 = icmp sge i32 %pos.load1535, i32 %len
  br i1 %201536, bb %while.cond481, bb %skip_space.if.exit221540
skip_space.if.exit221540:
  pos.load231541 = load i32 from ptr @pos
  241542 = mul i32 %pos.load231541, i32 4
  251543 = ptradd ptr %buf, i32 %241542
  25.load1544 = load i32 from ptr %251543
  271545 = icmp eq i32 %25.load1544, i32 32
  br i1 %271545, bb %skip_space.then281547, bb %skip_space.else301552
skip_space.then281547:
  pos.load311548 = load i32 from ptr @pos
  321549 = add i32 %pos.load311548, i32 1
  store i32 %321549 to ptr @pos
  br bb %skip_space.while.cond1534
skip_space.else301552:
  pos.load331553 = load i32 from ptr @pos
  341554 = mul i32 %pos.load331553, i32 4
  351555 = ptradd ptr %buf, i32 %341554
  35.load1556 = load i32 from ptr %351555
  371557 = icmp eq i32 %35.load1556, i32 9
  br i1 %371557, bb %skip_space.then381559, bb %skip_space.else401564
skip_space.then381559:
  pos.load411560 = load i32 from ptr @pos
  421561 = add i32 %pos.load411560, i32 1
  store i32 %421561 to ptr @pos
  br bb %skip_space.while.cond1534
skip_space.else401564:
  pos.load431565 = load i32 from ptr @pos
  441566 = mul i32 %pos.load431565, i32 4
  451567 = ptradd ptr %buf, i32 %441566
  45.load1568 = load i32 from ptr %451567
  471569 = icmp eq i32 %45.load1568, i32 10
  br i1 %471569, bb %skip_space.then481571, bb %skip_space.else501576
skip_space.then481571:
  pos.load511572 = load i32 from ptr @pos
  521573 = add i32 %pos.load511572, i32 1
  store i32 %521573 to ptr @pos
  br bb %skip_space.while.cond1534
skip_space.else501576:
  pos.load531577 = load i32 from ptr @pos
  541578 = mul i32 %pos.load531577, i32 4
  551579 = ptradd ptr %buf, i32 %541578
  55.load1580 = load i32 from ptr %551579
  571581 = icmp eq i32 %55.load1580, i32 13
  br i1 %571581, bb %skip_space.then581583, bb %while.cond481
skip_space.then581583:
  pos.load611584 = load i32 from ptr @pos
  621585 = add i32 %pos.load611584, i32 1
  store i32 %621585 to ptr @pos
  br bb %skip_space.while.cond1534
skip_space.while.cond1591:
  pos.load1592 = load i32 from ptr @pos
  201593 = icmp sge i32 %pos.load1592, i32 %len
  br i1 %201593, bb %skip_space.while.exit1595, bb %skip_space.if.exit221597
skip_space.while.exit1595:
  pos.load526 = load i32 from ptr @pos
  528 = icmp sge i32 %pos.load526, i32 %len
  br i1 %528, bb %then529, bb %else531
skip_space.if.exit221597:
  pos.load231598 = load i32 from ptr @pos
  241599 = mul i32 %pos.load231598, i32 4
  251600 = ptradd ptr %buf, i32 %241599
  25.load1601 = load i32 from ptr %251600
  271602 = icmp eq i32 %25.load1601, i32 32
  br i1 %271602, bb %skip_space.then281604, bb %skip_space.else301609
skip_space.then281604:
  pos.load311605 = load i32 from ptr @pos
  321606 = add i32 %pos.load311605, i32 1
  store i32 %321606 to ptr @pos
  br bb %skip_space.while.cond1591
skip_space.else301609:
  pos.load331610 = load i32 from ptr @pos
  341611 = mul i32 %pos.load331610, i32 4
  351612 = ptradd ptr %buf, i32 %341611
  35.load1613 = load i32 from ptr %351612
  371614 = icmp eq i32 %35.load1613, i32 9
  br i1 %371614, bb %skip_space.then381616, bb %skip_space.else401621
skip_space.then381616:
  pos.load411617 = load i32 from ptr @pos
  421618 = add i32 %pos.load411617, i32 1
  store i32 %421618 to ptr @pos
  br bb %skip_space.while.cond1591
skip_space.else401621:
  pos.load431622 = load i32 from ptr @pos
  441623 = mul i32 %pos.load431622, i32 4
  451624 = ptradd ptr %buf, i32 %441623
  45.load1625 = load i32 from ptr %451624
  471626 = icmp eq i32 %45.load1625, i32 10
  br i1 %471626, bb %skip_space.then481628, bb %skip_space.else501633
skip_space.then481628:
  pos.load511629 = load i32 from ptr @pos
  521630 = add i32 %pos.load511629, i32 1
  store i32 %521630 to ptr @pos
  br bb %skip_space.while.cond1591
skip_space.else501633:
  pos.load531634 = load i32 from ptr @pos
  541635 = mul i32 %pos.load531634, i32 4
  551636 = ptradd ptr %buf, i32 %541635
  55.load1637 = load i32 from ptr %551636
  571638 = icmp eq i32 %55.load1637, i32 13
  br i1 %571638, bb %skip_space.then581640, bb %skip_space.while.exit1595
skip_space.then581640:
  pos.load611641 = load i32 from ptr @pos
  621642 = add i32 %pos.load611641, i32 1
  store i32 %621642 to ptr @pos
  br bb %skip_space.while.cond1591
is_number.then:
  81764 = icmp sle i32 %110.load, i32 57
  br i1 %81764, bb %is_number.then9, bb %is_number.else11
is_number.else:
  br bb %else105.split
is_number.then9:
  br bb %else105.split
is_number.else11:
  br bb %else105.split
is_number.then1777:
  81778 = icmp sle i32 %201.load, i32 57
  br i1 %81778, bb %is_number.then91782, bb %is_number.else111784
is_number.else1780:
  br bb %else198.split
is_number.then91782:
  br bb %else198.split
is_number.else111784:
  br bb %else198.split
is_number.then1791:
  81792 = icmp sle i32 %216.load, i32 57
  br i1 %81792, bb %is_number.then91796, bb %is_number.else111798
is_number.else1794:
  br bb %while.body208.split
is_number.then91796:
  br bb %while.body208.split
is_number.else111798:
  br bb %while.body208.split
is_number.then1805:
  81806 = icmp sle i32 %247.load, i32 57
  br i1 %81806, bb %is_number.then91810, bb %is_number.else111812
is_number.else1808:
  br bb %while.body239.split
is_number.then91810:
  br bb %while.body239.split
is_number.else111812:
  br bb %while.body239.split
is_number.then1819:
  81820 = icmp sle i32 %306.load, i32 57
  br i1 %81820, bb %is_number.then91824, bb %is_number.else111826
is_number.else1822:
  br bb %while.body298.split
is_number.then91824:
  br bb %while.body298.split
is_number.else111826:
  br bb %while.body298.split
}

external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry749:
  751 = call i32 getch()
  br bb %while.cond753
while.cond753:
  i.phi = phi [bb %entry749, i32 0, bb %while.body754, i32 %764]
  get.phi = phi [bb %entry749, i32 %751, bb %while.body754, i32 %765]
  757 = icmp ne i32 %get.phi, i32 35
  br i1 %757, bb %while.body754, bb %skip_space.while.cond1648
while.body754:
  760 = mul i32 %i.phi, i32 4
  761 = ptradd ptr @buffer, i32 %760
  store i32 %get.phi to ptr %761
  764 = add i32 %i.phi, i32 1
  765 = call i32 getch()
  br bb %while.cond753
then775:
  call void putch(i32 111)
  call void putch(i32 107)
  call void putch(i32 10)
  ret i32 0
else777:
  call void putch(i32 110)
  call void putch(i32 111)
  call void putch(i32 116)
  call void putch(i32 32)
  call void putch(i32 111)
  call void putch(i32 107)
  call void putch(i32 10)
  ret i32 1
skip_space.while.cond1648:
  pos.load1649 = load i32 from ptr @pos
  201650 = icmp sge i32 %pos.load1649, i32 %i.phi
  br i1 %201650, bb %skip_space.while.exit1652, bb %skip_space.if.exit221654
skip_space.while.exit1652:
  770 = call i32 detect_item(i32 0, ptr @buffer, i32 %i.phi)
  br bb %skip_space.while.cond1705
skip_space.if.exit221654:
  pos.load231655 = load i32 from ptr @pos
  241656 = mul i32 %pos.load231655, i32 4
  251657 = ptradd ptr @buffer, i32 %241656
  25.load1658 = load i32 from ptr %251657
  271659 = icmp eq i32 %25.load1658, i32 32
  br i1 %271659, bb %skip_space.then281661, bb %skip_space.else301666
skip_space.then281661:
  pos.load311662 = load i32 from ptr @pos
  321663 = add i32 %pos.load311662, i32 1
  store i32 %321663 to ptr @pos
  br bb %skip_space.while.cond1648
skip_space.else301666:
  pos.load331667 = load i32 from ptr @pos
  341668 = mul i32 %pos.load331667, i32 4
  351669 = ptradd ptr @buffer, i32 %341668
  35.load1670 = load i32 from ptr %351669
  371671 = icmp eq i32 %35.load1670, i32 9
  br i1 %371671, bb %skip_space.then381673, bb %skip_space.else401678
skip_space.then381673:
  pos.load411674 = load i32 from ptr @pos
  421675 = add i32 %pos.load411674, i32 1
  store i32 %421675 to ptr @pos
  br bb %skip_space.while.cond1648
skip_space.else401678:
  pos.load431679 = load i32 from ptr @pos
  441680 = mul i32 %pos.load431679, i32 4
  451681 = ptradd ptr @buffer, i32 %441680
  45.load1682 = load i32 from ptr %451681
  471683 = icmp eq i32 %45.load1682, i32 10
  br i1 %471683, bb %skip_space.then481685, bb %skip_space.else501690
skip_space.then481685:
  pos.load511686 = load i32 from ptr @pos
  521687 = add i32 %pos.load511686, i32 1
  store i32 %521687 to ptr @pos
  br bb %skip_space.while.cond1648
skip_space.else501690:
  pos.load531691 = load i32 from ptr @pos
  541692 = mul i32 %pos.load531691, i32 4
  551693 = ptradd ptr @buffer, i32 %541692
  55.load1694 = load i32 from ptr %551693
  571695 = icmp eq i32 %55.load1694, i32 13
  br i1 %571695, bb %skip_space.then581697, bb %skip_space.while.exit1652
skip_space.then581697:
  pos.load611698 = load i32 from ptr @pos
  621699 = add i32 %pos.load611698, i32 1
  store i32 %621699 to ptr @pos
  br bb %skip_space.while.cond1648
skip_space.while.cond1705:
  pos.load1706 = load i32 from ptr @pos
  201707 = icmp sge i32 %pos.load1706, i32 %i.phi
  br i1 %201707, bb %skip_space.while.exit1709, bb %skip_space.if.exit221711
skip_space.while.exit1709:
  774 = icmp ne i32 %770, i32 0
  br i1 %774, bb %then775, bb %else777
skip_space.if.exit221711:
  pos.load231712 = load i32 from ptr @pos
  241713 = mul i32 %pos.load231712, i32 4
  251714 = ptradd ptr @buffer, i32 %241713
  25.load1715 = load i32 from ptr %251714
  271716 = icmp eq i32 %25.load1715, i32 32
  br i1 %271716, bb %skip_space.then281718, bb %skip_space.else301723
skip_space.then281718:
  pos.load311719 = load i32 from ptr @pos
  321720 = add i32 %pos.load311719, i32 1
  store i32 %321720 to ptr @pos
  br bb %skip_space.while.cond1705
skip_space.else301723:
  pos.load331724 = load i32 from ptr @pos
  341725 = mul i32 %pos.load331724, i32 4
  351726 = ptradd ptr @buffer, i32 %341725
  35.load1727 = load i32 from ptr %351726
  371728 = icmp eq i32 %35.load1727, i32 9
  br i1 %371728, bb %skip_space.then381730, bb %skip_space.else401735
skip_space.then381730:
  pos.load411731 = load i32 from ptr @pos
  421732 = add i32 %pos.load411731, i32 1
  store i32 %421732 to ptr @pos
  br bb %skip_space.while.cond1705
skip_space.else401735:
  pos.load431736 = load i32 from ptr @pos
  441737 = mul i32 %pos.load431736, i32 4
  451738 = ptradd ptr @buffer, i32 %441737
  45.load1739 = load i32 from ptr %451738
  471740 = icmp eq i32 %45.load1739, i32 10
  br i1 %471740, bb %skip_space.then481742, bb %skip_space.else501747
skip_space.then481742:
  pos.load511743 = load i32 from ptr @pos
  521744 = add i32 %pos.load511743, i32 1
  store i32 %521744 to ptr @pos
  br bb %skip_space.while.cond1705
skip_space.else501747:
  pos.load531748 = load i32 from ptr @pos
  541749 = mul i32 %pos.load531748, i32 4
  551750 = ptradd ptr @buffer, i32 %541749
  55.load1751 = load i32 from ptr %551750
  571752 = icmp eq i32 %55.load1751, i32 13
  br i1 %571752, bb %skip_space.then581754, bb %skip_space.while.exit1709
skip_space.then581754:
  pos.load611755 = load i32 from ptr @pos
  621756 = add i32 %pos.load611755, i32 1
  store i32 %621756 to ptr @pos
  br bb %skip_space.while.cond1705
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

void skip_space(ptr buf, i32 len) {
entry12:
  br bb %while.cond
while.cond:
  pos.load = load i32 from ptr @pos
  20 = icmp sge i32 %pos.load, i32 %len
  br i1 %20, bb %while.exit, bb %if.exit22
while.exit:
  ret 
if.exit22:
  pos.load23 = load i32 from ptr @pos
  24 = mul i32 %pos.load23, i32 4
  25 = ptradd ptr %buf, i32 %24
  25.load = load i32 from ptr %25
  27 = icmp eq i32 %25.load, i32 32
  br i1 %27, bb %then28, bb %else30
then28:
  pos.load31 = load i32 from ptr @pos
  32 = add i32 %pos.load31, i32 1
  store i32 %32 to ptr @pos
  br bb %while.cond
else30:
  pos.load33 = load i32 from ptr @pos
  34 = mul i32 %pos.load33, i32 4
  35 = ptradd ptr %buf, i32 %34
  35.load = load i32 from ptr %35
  37 = icmp eq i32 %35.load, i32 9
  br i1 %37, bb %then38, bb %else40
then38:
  pos.load41 = load i32 from ptr @pos
  42 = add i32 %pos.load41, i32 1
  store i32 %42 to ptr @pos
  br bb %while.cond
else40:
  pos.load43 = load i32 from ptr @pos
  44 = mul i32 %pos.load43, i32 4
  45 = ptradd ptr %buf, i32 %44
  45.load = load i32 from ptr %45
  47 = icmp eq i32 %45.load, i32 10
  br i1 %47, bb %then48, bb %else50
then48:
  pos.load51 = load i32 from ptr @pos
  52 = add i32 %pos.load51, i32 1
  store i32 %52 to ptr @pos
  br bb %while.cond
else50:
  pos.load53 = load i32 from ptr @pos
  54 = mul i32 %pos.load53, i32 4
  55 = ptradd ptr %buf, i32 %54
  55.load = load i32 from ptr %55
  57 = icmp eq i32 %55.load, i32 13
  br i1 %57, bb %then58, bb %while.exit
then58:
  pos.load61 = load i32 from ptr @pos
  62 = add i32 %pos.load61, i32 1
  store i32 %62 to ptr @pos
  br bb %while.cond
}

pure i32 is_number(i32 ch) {
entry:
  3 = icmp sge i32 %ch, i32 48
  br i1 %3, bb %then, bb %else
then:
  8 = icmp sle i32 %ch, i32 57
  br i1 %8, bb %then9, bb %else11
else:
  ret i32 0
then9:
  ret i32 1
else11:
  ret i32 0
}


