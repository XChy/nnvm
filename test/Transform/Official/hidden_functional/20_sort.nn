global ptr c init with 100005 x i32 zeros
global ptr b init with 100005 x i32 zeros
global ptr a init with 100005 x i32 zeros
global ptr x init with 100005 x i32 zeros
global ptr cnt init with 400020 x i32 zeros
immutable global ptr maxn init with i32 100005
global ptr n init with i32 0
void sortB(ptr a) {
entry101:
  br bb %while.cond105
while.cond105:
  mx.phi321 = phi [bb %entry101, i32 -100, bb %if.exit133, i32 %mx.phi]
  i102.phi317 = phi [bb %entry101, i32 0, bb %if.exit133, i32 %139]
  n.load109 = load i32 from ptr @n
  110 = icmp slt i32 %i102.phi317, i32 %n.load109
  br i1 %110, bb %while.body106, bb %while.exit107
while.body106:
  113 = mul i32 %i102.phi317, i32 4
  114 = ptradd ptr %a, i32 %113
  114.load = load i32 from ptr %114
  116 = mul i32 %114.load, i32 4
  117 = ptradd ptr @cnt, i32 %116
  120.load = load i32 from ptr %114
  122 = mul i32 %120.load, i32 4
  123 = ptradd ptr @cnt, i32 %122
  123.load = load i32 from ptr %123
  125 = add i32 %123.load, i32 1
  store i32 %125 to ptr %117
  128.load = load i32 from ptr %114
  131 = icmp sgt i32 %128.load, i32 %mx.phi321
  br i1 %131, bb %then132, bb %if.exit133
while.exit107:
  br bb %while.cond141
then132:
  136.load = load i32 from ptr %114
  br bb %if.exit133
if.exit133:
  mx.phi = phi [bb %while.body106, i32 %mx.phi321, bb %then132, i32 %136.load]
  139 = add i32 %i102.phi317, i32 1
  br bb %while.cond105
while.cond141:
  now.phi319 = phi [bb %while.exit107, i32 0, bb %while.exit155, i32 %now.phi]
  i102.phi = phi [bb %while.exit107, i32 0, bb %while.exit155, i32 %167]
  146 = icmp sle i32 %i102.phi, i32 %mx.phi321
  br i1 %146, bb %while.body142, bb %while.exit143
while.body142:
  150 = mul i32 %i102.phi, i32 4
  151 = ptradd ptr @cnt, i32 %150
  151.load = load i32 from ptr %151
  br bb %while.cond153
while.exit143:
  ret 
while.cond153:
  j148.phi = phi [bb %while.body142, i32 %151.load, bb %while.body154, i32 %165]
  now.phi = phi [bb %while.body142, i32 %now.phi319, bb %while.body154, i32 %163]
  157 = icmp ne i32 %j148.phi, i32 0
  br i1 %157, bb %while.body154, bb %while.exit155
while.body154:
  159 = mul i32 %now.phi, i32 4
  160 = ptradd ptr %a, i32 %159
  store i32 %i102.phi to ptr %160
  163 = add i32 %now.phi, i32 1
  165 = sub i32 %j148.phi, i32 1
  br bb %while.cond153
while.exit155:
  167 = add i32 %i102.phi, i32 1
  br bb %while.cond141
}

external i32 getint()

external i32 getch()

void sortC(ptr a) {
entry168:
  br bb %while.cond170
while.cond170:
  i169.phi = phi [bb %entry168, i32 0, bb %while.exit184, i32 %181]
  n.load174 = load i32 from ptr @n
  175 = icmp slt i32 %i169.phi, i32 %n.load174
  br i1 %175, bb %while.body171, bb %while.exit172
while.body171:
  181 = add i32 %i169.phi, i32 1
  br bb %while.cond182
while.exit172:
  ret 
while.cond182:
  j179.phi = phi [bb %while.body171, i32 %181, bb %if.exit199, i32 %202]
  id.phi326 = phi [bb %while.body171, i32 %i169.phi, bb %if.exit199, i32 %id.phi]
  n.load186 = load i32 from ptr @n
  187 = icmp slt i32 %j179.phi, i32 %n.load186
  br i1 %187, bb %while.body183, bb %while.exit184
while.body183:
  190 = mul i32 %j179.phi, i32 4
  191 = ptradd ptr %a, i32 %190
  191.load = load i32 from ptr %191
  194 = mul i32 %id.phi326, i32 4
  195 = ptradd ptr %a, i32 %194
  195.load = load i32 from ptr %195
  197 = icmp slt i32 %191.load, i32 %195.load
  br i1 %197, bb %then198, bb %if.exit199
while.exit184:
  205 = mul i32 %i169.phi, i32 4
  206 = ptradd ptr %a, i32 %205
  206.load = load i32 from ptr %206
  212 = mul i32 %id.phi326, i32 4
  213 = ptradd ptr %a, i32 %212
  213.load = load i32 from ptr %213
  store i32 %213.load to ptr %206
  store i32 %206.load to ptr %213
  br bb %while.cond170
then198:
  br bb %if.exit199
if.exit199:
  id.phi = phi [bb %while.body183, i32 %id.phi326, bb %then198, i32 %j179.phi]
  202 = add i32 %j179.phi, i32 1
  br bb %while.cond182
}

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry221:
  2496 = call i32 getch()
  br bb %quick_read.while.cond
entry221.split:
  222.ret = phi [bb %quick_read.then45, i32 %49545, bb %quick_read.else, i32 %x.phi523]
  store i32 %222.ret to ptr @n
  br bb %while.cond224
while.cond224:
  i223.phi333 = phi [bb %entry221.split, i32 0, bb %while.body225.split, i32 %250]
  n.load228 = load i32 from ptr @n
  229 = icmp ne i32 %i223.phi333, i32 %n.load228
  br i1 %229, bb %while.body225, bb %while.exit226
while.body225:
  232 = mul i32 %i223.phi333, i32 4
  233 = ptradd ptr @a, i32 %232
  2552 = call i32 getch()
  br bb %quick_read.while.cond554
while.body225.split:
  234.ret = phi [bb %quick_read.then45600, i32 %49601, bb %quick_read.else603, i32 %x.phi579]
  store i32 %234.ret to ptr %233
  237 = ptradd ptr @b, i32 %232
  store i32 %234.ret to ptr %237
  244 = ptradd ptr @c, i32 %232
  store i32 %234.ret to ptr %244
  250 = add i32 %i223.phi333, i32 1
  br bb %while.cond224
while.exit226:
  br bb %sortA.entry51
while.exit226.split.split:
  br bb %while.cond254
while.cond254:
  i223.phi332 = phi [bb %while.exit226.split.split, i32 0, bb %while.body255, i32 %291]
  n.load257 = load i32 from ptr @n
  259 = sub i32 %n.load257, i32 %i223.phi332
  260 = icmp ne i32 %259, i32 0
  br i1 %260, bb %while.body255, bb %while.exit256
while.body255:
  262 = mul i32 %i223.phi332, i32 4
  263 = ptradd ptr @b, i32 %262
  266.load = load i32 from ptr %263
  270 = ptradd ptr @a, i32 %262
  270.load = load i32 from ptr %270
  272 = sub i32 %266.load, i32 %270.load
  store i32 %272 to ptr %263
  275 = ptradd ptr @c, i32 %262
  278.load = load i32 from ptr %275
  284 = sub i32 %278.load, i32 %272
  287.load = load i32 from ptr %270
  289 = sub i32 %284, i32 %287.load
  store i32 %289 to ptr %275
  291 = add i32 %i223.phi332, i32 1
  br bb %while.cond254
while.exit256:
  br bb %while.cond292
while.cond292:
  i223.phi = phi [bb %while.exit256, i32 0, bb %if.exit312, i32 %314]
  n.load296 = load i32 from ptr @n
  297 = sub i32 %i223.phi, i32 %n.load296
  298 = icmp ne i32 %297, i32 0
  br i1 %298, bb %while.body293, bb %while.exit294
while.body293:
  300 = mul i32 %i223.phi, i32 4
  301 = ptradd ptr @b, i32 %300
  301.load = load i32 from ptr %301
  303 = icmp ne i32 %301.load, i32 0
  br i1 %303, bb %then304, bb %if.exit305
while.exit294:
  ret i32 -123
then304:
  ret i32 1
if.exit305:
  308 = ptradd ptr @c, i32 %300
  308.load = load i32 from ptr %308
  310 = icmp ne i32 %308.load, i32 0
  br i1 %310, bb %then311, bb %if.exit312
then311:
  ret i32 2
if.exit312:
  314 = add i32 %i223.phi, i32 1
  br bb %while.cond292
sortB.entry101:
  br bb %sortB.while.cond105
sortB.while.cond105:
  mx.phi321353 = phi [bb %sortB.entry101, i32 -100, bb %sortB.if.exit133, i32 %mx.phi379]
  i102.phi317354 = phi [bb %sortB.entry101, i32 0, bb %sortB.if.exit133, i32 %139380]
  n.load109355 = load i32 from ptr @n
  110356 = icmp slt i32 %i102.phi317354, i32 %n.load109355
  br i1 %110356, bb %sortB.while.body106, bb %sortB.while.exit107
sortB.while.body106:
  113359 = mul i32 %i102.phi317354, i32 4
  114360 = ptradd ptr @b, i32 %113359
  114.load361 = load i32 from ptr %114360
  116362 = mul i32 %114.load361, i32 4
  117363 = ptradd ptr @cnt, i32 %116362
  120.load364 = load i32 from ptr %114360
  122365 = mul i32 %120.load364, i32 4
  123366 = ptradd ptr @cnt, i32 %122365
  123.load367 = load i32 from ptr %123366
  125368 = add i32 %123.load367, i32 1
  store i32 %125368 to ptr %117363
  128.load370 = load i32 from ptr %114360
  131371 = icmp sgt i32 %128.load370, i32 %mx.phi321353
  br i1 %131371, bb %sortB.then132, bb %sortB.if.exit133
sortB.while.exit107:
  br bb %sortB.while.cond141
sortB.then132:
  136.load376 = load i32 from ptr %114360
  br bb %sortB.if.exit133
sortB.if.exit133:
  mx.phi379 = phi [bb %sortB.while.body106, i32 %mx.phi321353, bb %sortB.then132, i32 %136.load376]
  139380 = add i32 %i102.phi317354, i32 1
  br bb %sortB.while.cond105
sortB.while.cond141:
  now.phi319383 = phi [bb %sortB.while.exit107, i32 0, bb %sortB.while.exit155, i32 %now.phi396]
  i102.phi384 = phi [bb %sortB.while.exit107, i32 0, bb %sortB.while.exit155, i32 %167407]
  146385 = icmp sle i32 %i102.phi384, i32 %mx.phi321353
  br i1 %146385, bb %sortB.while.body142, bb %sortB.while.exit143
sortB.while.body142:
  150388 = mul i32 %i102.phi384, i32 4
  151389 = ptradd ptr @cnt, i32 %150388
  151.load390 = load i32 from ptr %151389
  br bb %sortB.while.cond153
sortB.while.exit143:
  br bb %sortC.entry168
sortB.while.cond153:
  j148.phi395 = phi [bb %sortB.while.body142, i32 %151.load390, bb %sortB.while.body154, i32 %165404]
  now.phi396 = phi [bb %sortB.while.body142, i32 %now.phi319383, bb %sortB.while.body154, i32 %163403]
  157397 = icmp ne i32 %j148.phi395, i32 0
  br i1 %157397, bb %sortB.while.body154, bb %sortB.while.exit155
sortB.while.body154:
  159400 = mul i32 %now.phi396, i32 4
  160401 = ptradd ptr @b, i32 %159400
  store i32 %i102.phi384 to ptr %160401
  163403 = add i32 %now.phi396, i32 1
  165404 = sub i32 %j148.phi395, i32 1
  br bb %sortB.while.cond153
sortB.while.exit155:
  167407 = add i32 %i102.phi384, i32 1
  br bb %sortB.while.cond141
sortC.entry168:
  br bb %sortC.while.cond170
sortC.while.cond170:
  i169.phi413 = phi [bb %sortC.entry168, i32 0, bb %sortC.while.exit184, i32 %181418]
  n.load174414 = load i32 from ptr @n
  175415 = icmp slt i32 %i169.phi413, i32 %n.load174414
  br i1 %175415, bb %sortC.while.body171, bb %sortC.while.exit172
sortC.while.body171:
  181418 = add i32 %i169.phi413, i32 1
  br bb %sortC.while.cond182
sortC.while.exit172:
  br bb %while.exit226.split.split
sortC.while.cond182:
  j179.phi423 = phi [bb %sortC.while.body171, i32 %181418, bb %sortC.if.exit199, i32 %202451]
  id.phi326424 = phi [bb %sortC.while.body171, i32 %i169.phi413, bb %sortC.if.exit199, i32 %id.phi450]
  n.load186425 = load i32 from ptr @n
  187426 = icmp slt i32 %j179.phi423, i32 %n.load186425
  br i1 %187426, bb %sortC.while.body183, bb %sortC.while.exit184
sortC.while.body183:
  190429 = mul i32 %j179.phi423, i32 4
  191430 = ptradd ptr @c, i32 %190429
  191.load431 = load i32 from ptr %191430
  194432 = mul i32 %id.phi326424, i32 4
  195433 = ptradd ptr @c, i32 %194432
  195.load434 = load i32 from ptr %195433
  197435 = icmp slt i32 %191.load431, i32 %195.load434
  br i1 %197435, bb %sortC.then198, bb %sortC.if.exit199
sortC.while.exit184:
  205438 = mul i32 %i169.phi413, i32 4
  206439 = ptradd ptr @c, i32 %205438
  206.load440 = load i32 from ptr %206439
  212441 = mul i32 %id.phi326424, i32 4
  213442 = ptradd ptr @c, i32 %212441
  213.load443 = load i32 from ptr %213442
  store i32 %213.load443 to ptr %206439
  store i32 %206.load440 to ptr %213442
  br bb %sortC.while.cond170
sortC.then198:
  br bb %sortC.if.exit199
sortC.if.exit199:
  id.phi450 = phi [bb %sortC.while.body183, i32 %id.phi326424, bb %sortC.then198, i32 %j179.phi423]
  202451 = add i32 %j179.phi423, i32 1
  br bb %sortC.while.cond182
sortA.entry51:
  br bb %sortA.while.cond54
sortA.while.cond54:
  t.phi339457 = phi [bb %sortA.entry51, i32 ub, bb %sortA.while.exit65, i32 %t.phi338468]
  i.phi458 = phi [bb %sortA.entry51, i32 0, bb %sortA.while.exit65, i32 %62463]
  n.load459 = load i32 from ptr @n
  59460 = icmp slt i32 %i.phi458, i32 %n.load459
  br i1 %59460, bb %sortA.while.body55, bb %sortA.while.exit56
sortA.while.body55:
  62463 = add i32 %i.phi458, i32 1
  br bb %sortA.while.cond63
sortA.while.exit56:
  br bb %sortB.entry101
sortA.while.cond63:
  t.phi338468 = phi [bb %sortA.while.body55, i32 %t.phi339457, bb %sortA.if.exit80, i32 %t.phi491]
  j.phi469 = phi [bb %sortA.while.body55, i32 %62463, bb %sortA.if.exit80, i32 %98492]
  n.load67470 = load i32 from ptr @n
  68471 = icmp slt i32 %j.phi469, i32 %n.load67470
  br i1 %68471, bb %sortA.while.body64, bb %sortA.while.exit65
sortA.while.body64:
  71474 = mul i32 %i.phi458, i32 4
  72475 = ptradd ptr @a, i32 %71474
  72.load476 = load i32 from ptr %72475
  75477 = mul i32 %j.phi469, i32 4
  76478 = ptradd ptr @a, i32 %75477
  76.load479 = load i32 from ptr %76478
  78480 = icmp sgt i32 %72.load476, i32 %76.load479
  br i1 %78480, bb %sortA.then79, bb %sortA.if.exit80
sortA.while.exit65:
  br bb %sortA.while.cond54
sortA.then79:
  84.load485 = load i32 from ptr %72475
  91.load486 = load i32 from ptr %76478
  store i32 %91.load486 to ptr %72475
  store i32 %84.load485 to ptr %76478
  br bb %sortA.if.exit80
sortA.if.exit80:
  t.phi491 = phi [bb %sortA.while.body64, i32 %t.phi338468, bb %sortA.then79, i32 %84.load485]
  98492 = add i32 %j.phi469, i32 1
  br bb %sortA.while.cond63
quick_read.while.cond:
  f.phi344499 = phi [bb %entry221, i32 0, bb %quick_read.if.exit, i32 %f.phi519]
  ch.phi341500 = phi [bb %entry221, i32 %2496, bb %quick_read.if.exit, i32 %23520]
  9501 = icmp slt i32 %ch.phi341500, i32 48
  br i1 %9501, bb %quick_read.select.then, bb %quick_read.select.else
quick_read.while.body:
  20504 = icmp eq i32 %ch.phi341500, i32 45
  br i1 %20504, bb %quick_read.then, bb %quick_read.if.exit
quick_read.while.exit:
  br bb %quick_read.while.cond24
quick_read.select.then:
  br bb %quick_read.select.exit
quick_read.select.else:
  15511 = icmp sgt i32 %ch.phi341500, i32 57
  br bb %quick_read.select.exit
quick_read.select.exit:
  select.phi514 = phi [bb %quick_read.select.else, i1 %15511, bb %quick_read.select.then, i1 1]
  br i1 %select.phi514, bb %quick_read.while.body, bb %quick_read.while.exit
quick_read.then:
  br bb %quick_read.if.exit
quick_read.if.exit:
  f.phi519 = phi [bb %quick_read.while.body, i32 %f.phi344499, bb %quick_read.then, i32 1]
  23520 = call i32 getch()
  br bb %quick_read.while.cond
quick_read.while.cond24:
  x.phi523 = phi [bb %quick_read.while.exit, i32 0, bb %quick_read.while.body25, i32 %41530]
  ch.phi524 = phi [bb %quick_read.while.exit, i32 %ch.phi341500, bb %quick_read.while.body25, i32 %42531]
  28525 = icmp sge i32 %ch.phi524, i32 48
  br i1 %28525, bb %quick_read.select.then29, bb %quick_read.select.else30
quick_read.while.body25:
  38528 = mul i32 %x.phi523, i32 10
  40529 = add i32 %38528, i32 %ch.phi524
  41530 = sub i32 %40529, i32 48
  42531 = call i32 getch()
  br bb %quick_read.while.cond24
quick_read.while.exit26:
  44534 = icmp ne i32 %f.phi344499, i32 0
  br i1 %44534, bb %quick_read.then45, bb %quick_read.else
quick_read.select.then29:
  34537 = icmp sle i32 %ch.phi524, i32 57
  br bb %quick_read.select.exit31
quick_read.select.else30:
  br bb %quick_read.select.exit31
quick_read.select.exit31:
  select32.phi542 = phi [bb %quick_read.select.else30, i1 0, bb %quick_read.select.then29, i1 %34537]
  br i1 %select32.phi542, bb %quick_read.while.body25, bb %quick_read.while.exit26
quick_read.then45:
  49545 = sub i32 0, i32 %x.phi523
  br bb %entry221.split
quick_read.else:
  br bb %entry221.split
quick_read.while.cond554:
  f.phi344555 = phi [bb %while.body225, i32 0, bb %quick_read.if.exit574, i32 %f.phi575]
  ch.phi341556 = phi [bb %while.body225, i32 %2552, bb %quick_read.if.exit574, i32 %23576]
  9557 = icmp slt i32 %ch.phi341556, i32 48
  br i1 %9557, bb %quick_read.select.then564, bb %quick_read.select.else566
quick_read.while.body559:
  20560 = icmp eq i32 %ch.phi341556, i32 45
  br i1 %20560, bb %quick_read.then572, bb %quick_read.if.exit574
quick_read.while.exit562:
  br bb %quick_read.while.cond24578
quick_read.select.then564:
  br bb %quick_read.select.exit569
quick_read.select.else566:
  15567 = icmp sgt i32 %ch.phi341556, i32 57
  br bb %quick_read.select.exit569
quick_read.select.exit569:
  select.phi570 = phi [bb %quick_read.select.else566, i1 %15567, bb %quick_read.select.then564, i1 1]
  br i1 %select.phi570, bb %quick_read.while.body559, bb %quick_read.while.exit562
quick_read.then572:
  br bb %quick_read.if.exit574
quick_read.if.exit574:
  f.phi575 = phi [bb %quick_read.while.body559, i32 %f.phi344555, bb %quick_read.then572, i32 1]
  23576 = call i32 getch()
  br bb %quick_read.while.cond554
quick_read.while.cond24578:
  x.phi579 = phi [bb %quick_read.while.exit562, i32 0, bb %quick_read.while.body25583, i32 %41586]
  ch.phi580 = phi [bb %quick_read.while.exit562, i32 %ch.phi341556, bb %quick_read.while.body25583, i32 %42587]
  28581 = icmp sge i32 %ch.phi580, i32 48
  br i1 %28581, bb %quick_read.select.then29592, bb %quick_read.select.else30595
quick_read.while.body25583:
  38584 = mul i32 %x.phi579, i32 10
  40585 = add i32 %38584, i32 %ch.phi580
  41586 = sub i32 %40585, i32 48
  42587 = call i32 getch()
  br bb %quick_read.while.cond24578
quick_read.while.exit26589:
  44590 = icmp ne i32 %f.phi344555, i32 0
  br i1 %44590, bb %quick_read.then45600, bb %quick_read.else603
quick_read.select.then29592:
  34593 = icmp sle i32 %ch.phi580, i32 57
  br bb %quick_read.select.exit31597
quick_read.select.else30595:
  br bb %quick_read.select.exit31597
quick_read.select.exit31597:
  select32.phi598 = phi [bb %quick_read.select.else30595, i1 0, bb %quick_read.select.then29592, i1 %34593]
  br i1 %select32.phi598, bb %quick_read.while.body25583, bb %quick_read.while.exit26589
quick_read.then45600:
  49601 = sub i32 0, i32 %x.phi579
  br bb %while.body225.split
quick_read.else603:
  br bb %while.body225.split
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

void sortA(ptr a) {
entry51:
  br bb %while.cond54
while.cond54:
  t.phi339 = phi [bb %entry51, i32 ub, bb %while.exit65, i32 %t.phi338]
  i.phi = phi [bb %entry51, i32 0, bb %while.exit65, i32 %62]
  n.load = load i32 from ptr @n
  59 = icmp slt i32 %i.phi, i32 %n.load
  br i1 %59, bb %while.body55, bb %while.exit56
while.body55:
  62 = add i32 %i.phi, i32 1
  br bb %while.cond63
while.exit56:
  ret 
while.cond63:
  t.phi338 = phi [bb %while.body55, i32 %t.phi339, bb %if.exit80, i32 %t.phi]
  j.phi = phi [bb %while.body55, i32 %62, bb %if.exit80, i32 %98]
  n.load67 = load i32 from ptr @n
  68 = icmp slt i32 %j.phi, i32 %n.load67
  br i1 %68, bb %while.body64, bb %while.exit65
while.body64:
  71 = mul i32 %i.phi, i32 4
  72 = ptradd ptr %a, i32 %71
  72.load = load i32 from ptr %72
  75 = mul i32 %j.phi, i32 4
  76 = ptradd ptr %a, i32 %75
  76.load = load i32 from ptr %76
  78 = icmp sgt i32 %72.load, i32 %76.load
  br i1 %78, bb %then79, bb %if.exit80
while.exit65:
  br bb %while.cond54
then79:
  84.load = load i32 from ptr %72
  91.load = load i32 from ptr %76
  store i32 %91.load to ptr %72
  store i32 %84.load to ptr %76
  br bb %if.exit80
if.exit80:
  t.phi = phi [bb %while.body64, i32 %t.phi338, bb %then79, i32 %84.load]
  98 = add i32 %j.phi, i32 1
  br bb %while.cond63
}

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

i32 quick_read() {
entry:
  2 = call i32 getch()
  br bb %while.cond
while.cond:
  f.phi344 = phi [bb %entry, i32 0, bb %if.exit, i32 %f.phi]
  ch.phi341 = phi [bb %entry, i32 %2, bb %if.exit, i32 %23]
  9 = icmp slt i32 %ch.phi341, i32 48
  br i1 %9, bb %select.then, bb %select.else
while.body:
  20 = icmp eq i32 %ch.phi341, i32 45
  br i1 %20, bb %then, bb %if.exit
while.exit:
  br bb %while.cond24
select.then:
  br bb %select.exit
select.else:
  15 = icmp sgt i32 %ch.phi341, i32 57
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 %15, bb %select.then, i1 1]
  br i1 %select.phi, bb %while.body, bb %while.exit
then:
  br bb %if.exit
if.exit:
  f.phi = phi [bb %while.body, i32 %f.phi344, bb %then, i32 1]
  23 = call i32 getch()
  br bb %while.cond
while.cond24:
  x.phi = phi [bb %while.exit, i32 0, bb %while.body25, i32 %41]
  ch.phi = phi [bb %while.exit, i32 %ch.phi341, bb %while.body25, i32 %42]
  28 = icmp sge i32 %ch.phi, i32 48
  br i1 %28, bb %select.then29, bb %select.else30
while.body25:
  38 = mul i32 %x.phi, i32 10
  40 = add i32 %38, i32 %ch.phi
  41 = sub i32 %40, i32 48
  42 = call i32 getch()
  br bb %while.cond24
while.exit26:
  44 = icmp ne i32 %f.phi344, i32 0
  br i1 %44, bb %then45, bb %else
select.then29:
  34 = icmp sle i32 %ch.phi, i32 57
  br bb %select.exit31
select.else30:
  br bb %select.exit31
select.exit31:
  select32.phi = phi [bb %select.else30, i1 0, bb %select.then29, i1 %34]
  br i1 %select32.phi, bb %while.body25, bb %while.exit26
then45:
  49 = sub i32 0, i32 %x.phi
  ret i32 %49
else:
  ret i32 %x.phi
}


