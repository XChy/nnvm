global ptr count init with i32 0
global ptr sum init with i32 0
global ptr a init with i32 0
void f2() {
entry27:
  sum.load28 = load i32 from ptr @sum
  a.load29 = load i32 from ptr @a
  30 = add i32 %sum.load28, i32 %a.load29
  store i32 %30 to ptr @sum
  32 = call i32 getA()
  sum.load33 = load i32 from ptr @sum
  a.load34 = load i32 from ptr @a
  35 = add i32 %sum.load33, i32 %a.load34
  store i32 %35 to ptr @sum
  ret 
}

void f1(i32 a) {
entry4:
  sum.load = load i32 from ptr @sum
  8 = add i32 %sum.load, i32 %a
  store i32 %8 to ptr @sum
  9 = call i32 getA()
  sum.load10 = load i32 from ptr @sum
  12 = add i32 %sum.load10, i32 %9
  store i32 %12 to ptr @sum
  br bb %then
then:
  17 = call i32 getA()
  sum.load18 = load i32 from ptr @sum
  20 = add i32 %sum.load18, i32 %17
  store i32 %20 to ptr @sum
  br bb %if.exit
if.exit:
  sum.load21 = load i32 from ptr @sum
  23 = add i32 %sum.load21, i32 %9
  store i32 %23 to ptr @sum
  26 = add i32 %23, i32 %9
  store i32 %26 to ptr @sum
  ret 
}

external i32 getint()

external i32 getch()

external void putint(i32 )

i32 getA() {
entry:
  count.load = load i32 from ptr @count
  2 = add i32 %count.load, i32 1
  store i32 %2 to ptr @count
  ret i32 %2
}

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry51:
  store i32 0 to ptr @sum
  52 = call i32 getA()
  store i32 %52 to ptr @a
  sum.load53 = load i32 from ptr @sum
  55 = add i32 %sum.load53, i32 %52
  store i32 %55 to ptr @sum
  57 = call i32 getA()
  call void f1(i32 %57)
  call void f2()
  call void f3()
  call void f1(i32 %57)
  call void f2()
  call void f3()
  67 = call i32 getA()
  call void f1(i32 %57)
  call void f2()
  call void f3()
  73 = call i32 getA()
  75 = call i32 getA()
  call void f1(i32 %75)
  call void f2()
  call void f3()
  81 = call i32 getA()
  call void f1(i32 %81)
  call void f2()
  call void f3()
  86 = call i32 getA()
  call void f1(i32 %86)
  call void f2()
  call void f3()
  call void f1(i32 %57)
  call void f2()
  call void f3()
  br bb %while.cond104
while.exit:
  sum.load142 = load i32 from ptr @sum
  call void putint(i32 %sum.load142)
  ret i32 0
while.cond104:
  a127.phi = phi [bb %entry51, i32 ub, bb %if.exit125, i32 %a127.phi, bb %then124, i32 %128]
  i.phi = phi [bb %entry51, i32 0, bb %if.exit125, i32 %141, bb %then124, i32 %134]
  a56.phi = phi [bb %entry51, i32 %57, bb %if.exit125, i32 %139, bb %then124, i32 %a56.phi148]
  108 = icmp slt i32 %i.phi, i32 3
  br i1 %108, bb %while.body105, bb %while.exit106
while.body105:
  br bb %while.cond110
while.exit106:
  br bb %while.exit
while.cond110:
  a56.phi148 = phi [bb %while.body105, i32 %a56.phi]
  br bb %then115
while.exit112:
  123 = icmp eq i32 %i.phi, i32 1
  br i1 %123, bb %then124, bb %else
then115:
  call void f1(i32 %a56.phi148)
  call void f2()
  call void f3()
  br bb %while.exit112
then124:
  128 = call i32 getA()
  call void f1(i32 %128)
  call void f2()
  call void f3()
  134 = add i32 %i.phi, i32 1
  br bb %while.cond104
if.exit125:
  139 = call i32 getA()
  141 = add i32 %i.phi, i32 1
  br bb %while.cond104
else:
  call void f1(i32 %a56.phi148)
  call void f2()
  call void f3()
  br bb %if.exit125
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

void f3() {
entry36:
  38 = call i32 getA()
  sum.load39 = load i32 from ptr @sum
  41 = add i32 %sum.load39, i32 %38
  store i32 %41 to ptr @sum
  42 = call i32 getA()
  sum.load43 = load i32 from ptr @sum
  45 = add i32 %sum.load43, i32 %42
  store i32 %45 to ptr @sum
  47 = call i32 getA()
  sum.load48 = load i32 from ptr @sum
  50 = add i32 %sum.load48, i32 %42
  store i32 %50 to ptr @sum
  ret 
}

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


