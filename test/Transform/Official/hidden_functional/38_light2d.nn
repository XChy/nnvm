global ptr seed init with i32 0
immutable internal global ptr MAX_DISTANCE init with float 2.000000
immutable internal global ptr MAX_STEP init with i32 10
immutable internal global ptr EPSILON init with float 0.000001
immutable internal global ptr PI init with float 3.141593
immutable internal global ptr TWO_PI init with float 6.283185
immutable internal global ptr N init with i32 24
immutable internal global ptr RAND_MAX init with i32 100000006
immutable internal global ptr H init with i32 192
immutable internal global ptr W init with i32 192
float sample(float x, float y) {
entry249:  pred()
  %ret413 = stack 8
  br bb %while.body255
while.body255:  pred(while.body255.split, entry249)
  sum.phi1148 = phi [bb %while.body255.split, float %286, bb %entry249, float 0.000000]
  i253.phi1147 = phi [bb %while.body255.split, i32 %289, bb %entry249, i32 0]
  seed.load2731 = load i32 from ptr @seed
  3732 = mul i32 %seed.load2731, i32 19980130
  4733 = add i32 %3732, i32 23333
  5734 = srem i32 %4733, i32 100000007
  store i32 %5734 to ptr @seed
  7736 = icmp slt i32 %5734, i32 0
  br i1 %7736, bb %rand.then, bb %rand.if.exit
while.body255.split:  pred(trace.while.exit205, trace.then235)
  285.ret = phi [bb %trace.while.exit205, float 0.000000, bb %trace.then235, float %238.load441]
  286 = fadd float %sum.phi1148, float %285.ret
  289 = add i32 %i253.phi1147, i32 1
  259 = icmp slt i32 %289, i32 24
  br i1 %259, bb %while.body255, bb %while.exit256
while.exit256:  pred(while.body255.split)
  1146 = phi [bb %while.body255.split, float %286]
  292 = si2f i32 24 to float
  293 = fdiv float %1146, float %292
  ret float %293
trace.while.cond203:  pred(my_sin.if.exit126684, trace.if.exit236)
  i.phi416 = phi [bb %my_sin.if.exit126684, i32 0, bb %trace.if.exit236, i32 %248446]
  t201.phi417 = phi [bb %my_sin.if.exit126684, float 0.000000, bb %trace.if.exit236, float %245445]
  208418 = icmp slt i32 %i.phi416, i32 10
  br i1 %208418, bb %trace.select.then209, bb %trace.select.else210
trace.while.body204:  pred(trace.select.exit211)
  222421 = fmul float %1326461086, float %t201.phi417
  223422 = fadd float %x, float %222421
  227423 = fmul float %132686, float %t201.phi417
  228424 = fadd float %y, float %227423
  150526880 = fsub float %223422, float 0.400000
  154527881 = fsub float %228424, float 0.400000
  157528882 = fmul float %150526880, float %150526880
  160529883 = fmul float %154527881, float %154527881
  161530884 = fadd float %157528882, float %160529883
  28500537891 = si2f i32 8 to float
  29501538892 = fdiv float %161530884, float %28500537891
  30502539893 = fadd float %29501538892, float 0.500000
  33504541895 = fmul float %1371043, float %161530884
  35505542896 = si2f i32 4 to float
  36506543897 = fadd float %35505542896, float %161530884
  37507544898 = fdiv float %33504541895, float %36506543897
  38508545899 = fadd float %30502539893, float %37507544898
  br bb %scene.circle_sdf.my_sqrt.while.body906
trace.while.exit205:  pred(trace.select.exit211)
  br bb %while.body255.split
trace.select.then209:  pred(trace.while.cond203)
  215432 = fcmp olt float %t201.phi417, float 2.000000
  br bb %trace.select.exit211
trace.select.else210:  pred(trace.while.cond203)
  br bb %trace.select.exit211
trace.select.exit211:  pred(trace.select.then209, trace.select.else210)
  select212.phi437 = phi [bb %trace.select.else210, i1 0, bb %trace.select.then209, i1 %215432]
  br i1 %select212.phi437, bb %trace.while.body204, bb %trace.while.exit205
trace.then235:  pred(scene.if.exit180872)
  238440 = ptradd ptr %ret413, i32 4
  238.load441 = load float from ptr %238440
  br bb %while.body255.split
trace.if.exit236:  pred(scene.if.exit180872)
  245445 = fadd float %t201.phi417, float %231.load426
  248446 = add i32 %i.phi416, i32 1
  br bb %trace.while.cond203
my_sin.select.then653:  pred(my_cos.my_sin.if.exit126)
  br bb %my_sin.select.exit659
my_sin.select.else655:  pred(my_cos.my_sin.if.exit126)
  94656 = fneg float 6.283185
  95657 = fcmp olt float %276, float %94656
  br bb %my_sin.select.exit659
my_sin.select.exit659:  pred(my_sin.select.then653, my_sin.select.else655)
  select.phi660 = phi [bb %my_sin.select.else655, i1 %95657, bb %my_sin.select.then653, i1 -1]
  br i1 %select.phi660, bb %my_sin.then98662, bb %my_sin.if.exit99669
my_sin.then98662:  pred(my_sin.select.exit659)
  103663 = fdiv float %276, float 6.283185
  104664 = f2si float %103663 to i32
  109665 = si2f i32 %104664 to float
  110666 = fmul float %109665, float 6.283185
  111667 = fsub float %276, float %110666
  br bb %my_sin.if.exit99669
my_sin.if.exit99669:  pred(my_sin.select.exit659, my_sin.then98662)
  x.stack84.phi369670 = phi [bb %my_sin.select.exit659, float %276, bb %my_sin.then98662, float %111667]
  114671 = fcmp ogt float %x.stack84.phi369670, float 3.141593
  br i1 %114671, bb %my_sin.then115673, bb %my_sin.if.exit116676
my_sin.then115673:  pred(my_sin.if.exit99669)
  120674 = fsub float %x.stack84.phi369670, float 6.283185
  br bb %my_sin.if.exit116676
my_sin.if.exit116676:  pred(my_sin.if.exit99669, my_sin.then115673)
  x.stack84.phi368677 = phi [bb %my_sin.if.exit99669, float %x.stack84.phi369670, bb %my_sin.then115673, float %120674]
  124679 = fcmp olt float %x.stack84.phi368677, float %1236381078
  br i1 %124679, bb %my_sin.then125681, bb %my_sin.if.exit126684
my_sin.then125681:  pred(my_sin.if.exit116676)
  130682 = fadd float %x.stack84.phi368677, float 6.283185
  br bb %my_sin.if.exit126684
my_sin.if.exit126684:  pred(my_sin.if.exit116676, my_sin.then125681)
  x.stack84.phi685 = phi [bb %my_sin.if.exit116676, float %x.stack84.phi368677, bb %my_sin.then125681, float %130682]
  132686 = call float my_sin_impl(float %x.stack84.phi685)
  br bb %trace.while.cond203
rand.then:  pred(while.body255)
  seed.load11739 = load i32 from ptr @seed
  12740 = add i32 %seed.load11739, i32 100000007
  store i32 %12740 to ptr @seed
  br bb %rand.if.exit
rand.if.exit:  pred(while.body255, rand.then)
  seed.load13744 = load i32 from ptr @seed
  263 = si2f i32 %seed.load13744 to float
  269 = si2f i32 100000006 to float
  270 = fdiv float %263, float %269
  271 = si2f i32 %i253.phi1147 to float
  272 = fadd float %271, float %270
  273 = fmul float 6.283185, float %272
  275 = si2f i32 24 to float
  276 = fdiv float %273, float %275
  1371043 = si2f i32 2 to float
  1381044 = fdiv float 3.141593, float %1371043
  1391045 = fadd float %276, float %1381044
  876111051 = fcmp ogt float %1391045, float 6.283185
  br i1 %876111051, bb %my_cos.my_sin.select.then, bb %my_cos.my_sin.select.else
scene.then179867:  pred(scene.circle_sdf.my_sqrt.while.exit595947)
  store float %164534888 to ptr %ret413
  187869 = ptradd ptr %ret413, i32 4
  store float 3.000000 to ptr %187869
  br bb %scene.if.exit180872
scene.if.exit180872:  pred(scene.then179867, scene.else874)
  231.load426 = load float from ptr %ret413
  234427 = fcmp olt float %231.load426, float 0.000001
  br i1 %234427, bb %trace.then235, bb %trace.if.exit236
scene.else874:  pred(scene.circle_sdf.my_sqrt.while.exit595947)
  store float %164571923 to ptr %ret413
  194876 = ptradd ptr %ret413, i32 4
  store float 0.000000 to ptr %194876
  br bb %scene.if.exit180872
scene.circle_sdf.my_sqrt.while.body906:  pred(scene.circle_sdf.my_sqrt.while.body906, trace.while.body204)
  t.phi5125499031144 = phi [bb %scene.circle_sdf.my_sqrt.while.body906, float %52518555909, bb %trace.while.body204, float %38508545899]
  c.phi5115489021143 = phi [bb %scene.circle_sdf.my_sqrt.while.body906, i32 %55519556910, bb %trace.while.body204, i32 10]
  49516553907 = fdiv float %161530884, float %t.phi5125499031144
  50517554908 = fadd float %t.phi5125499031144, float %49516553907
  52518555909 = fdiv float %50517554908, float %1371043
  55519556910 = sub i32 %c.phi5115489021143, i32 1
  44513550904 = icmp ne i32 %55519556910, i32 0
  br i1 %44513550904, bb %scene.circle_sdf.my_sqrt.while.body906, bb %scene.circle_sdf.my_sqrt.while.exit912
scene.circle_sdf.my_sqrt.while.exit912:  pred(scene.circle_sdf.my_sqrt.while.body906)
  385085458991142 = phi [bb %scene.circle_sdf.my_sqrt.while.body906, float %52518555909]
  164534888 = fsub float %385085458991142, float 0.100000
  150563915 = fsub float %223422, float 0.600000
  154564916 = fsub float %228424, float 0.600000
  157565917 = fmul float %150563915, float %150563915
  160566918 = fmul float %154564916, float %154564916
  161567919 = fadd float %157565917, float %160566918
  29501575927 = fdiv float %161567919, float %28500537891
  30502576928 = fadd float %29501575927, float 0.500000
  33504578930 = fmul float %1371043, float %161567919
  36506580932 = fadd float %35505542896, float %161567919
  37507581933 = fdiv float %33504578930, float %36506580932
  38508582934 = fadd float %30502576928, float %37507581933
  br bb %scene.circle_sdf.my_sqrt.while.body589941
scene.circle_sdf.my_sqrt.while.body589941:  pred(scene.circle_sdf.my_sqrt.while.body589941, scene.circle_sdf.my_sqrt.while.exit912)
  t.phi5125869381140 = phi [bb %scene.circle_sdf.my_sqrt.while.body589941, float %52518592944, bb %scene.circle_sdf.my_sqrt.while.exit912, float %38508582934]
  c.phi5115859371139 = phi [bb %scene.circle_sdf.my_sqrt.while.body589941, i32 %55519593945, bb %scene.circle_sdf.my_sqrt.while.exit912, i32 10]
  49516590942 = fdiv float %161567919, float %t.phi5125869381140
  50517591943 = fadd float %t.phi5125869381140, float %49516590942
  52518592944 = fdiv float %50517591943, float %1371043
  55519593945 = sub i32 %c.phi5115859371139, i32 1
  44513587939 = icmp ne i32 %55519593945, i32 0
  br i1 %44513587939, bb %scene.circle_sdf.my_sqrt.while.body589941, bb %scene.circle_sdf.my_sqrt.while.exit595947
scene.circle_sdf.my_sqrt.while.exit595947:  pred(scene.circle_sdf.my_sqrt.while.body589941)
  385085829341138 = phi [bb %scene.circle_sdf.my_sqrt.while.body589941, float %52518592944]
  164571923 = fsub float %385085829341138, float 0.050000
  178865 = fcmp olt float %164534888, float %164571923
  br i1 %178865, bb %scene.then179867, bb %scene.else874
my_cos.my_sin.select.then:  pred(rand.if.exit)
  br bb %my_cos.my_sin.select.exit
my_cos.my_sin.select.else:  pred(rand.if.exit)
  946161056 = fneg float 6.283185
  956171057 = fcmp olt float %1391045, float %946161056
  br bb %my_cos.my_sin.select.exit
my_cos.my_sin.select.exit:  pred(my_cos.my_sin.select.then, my_cos.my_sin.select.else)
  select.phi6201060 = phi [bb %my_cos.my_sin.select.else, i1 %956171057, bb %my_cos.my_sin.select.then, i1 -1]
  br i1 %select.phi6201060, bb %my_cos.my_sin.then98, bb %my_cos.my_sin.if.exit99
my_cos.my_sin.then98:  pred(my_cos.my_sin.select.exit)
  1036231063 = fdiv float %1391045, float 6.283185
  1046241064 = f2si float %1036231063 to i32
  1096251065 = si2f i32 %1046241064 to float
  1106261066 = fmul float %1096251065, float 6.283185
  1116271067 = fsub float %1391045, float %1106261066
  br bb %my_cos.my_sin.if.exit99
my_cos.my_sin.if.exit99:  pred(my_cos.my_sin.select.exit, my_cos.my_sin.then98)
  x.stack84.phi3696301070 = phi [bb %my_cos.my_sin.select.exit, float %1391045, bb %my_cos.my_sin.then98, float %1116271067]
  1146311071 = fcmp ogt float %x.stack84.phi3696301070, float 3.141593
  br i1 %1146311071, bb %my_cos.my_sin.then115, bb %my_cos.my_sin.if.exit116
my_cos.my_sin.then115:  pred(my_cos.my_sin.if.exit99)
  1206341074 = fsub float %x.stack84.phi3696301070, float 6.283185
  br bb %my_cos.my_sin.if.exit116
my_cos.my_sin.if.exit116:  pred(my_cos.my_sin.if.exit99, my_cos.my_sin.then115)
  x.stack84.phi3686371077 = phi [bb %my_cos.my_sin.if.exit99, float %x.stack84.phi3696301070, bb %my_cos.my_sin.then115, float %1206341074]
  1236381078 = fneg float 3.141593
  1246391079 = fcmp olt float %x.stack84.phi3686371077, float %1236381078
  br i1 %1246391079, bb %my_cos.my_sin.then125, bb %my_cos.my_sin.if.exit126
my_cos.my_sin.then125:  pred(my_cos.my_sin.if.exit116)
  1306421082 = fadd float %x.stack84.phi3686371077, float 6.283185
  br bb %my_cos.my_sin.if.exit126
my_cos.my_sin.if.exit126:  pred(my_cos.my_sin.if.exit116, my_cos.my_sin.then125)
  x.stack84.phi6451085 = phi [bb %my_cos.my_sin.if.exit116, float %x.stack84.phi3686371077, bb %my_cos.my_sin.then125, float %1306421082]
  1326461086 = call float my_sin_impl(float %x.stack84.phi6451085)
  87651 = fcmp ogt float %276, float 6.283185
  br i1 %87651, bb %my_sin.select.then653, bb %my_sin.select.else655
}

float trace(float ox, float oy, float dx, float dy) {
entry196:  pred()
  %ret = stack 8
  br bb %while.cond203
while.cond203:  pred(entry196, if.exit236)
  i.phi = phi [bb %entry196, i32 0, bb %if.exit236, i32 %248]
  t201.phi = phi [bb %entry196, float 0.000000, bb %if.exit236, float %245]
  208 = icmp slt i32 %i.phi, i32 10
  br i1 %208, bb %select.then209, bb %select.else210
while.body204:  pred(select.exit211)
  222 = fmul float %dx, float %t201.phi
  223 = fadd float %ox, float %222
  227 = fmul float %dy, float %t201.phi
  228 = fadd float %oy, float %227
  150526788 = fsub float %223, float 0.400000
  154527789 = fsub float %228, float 0.400000
  157528790 = fmul float %150526788, float %150526788
  160529791 = fmul float %154527789, float %154527789
  161530792 = fadd float %157528790, float %160529791
  28500537799 = si2f i32 8 to float
  29501538800 = fdiv float %161530792, float %28500537799
  30502539801 = fadd float %29501538800, float 0.500000
  32503540802 = si2f i32 2 to float
  33504541803 = fmul float %32503540802, float %161530792
  35505542804 = si2f i32 4 to float
  36506543805 = fadd float %35505542804, float %161530792
  37507544806 = fdiv float %33504541803, float %36506543805
  38508545807 = fadd float %30502539801, float %37507544806
  br bb %scene.circle_sdf.my_sqrt.while.body
while.exit205:  pred(select.exit211)
  ret float 0.000000
select.then209:  pred(while.cond203)
  215 = fcmp olt float %t201.phi, float 2.000000
  br bb %select.exit211
select.else210:  pred(while.cond203)
  br bb %select.exit211
select.exit211:  pred(select.then209, select.else210)
  select212.phi = phi [bb %select.else210, i1 0, bb %select.then209, i1 %215]
  br i1 %select212.phi, bb %while.body204, bb %while.exit205
then235:  pred(scene.if.exit180)
  238 = ptradd ptr %ret, i32 4
  238.load = load float from ptr %238
  ret float %238.load
if.exit236:  pred(scene.if.exit180)
  245 = fadd float %t201.phi, float %231.load
  248 = add i32 %i.phi, i32 1
  br bb %while.cond203
scene.then179:  pred(scene.circle_sdf.my_sqrt.while.exit595)
  store float %164534796 to ptr %ret
  187777 = ptradd ptr %ret, i32 4
  store float 3.000000 to ptr %187777
  br bb %scene.if.exit180
scene.if.exit180:  pred(scene.then179, scene.else)
  231.load = load float from ptr %ret
  234 = fcmp olt float %231.load, float 0.000001
  br i1 %234, bb %then235, bb %if.exit236
scene.else:  pred(scene.circle_sdf.my_sqrt.while.exit595)
  store float %164571831 to ptr %ret
  194784 = ptradd ptr %ret, i32 4
  store float 0.000000 to ptr %194784
  br bb %scene.if.exit180
scene.circle_sdf.my_sqrt.while.body:  pred(scene.circle_sdf.my_sqrt.while.body, while.body204)
  t.phi5125498111156 = phi [bb %scene.circle_sdf.my_sqrt.while.body, float %52518555817, bb %while.body204, float %38508545807]
  c.phi5115488101155 = phi [bb %scene.circle_sdf.my_sqrt.while.body, i32 %55519556818, bb %while.body204, i32 10]
  49516553815 = fdiv float %161530792, float %t.phi5125498111156
  50517554816 = fadd float %t.phi5125498111156, float %49516553815
  52518555817 = fdiv float %50517554816, float %32503540802
  55519556818 = sub i32 %c.phi5115488101155, i32 1
  44513550812 = icmp ne i32 %55519556818, i32 0
  br i1 %44513550812, bb %scene.circle_sdf.my_sqrt.while.body, bb %scene.circle_sdf.my_sqrt.while.exit
scene.circle_sdf.my_sqrt.while.exit:  pred(scene.circle_sdf.my_sqrt.while.body)
  385085458071154 = phi [bb %scene.circle_sdf.my_sqrt.while.body, float %52518555817]
  164534796 = fsub float %385085458071154, float 0.100000
  150563823 = fsub float %223, float 0.600000
  154564824 = fsub float %228, float 0.600000
  157565825 = fmul float %150563823, float %150563823
  160566826 = fmul float %154564824, float %154564824
  161567827 = fadd float %157565825, float %160566826
  29501575835 = fdiv float %161567827, float %28500537799
  30502576836 = fadd float %29501575835, float 0.500000
  33504578838 = fmul float %32503540802, float %161567827
  36506580840 = fadd float %35505542804, float %161567827
  37507581841 = fdiv float %33504578838, float %36506580840
  38508582842 = fadd float %30502576836, float %37507581841
  br bb %scene.circle_sdf.my_sqrt.while.body589
scene.circle_sdf.my_sqrt.while.body589:  pred(scene.circle_sdf.my_sqrt.while.body589, scene.circle_sdf.my_sqrt.while.exit)
  t.phi5125868461152 = phi [bb %scene.circle_sdf.my_sqrt.while.body589, float %52518592852, bb %scene.circle_sdf.my_sqrt.while.exit, float %38508582842]
  c.phi5115858451151 = phi [bb %scene.circle_sdf.my_sqrt.while.body589, i32 %55519593853, bb %scene.circle_sdf.my_sqrt.while.exit, i32 10]
  49516590850 = fdiv float %161567827, float %t.phi5125868461152
  50517591851 = fadd float %t.phi5125868461152, float %49516590850
  52518592852 = fdiv float %50517591851, float %32503540802
  55519593853 = sub i32 %c.phi5115858451151, i32 1
  44513587847 = icmp ne i32 %55519593853, i32 0
  br i1 %44513587847, bb %scene.circle_sdf.my_sqrt.while.body589, bb %scene.circle_sdf.my_sqrt.while.exit595
scene.circle_sdf.my_sqrt.while.exit595:  pred(scene.circle_sdf.my_sqrt.while.body589)
  385085828421150 = phi [bb %scene.circle_sdf.my_sqrt.while.body589, float %52518592852]
  164571831 = fsub float %385085828421150, float 0.050000
  178773 = fcmp olt float %164534796, float %164571831
  br i1 %178773, bb %scene.then179, bb %scene.else
}

pure float my_sin_impl(float x) {
entry70:  pred()
  17600 = si2f i32 0 to float
  18601 = fcmp ogt float %x, float %17600
  br i1 %18601, bb %my_fabs.then19, bb %my_fabs.if.exit20
entry70.split:  pred(my_fabs.then19, my_fabs.if.exit20)
  73.ret = phi [bb %my_fabs.then19, float %x, bb %my_fabs.if.exit20, float %23606]
  75 = fcmp ole float %73.ret, float 0.000001
  br i1 %75, bb %then76, bb %if.exit77
then76:  pred(entry70.split)
  ret float %x
if.exit77:  pred(entry70.split)
  80 = fdiv float %x, float 3.000000
  81 = call float my_sin_impl(float %80)
  60489 = si2f i32 3 to float
  61490 = fmul float %60489, float %81
  63491 = si2f i32 4 to float
  64492 = fmul float %63491, float %81
  66493 = fmul float %64492, float %81
  68494 = fmul float %66493, float %81
  69495 = fsub float %61490, float %68494
  ret float %69495
my_fabs.then19:  pred(entry70)
  br bb %entry70.split
my_fabs.if.exit20:  pred(entry70)
  23606 = fneg float %x
  br bb %entry70.split
}

pure float p(float x) {
entry57:  pred()
  60 = si2f i32 3 to float
  61 = fmul float %60, float %x
  63 = si2f i32 4 to float
  64 = fmul float %63, float %x
  66 = fmul float %64, float %x
  68 = fmul float %66, float %x
  69 = fsub float %61, float %68
  ret float %69
}

pure float my_sqrt(float x) {
entry24:  pred()
  28 = si2f i32 8 to float
  29 = fdiv float %x, float %28
  30 = fadd float %29, float 0.500000
  32 = si2f i32 2 to float
  33 = fmul float %32, float %x
  35 = si2f i32 4 to float
  36 = fadd float %35, float %x
  37 = fdiv float %33, float %36
  38 = fadd float %30, float %37
  br bb %while.body
while.body:  pred(while.body, entry24)
  t.phi1160 = phi [bb %while.body, float %52, bb %entry24, float %38]
  c.phi1159 = phi [bb %while.body, i32 %55, bb %entry24, i32 10]
  49 = fdiv float %x, float %t.phi1160
  50 = fadd float %t.phi1160, float %49
  52 = fdiv float %50, float %32
  55 = sub i32 %c.phi1159, i32 1
  44 = icmp ne i32 %55, i32 0
  br i1 %44, bb %while.body, bb %while.exit
while.exit:  pred(while.body)
  381158 = phi [bb %while.body, float %52]
  ret float %381158
}

pure float circle_sdf(float x, float y, float cx, float cy, float r) {
entry141:  pred()
  150 = fsub float %x, float %cx
  154 = fsub float %y, float %cy
  157 = fmul float %150, float %150
  160 = fmul float %154, float %154
  161 = fadd float %157, float %160
  28500 = si2f i32 8 to float
  29501 = fdiv float %161, float %28500
  30502 = fadd float %29501, float 0.500000
  32503 = si2f i32 2 to float
  33504 = fmul float %32503, float %161
  35505 = si2f i32 4 to float
  36506 = fadd float %35505, float %161
  37507 = fdiv float %33504, float %36506
  38508 = fadd float %30502, float %37507
  br bb %my_sqrt.while.body
my_sqrt.while.body:  pred(my_sqrt.while.body, entry141)
  t.phi5121164 = phi [bb %my_sqrt.while.body, float %52518, bb %entry141, float %38508]
  c.phi5111163 = phi [bb %my_sqrt.while.body, i32 %55519, bb %entry141, i32 10]
  49516 = fdiv float %161, float %t.phi5121164
  50517 = fadd float %t.phi5121164, float %49516
  52518 = fdiv float %50517, float %32503
  55519 = sub i32 %c.phi5111163, i32 1
  44513 = icmp ne i32 %55519, i32 0
  br i1 %44513, bb %my_sqrt.while.body, bb %my_sqrt.while.exit
my_sqrt.while.exit:  pred(my_sqrt.while.body)
  385081162 = phi [bb %my_sqrt.while.body, float %52518]
  164 = fsub float %385081162, float %r
  ret float %164
}

pure float my_fabs(float x) {
entry14:  pred()
  17 = si2f i32 0 to float
  18 = fcmp ogt float %x, float %17
  br i1 %18, bb %then19, bb %if.exit20
then19:  pred(entry14)
  ret float %x
if.exit20:  pred(entry14)
  23 = fneg float %x
  ret float %23
}

pure float my_sin(float x) {
entry83:  pred()
  87 = fcmp ogt float %x, float 6.283185
  br i1 %87, bb %select.then, bb %select.else
select.then:  pred(entry83)
  br bb %select.exit
select.else:  pred(entry83)
  94 = fneg float 6.283185
  95 = fcmp olt float %x, float %94
  br bb %select.exit
select.exit:  pred(select.then, select.else)
  select.phi = phi [bb %select.else, i1 %95, bb %select.then, i1 -1]
  br i1 %select.phi, bb %then98, bb %if.exit99
then98:  pred(select.exit)
  103 = fdiv float %x, float 6.283185
  104 = f2si float %103 to i32
  109 = si2f i32 %104 to float
  110 = fmul float %109, float 6.283185
  111 = fsub float %x, float %110
  br bb %if.exit99
if.exit99:  pred(select.exit, then98)
  x.stack84.phi369 = phi [bb %select.exit, float %x, bb %then98, float %111]
  114 = fcmp ogt float %x.stack84.phi369, float 3.141593
  br i1 %114, bb %then115, bb %if.exit116
then115:  pred(if.exit99)
  120 = fsub float %x.stack84.phi369, float 6.283185
  br bb %if.exit116
if.exit116:  pred(if.exit99, then115)
  x.stack84.phi368 = phi [bb %if.exit99, float %x.stack84.phi369, bb %then115, float %120]
  123 = fneg float 3.141593
  124 = fcmp olt float %x.stack84.phi368, float %123
  br i1 %124, bb %then125, bb %if.exit126
then125:  pred(if.exit116)
  130 = fadd float %x.stack84.phi368, float 6.283185
  br bb %if.exit126
if.exit126:  pred(if.exit116, then125)
  x.stack84.phi = phi [bb %if.exit116, float %x.stack84.phi368, bb %then125, float %130]
  132 = call float my_sin_impl(float %x.stack84.phi)
  ret float %132
}

external i32 getint()

external i32 getch()

external void putint(i32 )

i32 rand() {
entry:  pred()
  seed.load2 = load i32 from ptr @seed
  3 = mul i32 %seed.load2, i32 19980130
  4 = add i32 %3, i32 23333
  5 = srem i32 %4, i32 100000007
  store i32 %5 to ptr @seed
  7 = icmp slt i32 %5, i32 0
  br i1 %7, bb %then, bb %if.exit
then:  pred(entry)
  seed.load11 = load i32 from ptr @seed
  12 = add i32 %seed.load11, i32 100000007
  store i32 %12 to ptr @seed
  br bb %if.exit
if.exit:  pred(entry, then)
  seed.load13 = load i32 from ptr @seed
  ret i32 %seed.load13
}

void scene(float x, float y, ptr ret) {
entry165:  pred()
  150526 = fsub float %x, float 0.400000
  154527 = fsub float %y, float 0.400000
  157528 = fmul float %150526, float %150526
  160529 = fmul float %154527, float %154527
  161530 = fadd float %157528, float %160529
  28500537 = si2f i32 8 to float
  29501538 = fdiv float %161530, float %28500537
  30502539 = fadd float %29501538, float 0.500000
  32503540 = si2f i32 2 to float
  33504541 = fmul float %32503540, float %161530
  35505542 = si2f i32 4 to float
  36506543 = fadd float %35505542, float %161530
  37507544 = fdiv float %33504541, float %36506543
  38508545 = fadd float %30502539, float %37507544
  br bb %circle_sdf.my_sqrt.while.body
then179:  pred(circle_sdf.my_sqrt.while.exit595)
  store float %164534 to ptr %ret
  187 = ptradd ptr %ret, i32 4
  store float 3.000000 to ptr %187
  br bb %if.exit180
if.exit180:  pred(then179, else)
  ret 
else:  pred(circle_sdf.my_sqrt.while.exit595)
  store float %164571 to ptr %ret
  194 = ptradd ptr %ret, i32 4
  store float 0.000000 to ptr %194
  br bb %if.exit180
circle_sdf.my_sqrt.while.body:  pred(circle_sdf.my_sqrt.while.body, entry165)
  t.phi5125491172 = phi [bb %circle_sdf.my_sqrt.while.body, float %52518555, bb %entry165, float %38508545]
  c.phi5115481171 = phi [bb %circle_sdf.my_sqrt.while.body, i32 %55519556, bb %entry165, i32 10]
  49516553 = fdiv float %161530, float %t.phi5125491172
  50517554 = fadd float %t.phi5125491172, float %49516553
  52518555 = fdiv float %50517554, float %32503540
  55519556 = sub i32 %c.phi5115481171, i32 1
  44513550 = icmp ne i32 %55519556, i32 0
  br i1 %44513550, bb %circle_sdf.my_sqrt.while.body, bb %circle_sdf.my_sqrt.while.exit
circle_sdf.my_sqrt.while.exit:  pred(circle_sdf.my_sqrt.while.body)
  385085451170 = phi [bb %circle_sdf.my_sqrt.while.body, float %52518555]
  164534 = fsub float %385085451170, float 0.100000
  150563 = fsub float %x, float 0.600000
  154564 = fsub float %y, float 0.600000
  157565 = fmul float %150563, float %150563
  160566 = fmul float %154564, float %154564
  161567 = fadd float %157565, float %160566
  29501575 = fdiv float %161567, float %28500537
  30502576 = fadd float %29501575, float 0.500000
  33504578 = fmul float %32503540, float %161567
  36506580 = fadd float %35505542, float %161567
  37507581 = fdiv float %33504578, float %36506580
  38508582 = fadd float %30502576, float %37507581
  br bb %circle_sdf.my_sqrt.while.body589
circle_sdf.my_sqrt.while.body589:  pred(circle_sdf.my_sqrt.while.body589, circle_sdf.my_sqrt.while.exit)
  t.phi5125861168 = phi [bb %circle_sdf.my_sqrt.while.body589, float %52518592, bb %circle_sdf.my_sqrt.while.exit, float %38508582]
  c.phi5115851167 = phi [bb %circle_sdf.my_sqrt.while.body589, i32 %55519593, bb %circle_sdf.my_sqrt.while.exit, i32 10]
  49516590 = fdiv float %161567, float %t.phi5125861168
  50517591 = fadd float %t.phi5125861168, float %49516590
  52518592 = fdiv float %50517591, float %32503540
  55519593 = sub i32 %c.phi5115851167, i32 1
  44513587 = icmp ne i32 %55519593, i32 0
  br i1 %44513587, bb %circle_sdf.my_sqrt.while.body589, bb %circle_sdf.my_sqrt.while.exit595
circle_sdf.my_sqrt.while.exit595:  pred(circle_sdf.my_sqrt.while.body589)
  385085821166 = phi [bb %circle_sdf.my_sqrt.while.body589, float %52518592]
  164571 = fsub float %385085821166, float 0.050000
  178 = fcmp olt float %164534, float %164571
  br i1 %178, bb %then179, bb %else
}

external i32 getarray(ptr )

pure float my_cos(float x) {
entry133:  pred()
  137 = si2f i32 2 to float
  138 = fdiv float 3.141593, float %137
  139 = fadd float %x, float %138
  87611 = fcmp ogt float %139, float 6.283185
  br i1 %87611, bb %my_sin.select.then, bb %my_sin.select.else
my_sin.select.then:  pred(entry133)
  br bb %my_sin.select.exit
my_sin.select.else:  pred(entry133)
  94616 = fneg float 6.283185
  95617 = fcmp olt float %139, float %94616
  br bb %my_sin.select.exit
my_sin.select.exit:  pred(my_sin.select.then, my_sin.select.else)
  select.phi620 = phi [bb %my_sin.select.else, i1 %95617, bb %my_sin.select.then, i1 -1]
  br i1 %select.phi620, bb %my_sin.then98, bb %my_sin.if.exit99
my_sin.then98:  pred(my_sin.select.exit)
  103623 = fdiv float %139, float 6.283185
  104624 = f2si float %103623 to i32
  109625 = si2f i32 %104624 to float
  110626 = fmul float %109625, float 6.283185
  111627 = fsub float %139, float %110626
  br bb %my_sin.if.exit99
my_sin.if.exit99:  pred(my_sin.select.exit, my_sin.then98)
  x.stack84.phi369630 = phi [bb %my_sin.select.exit, float %139, bb %my_sin.then98, float %111627]
  114631 = fcmp ogt float %x.stack84.phi369630, float 3.141593
  br i1 %114631, bb %my_sin.then115, bb %my_sin.if.exit116
my_sin.then115:  pred(my_sin.if.exit99)
  120634 = fsub float %x.stack84.phi369630, float 6.283185
  br bb %my_sin.if.exit116
my_sin.if.exit116:  pred(my_sin.if.exit99, my_sin.then115)
  x.stack84.phi368637 = phi [bb %my_sin.if.exit99, float %x.stack84.phi369630, bb %my_sin.then115, float %120634]
  123638 = fneg float 3.141593
  124639 = fcmp olt float %x.stack84.phi368637, float %123638
  br i1 %124639, bb %my_sin.then125, bb %my_sin.if.exit126
my_sin.then125:  pred(my_sin.if.exit116)
  130642 = fadd float %x.stack84.phi368637, float 6.283185
  br bb %my_sin.if.exit126
my_sin.if.exit126:  pred(my_sin.if.exit116, my_sin.then125)
  x.stack84.phi645 = phi [bb %my_sin.if.exit116, float %x.stack84.phi368637, bb %my_sin.then125, float %130642]
  132646 = call float my_sin_impl(float %x.stack84.phi645)
  ret float %132646
}

external i32 getfarray(ptr )

i32 main() {
entry355:  pred()
  call void write_pgm()
  ret i32 0
}

external float getfloat()

external void putfloat(float )

void write_pgm() {
entry294:  pred()
  %ret451 = stack 8
  call void putch(i32 80)
  call void putch(i32 50)
  call void putch(i32 10)
  call void putint(i32 192)
  call void putch(i32 32)
  call void putint(i32 192)
  call void putch(i32 32)
  call void putint(i32 255)
  call void putch(i32 10)
  br bb %while.body308
while.body308:  pred(while.exit317, entry294)
  y.phi1197 = phi [bb %while.exit317, i32 %354, bb %entry294, i32 0]
  xx322.phi3761196 = phi [bb %while.exit317, float %xx322.phi3761188, bb %entry294, float 0.000000]
  yy.phi3781195 = phi [bb %while.exit317, float %yy.phi3781187, bb %entry294, float 0.000000]
  p.phi3811194 = phi [bb %while.exit317, i32 %p.phi3811186, bb %entry294, i32 0]
  327 = si2f i32 %y.phi1197 to float
  331 = si2f i32 192 to float
  336 = fdiv float %327, float %331
  br bb %while.body316
while.exit309:  pred(while.exit317)
  ret 
while.body316:  pred(if.exit343, while.body308)
  x.phi1192 = phi [bb %if.exit343, i32 %350, bb %while.body308, i32 0]
  324 = si2f i32 %x.phi1192 to float
  332 = fdiv float %324, float %331
  br bb %sample.while.body255
while.exit317:  pred(if.exit343)
  xx322.phi3761188 = phi [bb %if.exit343, float %324]
  yy.phi3781187 = phi [bb %if.exit343, float %327]
  p.phi3811186 = phi [bb %if.exit343, i32 %p.phi]
  call void putch(i32 10)
  354 = add i32 %y.phi1197, i32 1
  312 = icmp slt i32 %354, i32 192
  br i1 %312, bb %while.body308, bb %while.exit309
then342:  pred(sample.while.exit256)
  br bb %if.exit343
if.exit343:  pred(sample.while.exit256, then342)
  p.phi = phi [bb %sample.while.exit256, i32 %339, bb %then342, i32 255]
  call void putint(i32 %p.phi)
  call void putch(i32 32)
  350 = add i32 %x.phi1192, i32 1
  320 = icmp slt i32 %350, i32 192
  br i1 %320, bb %while.body316, bb %while.exit317
sample.while.body255:  pred(sample.while.body255.split, while.body316)
  sum.phi3871184 = phi [bb %sample.while.body255.split, float %286403, bb %while.body316, float 0.000000]
  i253.phi3861183 = phi [bb %sample.while.body255.split, i32 %289404, bb %while.body316, i32 0]
  seed.load2749 = load i32 from ptr @seed
  3750 = mul i32 %seed.load2749, i32 19980130
  4751 = add i32 %3750, i32 23333
  5752 = srem i32 %4751, i32 100000007
  store i32 %5752 to ptr @seed
  7754 = icmp slt i32 %5752, i32 0
  br i1 %7754, bb %rand.then756, bb %rand.if.exit761
sample.while.body255.split:  pred(trace.while.exit205467, trace.then235477)
  285402.ret = phi [bb %trace.while.exit205467, float 0.000000, bb %trace.then235477, float %238.load479]
  286403 = fadd float %sum.phi3871184, float %285402.ret
  289404 = add i32 %i253.phi3861183, i32 1
  259388 = icmp slt i32 %289404, i32 24
  br i1 %259388, bb %sample.while.body255, bb %sample.while.exit256
sample.while.exit256:  pred(sample.while.body255.split)
  1182 = phi [bb %sample.while.body255.split, float %286403]
  292407 = si2f i32 24 to float
  293408 = fdiv float %1182, float %292407
  338 = fmul float %293408, float 255.000000
  339 = f2si float %338 to i32
  341 = icmp sgt i32 %339, i32 255
  br i1 %341, bb %then342, bb %if.exit343
trace.while.cond203453:  pred(my_sin.if.exit126724, trace.if.exit236481)
  i.phi454 = phi [bb %my_sin.if.exit126724, i32 0, bb %trace.if.exit236481, i32 %248484]
  t201.phi455 = phi [bb %my_sin.if.exit126724, float 0.000000, bb %trace.if.exit236481, float %245483]
  208456 = icmp slt i32 %i.phi454, i32 10
  br i1 %208456, bb %trace.select.then209469, bb %trace.select.else210472
trace.while.body204458:  pred(trace.select.exit211474)
  222459 = fmul float %1326461134, float %t201.phi455
  223460 = fadd float %332, float %222459
  227461 = fmul float %132726, float %t201.phi455
  228462 = fadd float %336, float %227461
  150526972 = fsub float %223460, float 0.400000
  154527973 = fsub float %228462, float 0.400000
  157528974 = fmul float %150526972, float %150526972
  160529975 = fmul float %154527973, float %154527973
  161530976 = fadd float %157528974, float %160529975
  28500537983 = si2f i32 8 to float
  29501538984 = fdiv float %161530976, float %28500537983
  30502539985 = fadd float %29501538984, float 0.500000
  33504541987 = fmul float %1371091, float %161530976
  35505542988 = si2f i32 4 to float
  36506543989 = fadd float %35505542988, float %161530976
  37507544990 = fdiv float %33504541987, float %36506543989
  38508545991 = fadd float %30502539985, float %37507544990
  br bb %scene.circle_sdf.my_sqrt.while.body998
trace.while.exit205467:  pred(trace.select.exit211474)
  br bb %sample.while.body255.split
trace.select.then209469:  pred(trace.while.cond203453)
  215470 = fcmp olt float %t201.phi455, float 2.000000
  br bb %trace.select.exit211474
trace.select.else210472:  pred(trace.while.cond203453)
  br bb %trace.select.exit211474
trace.select.exit211474:  pred(trace.select.then209469, trace.select.else210472)
  select212.phi475 = phi [bb %trace.select.else210472, i1 0, bb %trace.select.then209469, i1 %215470]
  br i1 %select212.phi475, bb %trace.while.body204458, bb %trace.while.exit205467
trace.then235477:  pred(scene.if.exit180964)
  238478 = ptradd ptr %ret451, i32 4
  238.load479 = load float from ptr %238478
  br bb %sample.while.body255.split
trace.if.exit236481:  pred(scene.if.exit180964)
  245483 = fadd float %t201.phi455, float %231.load464
  248484 = add i32 %i.phi454, i32 1
  br bb %trace.while.cond203453
my_sin.select.then693:  pred(my_cos.my_sin.if.exit1261132)
  br bb %my_sin.select.exit699
my_sin.select.else695:  pred(my_cos.my_sin.if.exit1261132)
  94696 = fneg float 6.283185
  95697 = fcmp olt float %276399, float %94696
  br bb %my_sin.select.exit699
my_sin.select.exit699:  pred(my_sin.select.then693, my_sin.select.else695)
  select.phi700 = phi [bb %my_sin.select.else695, i1 %95697, bb %my_sin.select.then693, i1 -1]
  br i1 %select.phi700, bb %my_sin.then98702, bb %my_sin.if.exit99709
my_sin.then98702:  pred(my_sin.select.exit699)
  103703 = fdiv float %276399, float 6.283185
  104704 = f2si float %103703 to i32
  109705 = si2f i32 %104704 to float
  110706 = fmul float %109705, float 6.283185
  111707 = fsub float %276399, float %110706
  br bb %my_sin.if.exit99709
my_sin.if.exit99709:  pred(my_sin.select.exit699, my_sin.then98702)
  x.stack84.phi369710 = phi [bb %my_sin.select.exit699, float %276399, bb %my_sin.then98702, float %111707]
  114711 = fcmp ogt float %x.stack84.phi369710, float 3.141593
  br i1 %114711, bb %my_sin.then115713, bb %my_sin.if.exit116716
my_sin.then115713:  pred(my_sin.if.exit99709)
  120714 = fsub float %x.stack84.phi369710, float 6.283185
  br bb %my_sin.if.exit116716
my_sin.if.exit116716:  pred(my_sin.if.exit99709, my_sin.then115713)
  x.stack84.phi368717 = phi [bb %my_sin.if.exit99709, float %x.stack84.phi369710, bb %my_sin.then115713, float %120714]
  124719 = fcmp olt float %x.stack84.phi368717, float %1236381126
  br i1 %124719, bb %my_sin.then125721, bb %my_sin.if.exit126724
my_sin.then125721:  pred(my_sin.if.exit116716)
  130722 = fadd float %x.stack84.phi368717, float 6.283185
  br bb %my_sin.if.exit126724
my_sin.if.exit126724:  pred(my_sin.if.exit116716, my_sin.then125721)
  x.stack84.phi725 = phi [bb %my_sin.if.exit116716, float %x.stack84.phi368717, bb %my_sin.then125721, float %130722]
  132726 = call float my_sin_impl(float %x.stack84.phi725)
  br bb %trace.while.cond203453
rand.then756:  pred(sample.while.body255)
  seed.load11757 = load i32 from ptr @seed
  12758 = add i32 %seed.load11757, i32 100000007
  store i32 %12758 to ptr @seed
  br bb %rand.if.exit761
rand.if.exit761:  pred(sample.while.body255, rand.then756)
  seed.load13762 = load i32 from ptr @seed
  263392 = si2f i32 %seed.load13762 to float
  269393 = si2f i32 100000006 to float
  270394 = fdiv float %263392, float %269393
  271395 = si2f i32 %i253.phi3861183 to float
  272396 = fadd float %271395, float %270394
  273397 = fmul float 6.283185, float %272396
  275398 = si2f i32 24 to float
  276399 = fdiv float %273397, float %275398
  1371091 = si2f i32 2 to float
  1381092 = fdiv float 3.141593, float %1371091
  1391093 = fadd float %276399, float %1381092
  876111099 = fcmp ogt float %1391093, float 6.283185
  br i1 %876111099, bb %my_cos.my_sin.select.then1101, bb %my_cos.my_sin.select.else1103
scene.then179959:  pred(scene.circle_sdf.my_sqrt.while.exit5951039)
  store float %164534980 to ptr %ret451
  187961 = ptradd ptr %ret451, i32 4
  store float 3.000000 to ptr %187961
  br bb %scene.if.exit180964
scene.if.exit180964:  pred(scene.then179959, scene.else966)
  231.load464 = load float from ptr %ret451
  234465 = fcmp olt float %231.load464, float 0.000001
  br i1 %234465, bb %trace.then235477, bb %trace.if.exit236481
scene.else966:  pred(scene.circle_sdf.my_sqrt.while.exit5951039)
  store float %1645711015 to ptr %ret451
  194968 = ptradd ptr %ret451, i32 4
  store float 0.000000 to ptr %194968
  br bb %scene.if.exit180964
scene.circle_sdf.my_sqrt.while.body998:  pred(scene.circle_sdf.my_sqrt.while.body998, trace.while.body204458)
  t.phi5125499951180 = phi [bb %scene.circle_sdf.my_sqrt.while.body998, float %525185551001, bb %trace.while.body204458, float %38508545991]
  c.phi5115489941179 = phi [bb %scene.circle_sdf.my_sqrt.while.body998, i32 %555195561002, bb %trace.while.body204458, i32 10]
  49516553999 = fdiv float %161530976, float %t.phi5125499951180
  505175541000 = fadd float %t.phi5125499951180, float %49516553999
  525185551001 = fdiv float %505175541000, float %1371091
  555195561002 = sub i32 %c.phi5115489941179, i32 1
  44513550996 = icmp ne i32 %555195561002, i32 0
  br i1 %44513550996, bb %scene.circle_sdf.my_sqrt.while.body998, bb %scene.circle_sdf.my_sqrt.while.exit1004
scene.circle_sdf.my_sqrt.while.exit1004:  pred(scene.circle_sdf.my_sqrt.while.body998)
  385085459911178 = phi [bb %scene.circle_sdf.my_sqrt.while.body998, float %525185551001]
  164534980 = fsub float %385085459911178, float 0.100000
  1505631007 = fsub float %223460, float 0.600000
  1545641008 = fsub float %228462, float 0.600000
  1575651009 = fmul float %1505631007, float %1505631007
  1605661010 = fmul float %1545641008, float %1545641008
  1615671011 = fadd float %1575651009, float %1605661010
  295015751019 = fdiv float %1615671011, float %28500537983
  305025761020 = fadd float %295015751019, float 0.500000
  335045781022 = fmul float %1371091, float %1615671011
  365065801024 = fadd float %35505542988, float %1615671011
  375075811025 = fdiv float %335045781022, float %365065801024
  385085821026 = fadd float %305025761020, float %375075811025
  br bb %scene.circle_sdf.my_sqrt.while.body5891033
scene.circle_sdf.my_sqrt.while.body5891033:  pred(scene.circle_sdf.my_sqrt.while.body5891033, scene.circle_sdf.my_sqrt.while.exit1004)
  t.phi51258610301176 = phi [bb %scene.circle_sdf.my_sqrt.while.body5891033, float %525185921036, bb %scene.circle_sdf.my_sqrt.while.exit1004, float %385085821026]
  c.phi51158510291175 = phi [bb %scene.circle_sdf.my_sqrt.while.body5891033, i32 %555195931037, bb %scene.circle_sdf.my_sqrt.while.exit1004, i32 10]
  495165901034 = fdiv float %1615671011, float %t.phi51258610301176
  505175911035 = fadd float %t.phi51258610301176, float %495165901034
  525185921036 = fdiv float %505175911035, float %1371091
  555195931037 = sub i32 %c.phi51158510291175, i32 1
  445135871031 = icmp ne i32 %555195931037, i32 0
  br i1 %445135871031, bb %scene.circle_sdf.my_sqrt.while.body5891033, bb %scene.circle_sdf.my_sqrt.while.exit5951039
scene.circle_sdf.my_sqrt.while.exit5951039:  pred(scene.circle_sdf.my_sqrt.while.body5891033)
  3850858210261174 = phi [bb %scene.circle_sdf.my_sqrt.while.body5891033, float %525185921036]
  1645711015 = fsub float %3850858210261174, float 0.050000
  178957 = fcmp olt float %164534980, float %1645711015
  br i1 %178957, bb %scene.then179959, bb %scene.else966
my_cos.my_sin.select.then1101:  pred(rand.if.exit761)
  br bb %my_cos.my_sin.select.exit1107
my_cos.my_sin.select.else1103:  pred(rand.if.exit761)
  946161104 = fneg float 6.283185
  956171105 = fcmp olt float %1391093, float %946161104
  br bb %my_cos.my_sin.select.exit1107
my_cos.my_sin.select.exit1107:  pred(my_cos.my_sin.select.then1101, my_cos.my_sin.select.else1103)
  select.phi6201108 = phi [bb %my_cos.my_sin.select.else1103, i1 %956171105, bb %my_cos.my_sin.select.then1101, i1 -1]
  br i1 %select.phi6201108, bb %my_cos.my_sin.then981110, bb %my_cos.my_sin.if.exit991117
my_cos.my_sin.then981110:  pred(my_cos.my_sin.select.exit1107)
  1036231111 = fdiv float %1391093, float 6.283185
  1046241112 = f2si float %1036231111 to i32
  1096251113 = si2f i32 %1046241112 to float
  1106261114 = fmul float %1096251113, float 6.283185
  1116271115 = fsub float %1391093, float %1106261114
  br bb %my_cos.my_sin.if.exit991117
my_cos.my_sin.if.exit991117:  pred(my_cos.my_sin.select.exit1107, my_cos.my_sin.then981110)
  x.stack84.phi3696301118 = phi [bb %my_cos.my_sin.select.exit1107, float %1391093, bb %my_cos.my_sin.then981110, float %1116271115]
  1146311119 = fcmp ogt float %x.stack84.phi3696301118, float 3.141593
  br i1 %1146311119, bb %my_cos.my_sin.then1151121, bb %my_cos.my_sin.if.exit1161124
my_cos.my_sin.then1151121:  pred(my_cos.my_sin.if.exit991117)
  1206341122 = fsub float %x.stack84.phi3696301118, float 6.283185
  br bb %my_cos.my_sin.if.exit1161124
my_cos.my_sin.if.exit1161124:  pred(my_cos.my_sin.if.exit991117, my_cos.my_sin.then1151121)
  x.stack84.phi3686371125 = phi [bb %my_cos.my_sin.if.exit991117, float %x.stack84.phi3696301118, bb %my_cos.my_sin.then1151121, float %1206341122]
  1236381126 = fneg float 3.141593
  1246391127 = fcmp olt float %x.stack84.phi3686371125, float %1236381126
  br i1 %1246391127, bb %my_cos.my_sin.then1251129, bb %my_cos.my_sin.if.exit1261132
my_cos.my_sin.then1251129:  pred(my_cos.my_sin.if.exit1161124)
  1306421130 = fadd float %x.stack84.phi3686371125, float 6.283185
  br bb %my_cos.my_sin.if.exit1261132
my_cos.my_sin.if.exit1261132:  pred(my_cos.my_sin.if.exit1161124, my_cos.my_sin.then1251129)
  x.stack84.phi6451133 = phi [bb %my_cos.my_sin.if.exit1161124, float %x.stack84.phi3686371125, bb %my_cos.my_sin.then1251129, float %1306421130]
  1326461134 = call float my_sin_impl(float %x.stack84.phi6451133)
  87691 = fcmp ogt float %276399, float 6.283185
  br i1 %87691, bb %my_sin.select.then693, bb %my_sin.select.else695
}

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


