immutable global ptr TWO_PI init with float 6.283185
immutable global ptr EPSILON init with float 0.000001
immutable global ptr PI init with float 3.141593
global ptr test_idct init with 64 x float zeros
global ptr test_dct init with 64 x float zeros
global ptr test_block init with 64 x float zeros
immutable global ptr MAX_DIM_Y init with i32 8
immutable global ptr MAX_DIM_X init with i32 8
void idct(ptr mat, ptr dct_mat, i32 n, i32 m) {
entry231:
  br bb %while.cond235
while.cond235:
  j265.phi476 = phi [bb %entry231, i32 ub, bb %while.exit245, i32 %j265.phi475]
  i264.phi471 = phi [bb %entry231, i32 ub, bb %while.exit245, i32 %i264.phi470]
  u234.phi = phi [bb %entry231, i32 0, bb %while.exit245, i32 %421]
  240 = icmp slt i32 %u234.phi, i32 %n
  br i1 %240, bb %while.body236, bb %while.exit237
while.body236:
  br bb %while.cond243
while.exit237:
  ret 
while.cond243:
  j265.phi475 = phi [bb %while.body236, i32 %j265.phi476, bb %while.exit332, i32 %j265.phi474]
  i264.phi470 = phi [bb %while.body236, i32 %i264.phi471, bb %while.exit332, i32 %i264.phi]
  v242.phi = phi [bb %while.body236, i32 0, bb %while.exit332, i32 %419]
  248 = icmp slt i32 %v242.phi, i32 %m
  br i1 %248, bb %while.body244, bb %while.exit245
while.body244:
  499 = shl i32 %u234.phi, i32 5
  252 = ptradd ptr %mat, i32 %499
  500 = shl i32 %v242.phi, i32 2
  255 = ptradd ptr %252, i32 %500
  256 = si2f i32 1 to float
  257 = fdiv float %256, float 4.000000
  261.load = load float from ptr %dct_mat
  263 = fmul float %257, float %261.load
  store float %263 to ptr %255
  br bb %while.cond266
while.exit245:
  421 = add i32 %u234.phi, i32 1
  br bb %while.cond235
while.cond266:
  i264.phi472 = phi [bb %while.body244, i32 1, bb %while.body267, i32 %297]
  271 = icmp slt i32 %i264.phi472, i32 %n
  br i1 %271, bb %while.body267, bb %while.exit268
while.body267:
  284.load = load float from ptr %255
  287 = fdiv float %256, float 2.000000
  505 = shl i32 %i264.phi472, i32 5
  290 = ptradd ptr %dct_mat, i32 %505
  292.load = load float from ptr %290
  294 = fmul float %287, float %292.load
  295 = fadd float %284.load, float %294
  store float %295 to ptr %255
  297 = add i32 %i264.phi472, i32 1
  br bb %while.cond266
while.exit268:
  br bb %while.cond298
while.cond298:
  j265.phi477 = phi [bb %while.exit268, i32 1, bb %while.body299, i32 %329]
  303 = icmp slt i32 %j265.phi477, i32 %m
  br i1 %303, bb %while.body299, bb %while.exit300
while.body299:
  316.load = load float from ptr %255
  319 = fdiv float %256, float 2.000000
  510 = shl i32 %j265.phi477, i32 2
  324 = ptradd ptr %dct_mat, i32 %510
  324.load = load float from ptr %324
  326 = fmul float %319, float %324.load
  327 = fadd float %316.load, float %326
  store float %327 to ptr %255
  329 = add i32 %j265.phi477, i32 1
  br bb %while.cond298
while.exit300:
  br bb %while.cond330
while.cond330:
  j265.phi474 = phi [bb %while.exit300, i32 %j265.phi477, bb %while.exit339, i32 %j265.phi]
  i264.phi = phi [bb %while.exit300, i32 1, bb %while.exit339, i32 %396]
  335 = icmp slt i32 %i264.phi, i32 %n
  br i1 %335, bb %while.body331, bb %while.exit332
while.body331:
  br bb %while.cond337
while.exit332:
  408.load = load float from ptr %255
  410 = fmul float %408.load, float 2.000000
  412 = si2f i32 %n to float
  413 = fdiv float %410, float %412
  414 = fmul float %413, float 2.000000
  416 = si2f i32 %m to float
  417 = fdiv float %414, float %416
  store float %417 to ptr %255
  419 = add i32 %v242.phi, i32 1
  br bb %while.cond243
while.cond337:
  j265.phi = phi [bb %while.body331, i32 1, bb %my_cos.my_sin.if.exit771035, i32 %394]
  342 = icmp slt i32 %j265.phi, i32 %m
  br i1 %342, bb %while.body338, bb %while.exit339
while.body338:
  355.load = load float from ptr %255
  519 = shl i32 %i264.phi, i32 5
  359 = ptradd ptr %dct_mat, i32 %519
  520 = shl i32 %j265.phi, i32 2
  362 = ptradd ptr %359, i32 %520
  362.load = load float from ptr %362
  366 = si2f i32 %n to float
  367 = fdiv float 3.141593, float %366
  369 = fdiv float 1.000000, float 2.000000
  370 = si2f i32 %u234.phi to float
  371 = fadd float %370, float %369
  372 = fmul float %367, float %371
  374 = si2f i32 %i264.phi to float
  375 = fmul float %372, float %374
  87946 = si2f i32 2 to float
  88947 = fdiv float 3.141593, float %87946
  89948 = fadd float %375, float %88947
  40746954 = fcmp ogt float %89948, float 6.283185
  br i1 %40746954, bb %my_cos.my_sin.select.then956, bb %my_cos.my_sin.select.else958
while.exit339:
  396 = add i32 %i264.phi, i32 1
  br bb %while.cond330
my_cos.my_sin.select.then956:
  br bb %my_cos.my_sin.select.exit962
my_cos.my_sin.select.else958:
  47751959 = fneg float 6.283185
  48752960 = fcmp olt float %89948, float %47751959
  br bb %my_cos.my_sin.select.exit962
my_cos.my_sin.select.exit962:
  select.phi755963 = phi [bb %my_cos.my_sin.select.else958, i1 %48752960, bb %my_cos.my_sin.select.then956, i1 -1]
  br i1 %select.phi755963, bb %my_cos.my_sin.then51965, bb %my_cos.my_sin.if.exit52972
my_cos.my_sin.then51965:
  56758966 = fdiv float %89948, float 6.283185
  57759967 = f2si float %56758966 to i32
  61760968 = si2f i32 %57759967 to float
  62761969 = fmul float %61760968, float 6.283185
  63762970 = fsub float %89948, float %62761969
  br bb %my_cos.my_sin.if.exit52972
my_cos.my_sin.if.exit52972:
  x.stack37.phi490765973 = phi [bb %my_cos.my_sin.select.exit962, float %89948, bb %my_cos.my_sin.then51965, float %63762970]
  66766974 = fcmp ogt float %x.stack37.phi490765973, float 3.141593
  br i1 %66766974, bb %my_cos.my_sin.then67976, bb %my_cos.my_sin.if.exit68979
my_cos.my_sin.then67976:
  71769977 = fsub float %x.stack37.phi490765973, float 6.283185
  br bb %my_cos.my_sin.if.exit68979
my_cos.my_sin.if.exit68979:
  x.stack37.phi489772980 = phi [bb %my_cos.my_sin.if.exit52972, float %x.stack37.phi490765973, bb %my_cos.my_sin.then67976, float %71769977]
  74773981 = fneg float 3.141593
  75774982 = fcmp olt float %x.stack37.phi489772980, float %74773981
  br i1 %75774982, bb %my_cos.my_sin.then76984, bb %my_cos.my_sin.if.exit77987
my_cos.my_sin.then76984:
  80777985 = fadd float %x.stack37.phi489772980, float 6.283185
  br bb %my_cos.my_sin.if.exit77987
my_cos.my_sin.if.exit77987:
  x.stack37.phi780988 = phi [bb %my_cos.my_sin.if.exit68979, float %x.stack37.phi489772980, bb %my_cos.my_sin.then76984, float %80777985]
  82781989 = call float my_sin_impl(float %x.stack37.phi780988)
  377 = fmul float %362.load, float %82781989
  380 = si2f i32 %m to float
  381 = fdiv float 3.141593, float %380
  384 = si2f i32 %v242.phi to float
  385 = fadd float %384, float %369
  386 = fmul float %381, float %385
  388 = si2f i32 %j265.phi to float
  389 = fmul float %386, float %388
  89996 = fadd float %389, float %88947
  407461002 = fcmp ogt float %89996, float 6.283185
  br i1 %407461002, bb %my_cos.my_sin.select.then1004, bb %my_cos.my_sin.select.else1006
my_cos.my_sin.select.then1004:
  br bb %my_cos.my_sin.select.exit1010
my_cos.my_sin.select.else1006:
  477511007 = fneg float 6.283185
  487521008 = fcmp olt float %89996, float %477511007
  br bb %my_cos.my_sin.select.exit1010
my_cos.my_sin.select.exit1010:
  select.phi7551011 = phi [bb %my_cos.my_sin.select.else1006, i1 %487521008, bb %my_cos.my_sin.select.then1004, i1 -1]
  br i1 %select.phi7551011, bb %my_cos.my_sin.then511013, bb %my_cos.my_sin.if.exit521020
my_cos.my_sin.then511013:
  567581014 = fdiv float %89996, float 6.283185
  577591015 = f2si float %567581014 to i32
  617601016 = si2f i32 %577591015 to float
  627611017 = fmul float %617601016, float 6.283185
  637621018 = fsub float %89996, float %627611017
  br bb %my_cos.my_sin.if.exit521020
my_cos.my_sin.if.exit521020:
  x.stack37.phi4907651021 = phi [bb %my_cos.my_sin.select.exit1010, float %89996, bb %my_cos.my_sin.then511013, float %637621018]
  667661022 = fcmp ogt float %x.stack37.phi4907651021, float 3.141593
  br i1 %667661022, bb %my_cos.my_sin.then671024, bb %my_cos.my_sin.if.exit681027
my_cos.my_sin.then671024:
  717691025 = fsub float %x.stack37.phi4907651021, float 6.283185
  br bb %my_cos.my_sin.if.exit681027
my_cos.my_sin.if.exit681027:
  x.stack37.phi4897721028 = phi [bb %my_cos.my_sin.if.exit521020, float %x.stack37.phi4907651021, bb %my_cos.my_sin.then671024, float %717691025]
  757741030 = fcmp olt float %x.stack37.phi4897721028, float %74773981
  br i1 %757741030, bb %my_cos.my_sin.then761032, bb %my_cos.my_sin.if.exit771035
my_cos.my_sin.then761032:
  807771033 = fadd float %x.stack37.phi4897721028, float 6.283185
  br bb %my_cos.my_sin.if.exit771035
my_cos.my_sin.if.exit771035:
  x.stack37.phi7801036 = phi [bb %my_cos.my_sin.if.exit681027, float %x.stack37.phi4897721028, bb %my_cos.my_sin.then761032, float %807771033]
  827811037 = call float my_sin_impl(float %x.stack37.phi7801036)
  391 = fmul float %377, float %827811037
  392 = fadd float %355.load, float %391
  store float %392 to ptr %255
  394 = add i32 %j265.phi, i32 1
  br bb %while.cond337
}

float my_sin_impl(float x) {
entry23:
  31234 = si2f i32 0 to float
  41235 = fcmp ogt float %x, float %31234
  br i1 %41235, bb %my_fabs.then, bb %my_fabs.if.exit
entry23.split:
  26.ret = phi [bb %my_fabs.then, float %x, bb %my_fabs.if.exit, float %91240]
  28 = fcmp ole float %26.ret, float 0.000001
  br i1 %28, bb %then29, bb %if.exit30
then29:
  ret float %x
if.exit30:
  33 = fdiv float %x, float 3.000000
  34 = call float my_sin_impl(float %33)
  13658 = si2f i32 3 to float
  14659 = fmul float %13658, float %34
  16660 = si2f i32 4 to float
  17661 = fmul float %16660, float %34
  19662 = fmul float %17661, float %34
  21663 = fmul float %19662, float %34
  22664 = fsub float %14659, float %21663
  ret float %22664
my_fabs.then:
  br bb %entry23.split
my_fabs.if.exit:
  91240 = fneg float %x
  br bb %entry23.split
}

pure float p(float x) {
entry10:
  13 = si2f i32 3 to float
  14 = fmul float %13, float %x
  16 = si2f i32 4 to float
  17 = fmul float %16, float %x
  19 = fmul float %17, float %x
  21 = fmul float %19, float %x
  22 = fsub float %14, float %21
  ret float %22
}

void dct(ptr dct_mat, ptr mat, i32 n, i32 m) {
entry132:
  br bb %while.cond136
while.cond136:
  j166.phi487 = phi [bb %entry132, i32 ub, bb %while.exit146, i32 %j166.phi486]
  i158.phi483 = phi [bb %entry132, i32 ub, bb %while.exit146, i32 %i158.phi482]
  u.phi = phi [bb %entry132, i32 0, bb %while.exit146, i32 %230]
  141 = icmp slt i32 %u.phi, i32 %n
  br i1 %141, bb %while.body137, bb %while.exit138
while.body137:
  br bb %while.cond144
while.exit138:
  ret 
while.cond144:
  j166.phi486 = phi [bb %while.body137, i32 %j166.phi487, bb %while.exit161, i32 %j166.phi485]
  i158.phi482 = phi [bb %while.body137, i32 %i158.phi483, bb %while.exit161, i32 %i158.phi]
  v.phi = phi [bb %while.body137, i32 0, bb %while.exit161, i32 %228]
  149 = icmp slt i32 %v.phi, i32 %m
  br i1 %149, bb %while.body145, bb %while.exit146
while.body145:
  521 = shl i32 %u.phi, i32 5
  153 = ptradd ptr %dct_mat, i32 %521
  522 = shl i32 %v.phi, i32 2
  156 = ptradd ptr %153, i32 %522
  157 = si2f i32 0 to float
  store float %157 to ptr %156
  br bb %while.cond159
while.exit146:
  230 = add i32 %u.phi, i32 1
  br bb %while.cond136
while.cond159:
  j166.phi485 = phi [bb %while.body145, i32 %j166.phi486, bb %while.exit169, i32 %j166.phi]
  i158.phi = phi [bb %while.body145, i32 0, bb %while.exit169, i32 %226]
  164 = icmp slt i32 %i158.phi, i32 %n
  br i1 %164, bb %while.body160, bb %while.exit161
while.body160:
  br bb %while.cond167
while.exit161:
  228 = add i32 %v.phi, i32 1
  br bb %while.cond144
while.cond167:
  j166.phi = phi [bb %while.body160, i32 0, bb %my_cos.my_sin.if.exit77939, i32 %224]
  172 = icmp slt i32 %j166.phi, i32 %m
  br i1 %172, bb %while.body168, bb %while.exit169
while.body168:
  185.load = load float from ptr %156
  527 = shl i32 %i158.phi, i32 5
  189 = ptradd ptr %mat, i32 %527
  528 = shl i32 %j166.phi, i32 2
  192 = ptradd ptr %189, i32 %528
  192.load = load float from ptr %192
  196 = si2f i32 %n to float
  197 = fdiv float 3.141593, float %196
  199 = fdiv float 1.000000, float 2.000000
  200 = si2f i32 %i158.phi to float
  201 = fadd float %200, float %199
  202 = fmul float %197, float %201
  204 = si2f i32 %u.phi to float
  205 = fmul float %202, float %204
  87850 = si2f i32 2 to float
  88851 = fdiv float 3.141593, float %87850
  89852 = fadd float %205, float %88851
  40746858 = fcmp ogt float %89852, float 6.283185
  br i1 %40746858, bb %my_cos.my_sin.select.then, bb %my_cos.my_sin.select.else
while.exit169:
  226 = add i32 %i158.phi, i32 1
  br bb %while.cond159
my_cos.my_sin.select.then:
  br bb %my_cos.my_sin.select.exit
my_cos.my_sin.select.else:
  47751863 = fneg float 6.283185
  48752864 = fcmp olt float %89852, float %47751863
  br bb %my_cos.my_sin.select.exit
my_cos.my_sin.select.exit:
  select.phi755867 = phi [bb %my_cos.my_sin.select.else, i1 %48752864, bb %my_cos.my_sin.select.then, i1 -1]
  br i1 %select.phi755867, bb %my_cos.my_sin.then51, bb %my_cos.my_sin.if.exit52
my_cos.my_sin.then51:
  56758870 = fdiv float %89852, float 6.283185
  57759871 = f2si float %56758870 to i32
  61760872 = si2f i32 %57759871 to float
  62761873 = fmul float %61760872, float 6.283185
  63762874 = fsub float %89852, float %62761873
  br bb %my_cos.my_sin.if.exit52
my_cos.my_sin.if.exit52:
  x.stack37.phi490765877 = phi [bb %my_cos.my_sin.select.exit, float %89852, bb %my_cos.my_sin.then51, float %63762874]
  66766878 = fcmp ogt float %x.stack37.phi490765877, float 3.141593
  br i1 %66766878, bb %my_cos.my_sin.then67, bb %my_cos.my_sin.if.exit68
my_cos.my_sin.then67:
  71769881 = fsub float %x.stack37.phi490765877, float 6.283185
  br bb %my_cos.my_sin.if.exit68
my_cos.my_sin.if.exit68:
  x.stack37.phi489772884 = phi [bb %my_cos.my_sin.if.exit52, float %x.stack37.phi490765877, bb %my_cos.my_sin.then67, float %71769881]
  74773885 = fneg float 3.141593
  75774886 = fcmp olt float %x.stack37.phi489772884, float %74773885
  br i1 %75774886, bb %my_cos.my_sin.then76, bb %my_cos.my_sin.if.exit77
my_cos.my_sin.then76:
  80777889 = fadd float %x.stack37.phi489772884, float 6.283185
  br bb %my_cos.my_sin.if.exit77
my_cos.my_sin.if.exit77:
  x.stack37.phi780892 = phi [bb %my_cos.my_sin.if.exit68, float %x.stack37.phi489772884, bb %my_cos.my_sin.then76, float %80777889]
  82781893 = call float my_sin_impl(float %x.stack37.phi780892)
  207 = fmul float %192.load, float %82781893
  210 = si2f i32 %m to float
  211 = fdiv float 3.141593, float %210
  214 = si2f i32 %j166.phi to float
  215 = fadd float %214, float %199
  216 = fmul float %211, float %215
  218 = si2f i32 %v.phi to float
  219 = fmul float %216, float %218
  89900 = fadd float %219, float %88851
  40746906 = fcmp ogt float %89900, float 6.283185
  br i1 %40746906, bb %my_cos.my_sin.select.then908, bb %my_cos.my_sin.select.else910
my_cos.my_sin.select.then908:
  br bb %my_cos.my_sin.select.exit914
my_cos.my_sin.select.else910:
  47751911 = fneg float 6.283185
  48752912 = fcmp olt float %89900, float %47751911
  br bb %my_cos.my_sin.select.exit914
my_cos.my_sin.select.exit914:
  select.phi755915 = phi [bb %my_cos.my_sin.select.else910, i1 %48752912, bb %my_cos.my_sin.select.then908, i1 -1]
  br i1 %select.phi755915, bb %my_cos.my_sin.then51917, bb %my_cos.my_sin.if.exit52924
my_cos.my_sin.then51917:
  56758918 = fdiv float %89900, float 6.283185
  57759919 = f2si float %56758918 to i32
  61760920 = si2f i32 %57759919 to float
  62761921 = fmul float %61760920, float 6.283185
  63762922 = fsub float %89900, float %62761921
  br bb %my_cos.my_sin.if.exit52924
my_cos.my_sin.if.exit52924:
  x.stack37.phi490765925 = phi [bb %my_cos.my_sin.select.exit914, float %89900, bb %my_cos.my_sin.then51917, float %63762922]
  66766926 = fcmp ogt float %x.stack37.phi490765925, float 3.141593
  br i1 %66766926, bb %my_cos.my_sin.then67928, bb %my_cos.my_sin.if.exit68931
my_cos.my_sin.then67928:
  71769929 = fsub float %x.stack37.phi490765925, float 6.283185
  br bb %my_cos.my_sin.if.exit68931
my_cos.my_sin.if.exit68931:
  x.stack37.phi489772932 = phi [bb %my_cos.my_sin.if.exit52924, float %x.stack37.phi490765925, bb %my_cos.my_sin.then67928, float %71769929]
  75774934 = fcmp olt float %x.stack37.phi489772932, float %74773885
  br i1 %75774934, bb %my_cos.my_sin.then76936, bb %my_cos.my_sin.if.exit77939
my_cos.my_sin.then76936:
  80777937 = fadd float %x.stack37.phi489772932, float 6.283185
  br bb %my_cos.my_sin.if.exit77939
my_cos.my_sin.if.exit77939:
  x.stack37.phi780940 = phi [bb %my_cos.my_sin.if.exit68931, float %x.stack37.phi489772932, bb %my_cos.my_sin.then76936, float %80777937]
  82781941 = call float my_sin_impl(float %x.stack37.phi780940)
  221 = fmul float %207, float %82781941
  222 = fadd float %185.load, float %221
  store float %222 to ptr %156
  224 = add i32 %j166.phi, i32 1
  br bb %while.cond167
}

float my_sin(float x) {
entry36:
  40 = fcmp ogt float %x, float 6.283185
  br i1 %40, bb %select.then, bb %select.else
select.then:
  br bb %select.exit
select.else:
  47 = fneg float 6.283185
  48 = fcmp olt float %x, float %47
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 %48, bb %select.then, i1 -1]
  br i1 %select.phi, bb %then51, bb %if.exit52
then51:
  56 = fdiv float %x, float 6.283185
  57 = f2si float %56 to i32
  61 = si2f i32 %57 to float
  62 = fmul float %61, float 6.283185
  63 = fsub float %x, float %62
  br bb %if.exit52
if.exit52:
  x.stack37.phi490 = phi [bb %select.exit, float %x, bb %then51, float %63]
  66 = fcmp ogt float %x.stack37.phi490, float 3.141593
  br i1 %66, bb %then67, bb %if.exit68
then67:
  71 = fsub float %x.stack37.phi490, float 6.283185
  br bb %if.exit68
if.exit68:
  x.stack37.phi489 = phi [bb %if.exit52, float %x.stack37.phi490, bb %then67, float %71]
  74 = fneg float 3.141593
  75 = fcmp olt float %x.stack37.phi489, float %74
  br i1 %75, bb %then76, bb %if.exit77
then76:
  80 = fadd float %x.stack37.phi489, float 6.283185
  br bb %if.exit77
if.exit77:
  x.stack37.phi = phi [bb %if.exit68, float %x.stack37.phi489, bb %then76, float %80]
  82 = call float my_sin_impl(float %x.stack37.phi)
  ret float %82
}

external i32 getint()

external i32 getch()

external void putint(i32 )

void write_mat(ptr mat, i32 n, i32 m) {
entry91:
  br bb %while.cond
while.cond:
  i.phi = phi [bb %entry91, i32 0, bb %while.exit112, i32 %130]
  100 = icmp slt i32 %i.phi, i32 %n
  br i1 %100, bb %while.body, bb %while.exit
while.body:
  529 = shl i32 %i.phi, i32 5
  104 = ptradd ptr %mat, i32 %529
  106.load = load float from ptr %104
  call void putfloat(float %106.load)
  br bb %while.cond110
while.exit:
  call void putch(i32 10)
  ret 
while.cond110:
  j.phi = phi [bb %while.body, i32 1, bb %while.body111, i32 %127]
  115 = icmp slt i32 %j.phi, i32 %m
  br i1 %115, bb %while.body111, bb %while.exit112
while.body111:
  call void putch(i32 32)
  531 = shl i32 %j.phi, i32 2
  123 = ptradd ptr %104, i32 %531
  123.load = load float from ptr %123
  call void putfloat(float %123.load)
  127 = add i32 %j.phi, i32 1
  br bb %while.cond110
while.exit112:
  call void putch(i32 10)
  130 = add i32 %i.phi, i32 1
  br bb %while.cond
}

external i32 getarray(ptr )

float my_cos(float x) {
entry83:
  87 = si2f i32 2 to float
  88 = fdiv float 3.141593, float %87
  89 = fadd float %x, float %88
  40746 = fcmp ogt float %89, float 6.283185
  br i1 %40746, bb %my_sin.select.then, bb %my_sin.select.else
my_sin.select.then:
  br bb %my_sin.select.exit
my_sin.select.else:
  47751 = fneg float 6.283185
  48752 = fcmp olt float %89, float %47751
  br bb %my_sin.select.exit
my_sin.select.exit:
  select.phi755 = phi [bb %my_sin.select.else, i1 %48752, bb %my_sin.select.then, i1 -1]
  br i1 %select.phi755, bb %my_sin.then51, bb %my_sin.if.exit52
my_sin.then51:
  56758 = fdiv float %89, float 6.283185
  57759 = f2si float %56758 to i32
  61760 = si2f i32 %57759 to float
  62761 = fmul float %61760, float 6.283185
  63762 = fsub float %89, float %62761
  br bb %my_sin.if.exit52
my_sin.if.exit52:
  x.stack37.phi490765 = phi [bb %my_sin.select.exit, float %89, bb %my_sin.then51, float %63762]
  66766 = fcmp ogt float %x.stack37.phi490765, float 3.141593
  br i1 %66766, bb %my_sin.then67, bb %my_sin.if.exit68
my_sin.then67:
  71769 = fsub float %x.stack37.phi490765, float 6.283185
  br bb %my_sin.if.exit68
my_sin.if.exit68:
  x.stack37.phi489772 = phi [bb %my_sin.if.exit52, float %x.stack37.phi490765, bb %my_sin.then67, float %71769]
  74773 = fneg float 3.141593
  75774 = fcmp olt float %x.stack37.phi489772, float %74773
  br i1 %75774, bb %my_sin.then76, bb %my_sin.if.exit77
my_sin.then76:
  80777 = fadd float %x.stack37.phi489772, float 6.283185
  br bb %my_sin.if.exit77
my_sin.if.exit77:
  x.stack37.phi780 = phi [bb %my_sin.if.exit68, float %x.stack37.phi489772, bb %my_sin.then76, float %80777]
  82781 = call float my_sin_impl(float %x.stack37.phi780)
  ret float %82781
}

external i32 getfarray(ptr )

i32 main() {
entry422:
  424 = call i32 getint()
  426 = call i32 getint()
  br bb %while.cond428
while.cond428:
  i427.phi = phi [bb %entry422, i32 0, bb %while.exit438, i32 %453]
  433 = icmp slt i32 %i427.phi, i32 %424
  br i1 %433, bb %while.body429, bb %while.exit430
while.body429:
  br bb %while.cond436
while.exit430:
  br bb %dct.while.cond136
while.cond436:
  j435.phi = phi [bb %while.body429, i32 0, bb %while.body437, i32 %451]
  441 = icmp slt i32 %j435.phi, i32 %426
  br i1 %441, bb %while.body437, bb %while.exit438
while.body437:
  532 = shl i32 %i427.phi, i32 5
  445 = ptradd ptr @test_block, i32 %532
  533 = shl i32 %j435.phi, i32 2
  448 = ptradd ptr %445, i32 %533
  449 = call float getfloat()
  store float %449 to ptr %448
  451 = add i32 %j435.phi, i32 1
  br bb %while.cond436
while.exit438:
  453 = add i32 %i427.phi, i32 1
  br bb %while.cond428
idct.while.cond235:
  j265.phi476538 = phi [bb %write_mat.while.exit, i32 ub, bb %idct.while.exit245, i32 %j265.phi475548]
  i264.phi471539 = phi [bb %write_mat.while.exit, i32 ub, bb %idct.while.exit245, i32 %i264.phi470549]
  u234.phi540 = phi [bb %write_mat.while.exit, i32 0, bb %idct.while.exit245, i32 %421565]
  240541 = icmp slt i32 %u234.phi540, i32 %424
  br i1 %240541, bb %idct.while.body236, bb %idct.while.exit237
idct.while.body236:
  br bb %idct.while.cond243
idct.while.exit237:
  br bb %write_mat.while.cond819
idct.while.cond243:
  j265.phi475548 = phi [bb %idct.while.body236, i32 %j265.phi476538, bb %idct.while.exit332, i32 %j265.phi474602]
  i264.phi470549 = phi [bb %idct.while.body236, i32 %i264.phi471539, bb %idct.while.exit332, i32 %i264.phi603]
  v242.phi550 = phi [bb %idct.while.body236, i32 0, bb %idct.while.exit332, i32 %419617]
  248551 = icmp slt i32 %v242.phi550, i32 %426
  br i1 %248551, bb %idct.while.body244, bb %idct.while.exit245
idct.while.body244:
  499554 = shl i32 %u234.phi540, i32 5
  252555 = ptradd ptr @test_idct, i32 %499554
  500556 = shl i32 %v242.phi550, i32 2
  255557 = ptradd ptr %252555, i32 %500556
  256558 = si2f i32 1 to float
  257559 = fdiv float %256558, float 4.000000
  261.load560 = load float from ptr @test_dct
  263561 = fmul float %257559, float %261.load560
  store float %263561 to ptr %255557
  br bb %idct.while.cond266
idct.while.exit245:
  421565 = add i32 %u234.phi540, i32 1
  br bb %idct.while.cond235
idct.while.cond266:
  i264.phi472568 = phi [bb %idct.while.body244, i32 1, bb %idct.while.body267, i32 %297580]
  271569 = icmp slt i32 %i264.phi472568, i32 %424
  br i1 %271569, bb %idct.while.body267, bb %idct.while.exit268
idct.while.body267:
  284.load572 = load float from ptr %255557
  287573 = fdiv float %256558, float 2.000000
  505574 = shl i32 %i264.phi472568, i32 5
  290575 = ptradd ptr @test_dct, i32 %505574
  292.load576 = load float from ptr %290575
  294577 = fmul float %287573, float %292.load576
  295578 = fadd float %284.load572, float %294577
  store float %295578 to ptr %255557
  297580 = add i32 %i264.phi472568, i32 1
  br bb %idct.while.cond266
idct.while.exit268:
  br bb %idct.while.cond298
idct.while.cond298:
  j265.phi477585 = phi [bb %idct.while.exit268, i32 1, bb %idct.while.body299, i32 %329597]
  303586 = icmp slt i32 %j265.phi477585, i32 %426
  br i1 %303586, bb %idct.while.body299, bb %idct.while.exit300
idct.while.body299:
  316.load589 = load float from ptr %255557
  319590 = fdiv float %256558, float 2.000000
  510591 = shl i32 %j265.phi477585, i32 2
  324592 = ptradd ptr @test_dct, i32 %510591
  324.load593 = load float from ptr %324592
  326594 = fmul float %319590, float %324.load593
  327595 = fadd float %316.load589, float %326594
  store float %327595 to ptr %255557
  329597 = add i32 %j265.phi477585, i32 1
  br bb %idct.while.cond298
idct.while.exit300:
  br bb %idct.while.cond330
idct.while.cond330:
  j265.phi474602 = phi [bb %idct.while.exit300, i32 %j265.phi477585, bb %idct.while.exit339, i32 %j265.phi620]
  i264.phi603 = phi [bb %idct.while.exit300, i32 1, bb %idct.while.exit339, i32 %396654]
  335604 = icmp slt i32 %i264.phi603, i32 %424
  br i1 %335604, bb %idct.while.body331, bb %idct.while.exit332
idct.while.body331:
  br bb %idct.while.cond337
idct.while.exit332:
  408.load609 = load float from ptr %255557
  410610 = fmul float %408.load609, float 2.000000
  412611 = si2f i32 %424 to float
  413612 = fdiv float %410610, float %412611
  414613 = fmul float %413612, float 2.000000
  416614 = si2f i32 %426 to float
  417615 = fdiv float %414613, float %416614
  store float %417615 to ptr %255557
  419617 = add i32 %v242.phi550, i32 1
  br bb %idct.while.cond243
idct.while.cond337:
  j265.phi620 = phi [bb %idct.while.body331, i32 1, bb %my_cos.my_sin.if.exit771131, i32 %394651]
  342621 = icmp slt i32 %j265.phi620, i32 %426
  br i1 %342621, bb %idct.while.body338, bb %idct.while.exit339
idct.while.body338:
  355.load624 = load float from ptr %255557
  519625 = shl i32 %i264.phi603, i32 5
  359626 = ptradd ptr @test_dct, i32 %519625
  520627 = shl i32 %j265.phi620, i32 2
  362628 = ptradd ptr %359626, i32 %520627
  362.load629 = load float from ptr %362628
  366630 = si2f i32 %424 to float
  367631 = fdiv float 3.141593, float %366630
  369632 = fdiv float 1.000000, float 2.000000
  370633 = si2f i32 %u234.phi540 to float
  371634 = fadd float %370633, float %369632
  372635 = fmul float %367631, float %371634
  374636 = si2f i32 %i264.phi603 to float
  375637 = fmul float %372635, float %374636
  871042 = si2f i32 2 to float
  881043 = fdiv float 3.141593, float %871042
  891044 = fadd float %375637, float %881043
  407461050 = fcmp ogt float %891044, float 6.283185
  br i1 %407461050, bb %my_cos.my_sin.select.then1052, bb %my_cos.my_sin.select.else1054
idct.while.exit339:
  396654 = add i32 %i264.phi603, i32 1
  br bb %idct.while.cond330
dct.while.cond136:
  j166.phi487671 = phi [bb %while.exit430, i32 ub, bb %dct.while.exit146, i32 %j166.phi486681]
  i158.phi483672 = phi [bb %while.exit430, i32 ub, bb %dct.while.exit146, i32 %i158.phi482682]
  u.phi673 = phi [bb %while.exit430, i32 0, bb %dct.while.exit146, i32 %230695]
  141674 = icmp slt i32 %u.phi673, i32 %424
  br i1 %141674, bb %dct.while.body137, bb %dct.while.exit138
dct.while.body137:
  br bb %dct.while.cond144
dct.while.exit138:
  br bb %write_mat.while.cond
dct.while.cond144:
  j166.phi486681 = phi [bb %dct.while.body137, i32 %j166.phi487671, bb %dct.while.exit161, i32 %j166.phi485698]
  i158.phi482682 = phi [bb %dct.while.body137, i32 %i158.phi483672, bb %dct.while.exit161, i32 %i158.phi699]
  v.phi683 = phi [bb %dct.while.body137, i32 0, bb %dct.while.exit161, i32 %228705]
  149684 = icmp slt i32 %v.phi683, i32 %426
  br i1 %149684, bb %dct.while.body145, bb %dct.while.exit146
dct.while.body145:
  521687 = shl i32 %u.phi673, i32 5
  153688 = ptradd ptr @test_dct, i32 %521687
  522689 = shl i32 %v.phi683, i32 2
  156690 = ptradd ptr %153688, i32 %522689
  157691 = si2f i32 0 to float
  store float %157691 to ptr %156690
  br bb %dct.while.cond159
dct.while.exit146:
  230695 = add i32 %u.phi673, i32 1
  br bb %dct.while.cond136
dct.while.cond159:
  j166.phi485698 = phi [bb %dct.while.body145, i32 %j166.phi486681, bb %dct.while.exit169, i32 %j166.phi708]
  i158.phi699 = phi [bb %dct.while.body145, i32 0, bb %dct.while.exit169, i32 %226742]
  164700 = icmp slt i32 %i158.phi699, i32 %424
  br i1 %164700, bb %dct.while.body160, bb %dct.while.exit161
dct.while.body160:
  br bb %dct.while.cond167
dct.while.exit161:
  228705 = add i32 %v.phi683, i32 1
  br bb %dct.while.cond144
dct.while.cond167:
  j166.phi708 = phi [bb %dct.while.body160, i32 0, bb %my_cos.my_sin.if.exit771227, i32 %224739]
  172709 = icmp slt i32 %j166.phi708, i32 %426
  br i1 %172709, bb %dct.while.body168, bb %dct.while.exit169
dct.while.body168:
  185.load712 = load float from ptr %156690
  527713 = shl i32 %i158.phi699, i32 5
  189714 = ptradd ptr @test_block, i32 %527713
  528715 = shl i32 %j166.phi708, i32 2
  192716 = ptradd ptr %189714, i32 %528715
  192.load717 = load float from ptr %192716
  196718 = si2f i32 %424 to float
  197719 = fdiv float 3.141593, float %196718
  199720 = fdiv float 1.000000, float 2.000000
  200721 = si2f i32 %i158.phi699 to float
  201722 = fadd float %200721, float %199720
  202723 = fmul float %197719, float %201722
  204724 = si2f i32 %u.phi673 to float
  205725 = fmul float %202723, float %204724
  871138 = si2f i32 2 to float
  881139 = fdiv float 3.141593, float %871138
  891140 = fadd float %205725, float %881139
  407461146 = fcmp ogt float %891140, float 6.283185
  br i1 %407461146, bb %my_cos.my_sin.select.then1148, bb %my_cos.my_sin.select.else1150
dct.while.exit169:
  226742 = add i32 %i158.phi699, i32 1
  br bb %dct.while.cond159
write_mat.while.cond:
  i.phi788 = phi [bb %dct.while.exit138, i32 0, bb %write_mat.while.exit112, i32 %130814]
  100789 = icmp slt i32 %i.phi788, i32 %424
  br i1 %100789, bb %write_mat.while.body, bb %write_mat.while.exit
write_mat.while.body:
  529792 = shl i32 %i.phi788, i32 5
  104793 = ptradd ptr @test_dct, i32 %529792
  106.load794 = load float from ptr %104793
  call void putfloat(float %106.load794)
  br bb %write_mat.while.cond110
write_mat.while.exit:
  call void putch(i32 10)
  br bb %idct.while.cond235
write_mat.while.cond110:
  j.phi801 = phi [bb %write_mat.while.body, i32 1, bb %write_mat.while.body111, i32 %127810]
  115802 = icmp slt i32 %j.phi801, i32 %426
  br i1 %115802, bb %write_mat.while.body111, bb %write_mat.while.exit112
write_mat.while.body111:
  call void putch(i32 32)
  531806 = shl i32 %j.phi801, i32 2
  123807 = ptradd ptr %104793, i32 %531806
  123.load808 = load float from ptr %123807
  call void putfloat(float %123.load808)
  127810 = add i32 %j.phi801, i32 1
  br bb %write_mat.while.cond110
write_mat.while.exit112:
  call void putch(i32 10)
  130814 = add i32 %i.phi788, i32 1
  br bb %write_mat.while.cond
write_mat.while.cond819:
  i.phi820 = phi [bb %idct.while.exit237, i32 0, bb %write_mat.while.exit112844, i32 %130846]
  100821 = icmp slt i32 %i.phi820, i32 %424
  br i1 %100821, bb %write_mat.while.body823, bb %write_mat.while.exit829
write_mat.while.body823:
  529824 = shl i32 %i.phi820, i32 5
  104825 = ptradd ptr @test_idct, i32 %529824
  106.load826 = load float from ptr %104825
  call void putfloat(float %106.load826)
  br bb %write_mat.while.cond110832
write_mat.while.exit829:
  call void putch(i32 10)
  ret i32 0
write_mat.while.cond110832:
  j.phi833 = phi [bb %write_mat.while.body823, i32 1, bb %write_mat.while.body111836, i32 %127842]
  115834 = icmp slt i32 %j.phi833, i32 %426
  br i1 %115834, bb %write_mat.while.body111836, bb %write_mat.while.exit112844
write_mat.while.body111836:
  call void putch(i32 32)
  531838 = shl i32 %j.phi833, i32 2
  123839 = ptradd ptr %104825, i32 %531838
  123.load840 = load float from ptr %123839
  call void putfloat(float %123.load840)
  127842 = add i32 %j.phi833, i32 1
  br bb %write_mat.while.cond110832
write_mat.while.exit112844:
  call void putch(i32 10)
  130846 = add i32 %i.phi820, i32 1
  br bb %write_mat.while.cond819
my_cos.my_sin.select.then1052:
  br bb %my_cos.my_sin.select.exit1058
my_cos.my_sin.select.else1054:
  477511055 = fneg float 6.283185
  487521056 = fcmp olt float %891044, float %477511055
  br bb %my_cos.my_sin.select.exit1058
my_cos.my_sin.select.exit1058:
  select.phi7551059 = phi [bb %my_cos.my_sin.select.else1054, i1 %487521056, bb %my_cos.my_sin.select.then1052, i1 -1]
  br i1 %select.phi7551059, bb %my_cos.my_sin.then511061, bb %my_cos.my_sin.if.exit521068
my_cos.my_sin.then511061:
  567581062 = fdiv float %891044, float 6.283185
  577591063 = f2si float %567581062 to i32
  617601064 = si2f i32 %577591063 to float
  627611065 = fmul float %617601064, float 6.283185
  637621066 = fsub float %891044, float %627611065
  br bb %my_cos.my_sin.if.exit521068
my_cos.my_sin.if.exit521068:
  x.stack37.phi4907651069 = phi [bb %my_cos.my_sin.select.exit1058, float %891044, bb %my_cos.my_sin.then511061, float %637621066]
  667661070 = fcmp ogt float %x.stack37.phi4907651069, float 3.141593
  br i1 %667661070, bb %my_cos.my_sin.then671072, bb %my_cos.my_sin.if.exit681075
my_cos.my_sin.then671072:
  717691073 = fsub float %x.stack37.phi4907651069, float 6.283185
  br bb %my_cos.my_sin.if.exit681075
my_cos.my_sin.if.exit681075:
  x.stack37.phi4897721076 = phi [bb %my_cos.my_sin.if.exit521068, float %x.stack37.phi4907651069, bb %my_cos.my_sin.then671072, float %717691073]
  747731077 = fneg float 3.141593
  757741078 = fcmp olt float %x.stack37.phi4897721076, float %747731077
  br i1 %757741078, bb %my_cos.my_sin.then761080, bb %my_cos.my_sin.if.exit771083
my_cos.my_sin.then761080:
  807771081 = fadd float %x.stack37.phi4897721076, float 6.283185
  br bb %my_cos.my_sin.if.exit771083
my_cos.my_sin.if.exit771083:
  x.stack37.phi7801084 = phi [bb %my_cos.my_sin.if.exit681075, float %x.stack37.phi4897721076, bb %my_cos.my_sin.then761080, float %807771081]
  827811085 = call float my_sin_impl(float %x.stack37.phi7801084)
  377639 = fmul float %362.load629, float %827811085
  380640 = si2f i32 %426 to float
  381641 = fdiv float 3.141593, float %380640
  384642 = si2f i32 %v242.phi550 to float
  385643 = fadd float %384642, float %369632
  386644 = fmul float %381641, float %385643
  388645 = si2f i32 %j265.phi620 to float
  389646 = fmul float %386644, float %388645
  891092 = fadd float %389646, float %881043
  407461098 = fcmp ogt float %891092, float 6.283185
  br i1 %407461098, bb %my_cos.my_sin.select.then1100, bb %my_cos.my_sin.select.else1102
my_cos.my_sin.select.then1100:
  br bb %my_cos.my_sin.select.exit1106
my_cos.my_sin.select.else1102:
  477511103 = fneg float 6.283185
  487521104 = fcmp olt float %891092, float %477511103
  br bb %my_cos.my_sin.select.exit1106
my_cos.my_sin.select.exit1106:
  select.phi7551107 = phi [bb %my_cos.my_sin.select.else1102, i1 %487521104, bb %my_cos.my_sin.select.then1100, i1 -1]
  br i1 %select.phi7551107, bb %my_cos.my_sin.then511109, bb %my_cos.my_sin.if.exit521116
my_cos.my_sin.then511109:
  567581110 = fdiv float %891092, float 6.283185
  577591111 = f2si float %567581110 to i32
  617601112 = si2f i32 %577591111 to float
  627611113 = fmul float %617601112, float 6.283185
  637621114 = fsub float %891092, float %627611113
  br bb %my_cos.my_sin.if.exit521116
my_cos.my_sin.if.exit521116:
  x.stack37.phi4907651117 = phi [bb %my_cos.my_sin.select.exit1106, float %891092, bb %my_cos.my_sin.then511109, float %637621114]
  667661118 = fcmp ogt float %x.stack37.phi4907651117, float 3.141593
  br i1 %667661118, bb %my_cos.my_sin.then671120, bb %my_cos.my_sin.if.exit681123
my_cos.my_sin.then671120:
  717691121 = fsub float %x.stack37.phi4907651117, float 6.283185
  br bb %my_cos.my_sin.if.exit681123
my_cos.my_sin.if.exit681123:
  x.stack37.phi4897721124 = phi [bb %my_cos.my_sin.if.exit521116, float %x.stack37.phi4907651117, bb %my_cos.my_sin.then671120, float %717691121]
  757741126 = fcmp olt float %x.stack37.phi4897721124, float %747731077
  br i1 %757741126, bb %my_cos.my_sin.then761128, bb %my_cos.my_sin.if.exit771131
my_cos.my_sin.then761128:
  807771129 = fadd float %x.stack37.phi4897721124, float 6.283185
  br bb %my_cos.my_sin.if.exit771131
my_cos.my_sin.if.exit771131:
  x.stack37.phi7801132 = phi [bb %my_cos.my_sin.if.exit681123, float %x.stack37.phi4897721124, bb %my_cos.my_sin.then761128, float %807771129]
  827811133 = call float my_sin_impl(float %x.stack37.phi7801132)
  391648 = fmul float %377639, float %827811133
  392649 = fadd float %355.load624, float %391648
  store float %392649 to ptr %255557
  394651 = add i32 %j265.phi620, i32 1
  br bb %idct.while.cond337
my_cos.my_sin.select.then1148:
  br bb %my_cos.my_sin.select.exit1154
my_cos.my_sin.select.else1150:
  477511151 = fneg float 6.283185
  487521152 = fcmp olt float %891140, float %477511151
  br bb %my_cos.my_sin.select.exit1154
my_cos.my_sin.select.exit1154:
  select.phi7551155 = phi [bb %my_cos.my_sin.select.else1150, i1 %487521152, bb %my_cos.my_sin.select.then1148, i1 -1]
  br i1 %select.phi7551155, bb %my_cos.my_sin.then511157, bb %my_cos.my_sin.if.exit521164
my_cos.my_sin.then511157:
  567581158 = fdiv float %891140, float 6.283185
  577591159 = f2si float %567581158 to i32
  617601160 = si2f i32 %577591159 to float
  627611161 = fmul float %617601160, float 6.283185
  637621162 = fsub float %891140, float %627611161
  br bb %my_cos.my_sin.if.exit521164
my_cos.my_sin.if.exit521164:
  x.stack37.phi4907651165 = phi [bb %my_cos.my_sin.select.exit1154, float %891140, bb %my_cos.my_sin.then511157, float %637621162]
  667661166 = fcmp ogt float %x.stack37.phi4907651165, float 3.141593
  br i1 %667661166, bb %my_cos.my_sin.then671168, bb %my_cos.my_sin.if.exit681171
my_cos.my_sin.then671168:
  717691169 = fsub float %x.stack37.phi4907651165, float 6.283185
  br bb %my_cos.my_sin.if.exit681171
my_cos.my_sin.if.exit681171:
  x.stack37.phi4897721172 = phi [bb %my_cos.my_sin.if.exit521164, float %x.stack37.phi4907651165, bb %my_cos.my_sin.then671168, float %717691169]
  747731173 = fneg float 3.141593
  757741174 = fcmp olt float %x.stack37.phi4897721172, float %747731173
  br i1 %757741174, bb %my_cos.my_sin.then761176, bb %my_cos.my_sin.if.exit771179
my_cos.my_sin.then761176:
  807771177 = fadd float %x.stack37.phi4897721172, float 6.283185
  br bb %my_cos.my_sin.if.exit771179
my_cos.my_sin.if.exit771179:
  x.stack37.phi7801180 = phi [bb %my_cos.my_sin.if.exit681171, float %x.stack37.phi4897721172, bb %my_cos.my_sin.then761176, float %807771177]
  827811181 = call float my_sin_impl(float %x.stack37.phi7801180)
  207727 = fmul float %192.load717, float %827811181
  210728 = si2f i32 %426 to float
  211729 = fdiv float 3.141593, float %210728
  214730 = si2f i32 %j166.phi708 to float
  215731 = fadd float %214730, float %199720
  216732 = fmul float %211729, float %215731
  218733 = si2f i32 %v.phi683 to float
  219734 = fmul float %216732, float %218733
  891188 = fadd float %219734, float %881139
  407461194 = fcmp ogt float %891188, float 6.283185
  br i1 %407461194, bb %my_cos.my_sin.select.then1196, bb %my_cos.my_sin.select.else1198
my_cos.my_sin.select.then1196:
  br bb %my_cos.my_sin.select.exit1202
my_cos.my_sin.select.else1198:
  477511199 = fneg float 6.283185
  487521200 = fcmp olt float %891188, float %477511199
  br bb %my_cos.my_sin.select.exit1202
my_cos.my_sin.select.exit1202:
  select.phi7551203 = phi [bb %my_cos.my_sin.select.else1198, i1 %487521200, bb %my_cos.my_sin.select.then1196, i1 -1]
  br i1 %select.phi7551203, bb %my_cos.my_sin.then511205, bb %my_cos.my_sin.if.exit521212
my_cos.my_sin.then511205:
  567581206 = fdiv float %891188, float 6.283185
  577591207 = f2si float %567581206 to i32
  617601208 = si2f i32 %577591207 to float
  627611209 = fmul float %617601208, float 6.283185
  637621210 = fsub float %891188, float %627611209
  br bb %my_cos.my_sin.if.exit521212
my_cos.my_sin.if.exit521212:
  x.stack37.phi4907651213 = phi [bb %my_cos.my_sin.select.exit1202, float %891188, bb %my_cos.my_sin.then511205, float %637621210]
  667661214 = fcmp ogt float %x.stack37.phi4907651213, float 3.141593
  br i1 %667661214, bb %my_cos.my_sin.then671216, bb %my_cos.my_sin.if.exit681219
my_cos.my_sin.then671216:
  717691217 = fsub float %x.stack37.phi4907651213, float 6.283185
  br bb %my_cos.my_sin.if.exit681219
my_cos.my_sin.if.exit681219:
  x.stack37.phi4897721220 = phi [bb %my_cos.my_sin.if.exit521212, float %x.stack37.phi4907651213, bb %my_cos.my_sin.then671216, float %717691217]
  757741222 = fcmp olt float %x.stack37.phi4897721220, float %747731173
  br i1 %757741222, bb %my_cos.my_sin.then761224, bb %my_cos.my_sin.if.exit771227
my_cos.my_sin.then761224:
  807771225 = fadd float %x.stack37.phi4897721220, float 6.283185
  br bb %my_cos.my_sin.if.exit771227
my_cos.my_sin.if.exit771227:
  x.stack37.phi7801228 = phi [bb %my_cos.my_sin.if.exit681219, float %x.stack37.phi4897721220, bb %my_cos.my_sin.then761224, float %807771225]
  827811229 = call float my_sin_impl(float %x.stack37.phi7801228)
  221736 = fmul float %207727, float %827811229
  222737 = fadd float %185.load712, float %221736
  store float %222737 to ptr %156690
  224739 = add i32 %j166.phi708, i32 1
  br bb %dct.while.cond167
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

pure float my_fabs(float x) {
entry:
  3 = si2f i32 0 to float
  4 = fcmp ogt float %x, float %3
  br i1 %4, bb %then, bb %if.exit
then:
  ret float %x
if.exit:
  9 = fneg float %x
  ret float %9
}


