global ptr now init with i32 0
internal global ptr left_child init with 10000 x i32 zeros
internal global ptr value init with 10000 x i32 zeros
internal global ptr right_child init with 10000 x i32 zeros
internal i32 insert(i32 root, i32 x) {
entry88:  pred()
  right_child.pinned = pin ptr @right_child
  left_child.pinned = pin ptr @left_child
  value.pinned = pin ptr @value
  93 = icmp eq i32 %root, i32 -1
  br i1 %93, bb %then94, bb %else96
then94:  pred(entry88)
  now.pinned = pin ptr @now
  now.load409 = load i32 from ptr %now.pinned
  477 = shl i32 %now.load409, i32 2
  70411 = ptradd ptr %value.pinned, i32 %477
  store i32 %x to ptr %70411
  75415 = ptradd ptr %left_child.pinned, i32 %477
  store i32 -1 to ptr %75415
  80419 = ptradd ptr %right_child.pinned, i32 %477
  store i32 -1 to ptr %80419
  85422 = add i32 %now.load409, i32 1
  store i32 %85422 to ptr %now.pinned
  ret i32 %now.load409
else96:  pred(entry88)
  480 = shl i32 %root, i32 2
  102 = ptradd ptr %value.pinned, i32 %480
  102.load = load i32 from ptr %102
  104 = icmp sgt i32 %x, i32 %102.load
  br i1 %104, bb %then105, bb %else107
then105:  pred(else96)
  110 = ptradd ptr %right_child.pinned, i32 %480
  114.load = load i32 from ptr %110
  117 = call i32 insert(i32 %114.load, i32 %x)
  store i32 %117 to ptr %110
  br bb %if.exit106
if.exit106:  pred(then105, else107)
  ret i32 %root
else107:  pred(else96)
  120 = ptradd ptr %left_child.pinned, i32 %480
  124.load = load i32 from ptr %120
  127 = call i32 insert(i32 %124.load, i32 %x)
  store i32 %127 to ptr %120
  br bb %if.exit106
}

internal i32 delete(i32 root, i32 x) {
entry129:  pred()
  134 = icmp eq i32 %root, i32 -1
  br i1 %134, bb %then135, bb %if.exit136
then135:  pred(entry129)
  ret i32 -1
if.exit136:  pred(entry129)
  value.pinned506 = pin ptr @value
  481 = shl i32 %root, i32 2
  141 = ptradd ptr %value.pinned506, i32 %481
  141.load = load i32 from ptr %141
  143 = icmp sgt i32 %x, i32 %141.load
  149 = ptradd ptr @right_child, i32 %481
  br i1 %143, bb %then144, bb %else146
then144:  pred(if.exit136)
  153.load = load i32 from ptr %149
  156 = call i32 delete(i32 %153.load, i32 %x)
  store i32 %156 to ptr %149
  br bb %if.exit145
if.exit145:  pred(then144, then163, else217.split)
  ret i32 %root
else146:  pred(if.exit136)
  left_child.pinned507 = pin ptr @left_child
  162 = icmp slt i32 %x, i32 %141.load
  168 = ptradd ptr %left_child.pinned507, i32 %481
  br i1 %162, bb %then163, bb %else165
then163:  pred(else146)
  172.load = load i32 from ptr %168
  175 = call i32 delete(i32 %172.load, i32 %x)
  store i32 %175 to ptr %168
  br bb %if.exit145
else165:  pred(else146)
  178.load = load i32 from ptr %168
  181 = icmp eq i32 %178.load, i32 -1
  br i1 %181, bb %select.then182, bb %select.else183
select.then182:  pred(else165)
  188.load = load i32 from ptr %149
  191 = icmp eq i32 %188.load, i32 -1
  br bb %select.exit184
select.else183:  pred(else165)
  br bb %select.exit184
select.exit184:  pred(select.then182, select.else183)
  select185.phi = phi [bb %select.else183, i1 0, bb %select.then182, i1 %191]
  br i1 %select185.phi, bb %then193, bb %else195
then193:  pred(select.exit184)
  ret i32 -1
else195:  pred(select.exit184)
  br i1 %181, bb %select.then203, bb %select.else204
select.then203:  pred(else195)
  br bb %select.exit205
select.else204:  pred(else195)
  209.load = load i32 from ptr %149
  212 = icmp eq i32 %209.load, i32 -1
  br bb %select.exit205
select.exit205:  pred(select.then203, select.else204)
  select206.phi = phi [bb %select.else204, i1 %212, bb %select.then203, i1 1]
  br i1 %select206.phi, bb %then215, bb %else217
then215:  pred(select.exit205)
  br i1 %181, bb %then224, bb %else226
else217:  pred(select.exit205)
  238.load = load i32 from ptr %149
  br bb %find_minimum.loop_entry
else217.split:  pred(find_minimum.then48, find_minimum.if.exit59)
  240.ret = phi [bb %find_minimum.then48, i32 -1, bb %find_minimum.if.exit59, i32 %root.loop449]
  482 = shl i32 %240.ret, i32 2
  247 = ptradd ptr %value.pinned506, i32 %482
  247.load = load i32 from ptr %247
  store i32 %247.load to ptr %141
  255.load = load i32 from ptr %149
  259.load = load i32 from ptr %247
  261 = call i32 delete(i32 %255.load, i32 %259.load)
  store i32 %261 to ptr %149
  br bb %if.exit145
then224:  pred(then215)
  229.load = load i32 from ptr %149
  ret i32 %229.load
else226:  pred(then215)
  ret i32 %178.load
find_minimum.loop_entry:  pred(else217, find_minimum.then58)
  root.loop449 = phi [bb %else217, i32 %238.load, bb %find_minimum.then58, i32 %54.load457]
  47450 = icmp eq i32 %root.loop449, i32 -1
  br i1 %47450, bb %find_minimum.then48, bb %find_minimum.else50
find_minimum.then48:  pred(find_minimum.loop_entry)
  br bb %else217.split
find_minimum.else50:  pred(find_minimum.loop_entry)
  483 = shl i32 %root.loop449, i32 2
  54456 = ptradd ptr %left_child.pinned507, i32 %483
  54.load457 = load i32 from ptr %54456
  57458 = icmp ne i32 %54.load457, i32 -1
  br i1 %57458, bb %find_minimum.then58, bb %find_minimum.if.exit59
find_minimum.then58:  pred(find_minimum.else50)
  br bb %find_minimum.loop_entry
find_minimum.if.exit59:  pred(find_minimum.else50)
  br bb %else217.split
}

external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry287:  pred()
  now.pinned508 = pin ptr @now
  store i32 0 to ptr %now.pinned508
  290 = call i32 getint()
  292 = icmp ne i32 %290, i32 0
  293 = xor i1 %292, i1 1
  br i1 %293, bb %then296, bb %if.exit297
then296:  pred(entry287)
  ret i32 0
if.exit297:  pred(entry287)
  299 = call i32 getint()
  now.load428 = load i32 from ptr %now.pinned508
  484 = shl i32 %now.load428, i32 2
  70430 = ptradd ptr @value, i32 %484
  store i32 %299 to ptr %70430
  75434 = ptradd ptr @left_child, i32 %484
  store i32 -1 to ptr %75434
  80438 = ptradd ptr @right_child, i32 %484
  store i32 -1 to ptr %80438
  85441 = add i32 %now.load428, i32 1
  store i32 %85441 to ptr %now.pinned508
  307492 = icmp slt i32 1, i32 %290
  br i1 %307492, bb %while.body_preheader, bb %while.exit
while.body_preheader:  pred(if.exit297)
  br bb %while.body
while.body:  pred(while.body, while.body_preheader)
  i.phi360493 = phi [bb %while.body, i32 %314, bb %while.body_preheader, i32 1]
  310 = call i32 getint()
  311 = call i32 insert(i32 %now.load428, i32 %310)
  314 = add i32 %i.phi360493, i32 1
  307 = icmp slt i32 %314, i32 %290
  br i1 %307, bb %while.body, bb %while.exit
while.exit:  pred(if.exit297, while.body)
  call void inorder(i32 %now.load428)
  call void putch(i32 10)
  320 = call i32 getint()
  327488 = icmp slt i32 0, i32 %320
  br i1 %327488, bb %while.body323_preheader, bb %while.exit324
while.body323_preheader:  pred(while.exit)
  br bb %while.body323
while.body323:  pred(while.body323, while.body323_preheader)
  root.phi491 = phi [bb %while.body323, i32 %332, bb %while.body323_preheader, i32 %now.load428]
  i.phi490 = phi [bb %while.body323, i32 %335, bb %while.body323_preheader, i32 0]
  331 = call i32 getint()
  332 = call i32 delete(i32 %root.phi491, i32 %331)
  335 = add i32 %i.phi490, i32 1
  327 = icmp slt i32 %335, i32 %320
  br i1 %327, bb %while.body323, bb %while.body323_exclu_exit
while.exit324:  pred(while.exit, while.body323_exclu_exit)
  now.load428489 = phi [bb %while.body323_exclu_exit, i32 %332, bb %while.exit, i32 %now.load428]
  call void inorder(i32 %now.load428489)
  call void putch(i32 10)
  ret i32 0
while.body323_exclu_exit:  pred(while.body323)
  br bb %while.exit324
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

internal void inorder(i32 root) {
entry263:  pred()
  267 = icmp ne i32 %root, i32 -1
  br i1 %267, bb %then268, bb %if.exit269
then268:  pred(entry263)
  487 = shl i32 %root, i32 2
  272 = ptradd ptr @left_child, i32 %487
  272.load = load i32 from ptr %272
  call void inorder(i32 %272.load)
  277 = ptradd ptr @value, i32 %487
  277.load = load i32 from ptr %277
  call void putint(i32 %277.load)
  call void putch(i32 32)
  284 = ptradd ptr @right_child, i32 %487
  284.load = load i32 from ptr %284
  call void inorder(i32 %284.load)
  br bb %if.exit269
if.exit269:  pred(entry263, then268)
  ret 
}

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


