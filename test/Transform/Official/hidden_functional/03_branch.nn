i32 main() {
entry:
  3 = icmp slt i32 5, i32 6
  br i1 %3, bb %select.then, bb %select.else
select.then:
  8 = icmp ne i32 4, i32 0
  br bb %select.exit
select.else:
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 0, bb %select.then, i1 %8]
  br i1 %select.phi, bb %then, bb %else
then:
  13 = icmp ne i32 5, i32 0
  br i1 %13, bb %select.then14, bb %select.else15
if.exit:
  unreachable
else:
  ret i32 1
select.then14:
  br bb %select.exit16
select.else15:
  18 = icmp ne i32 1, i32 0
  19 =  i1 %18, i1 1
  20 = zext i1 %19 to i32
  21 = add i32 %20, i32 0
  22 = icmp ne i32 %21, i32 0
  23 = icmp ne i1 %22, i1 0
  br bb %select.exit16
select.exit16:
  select17.phi = phi [bb %select.else15, i1 %23, bb %select.then14, i1 1]
  br i1 %select17.phi, bb %then25, bb %else27
then25:
  28 = icmp eq i32 3, i32 2
  br i1 %28, bb %select.then29, bb %select.else30
if.exit26:
  br bb %if.exit
else27:
  ret i32 2
select.then29:
  34 = icmp sgt i32 9, i32 2
  br bb %select.exit31
select.else30:
  br bb %select.exit31
select.exit31:
  select32.phi = phi [bb %select.else30, i1 0, bb %select.then29, i1 %34]
  br i1 %select32.phi, bb %then36, bb %else38
then36:
  ret i32 3
if.exit37:
  br bb %if.exit26
else38:
  39 = srem i32 6, i32 3
  40 = icmp ne i32 %39, i32 0
  br i1 %40, bb %select.then41, bb %select.else42
select.then41:
  45 = icmp ne i32 5, i32 0
  br bb %select.exit43
select.else42:
  br bb %select.exit43
select.exit43:
  select44.phi = phi [bb %select.else42, i1 0, bb %select.then41, i1 %45]
  br i1 %select44.phi, bb %then47, bb %else49
then47:
  ret i32 4
if.exit48:
  br bb %if.exit37
else49:
  50 = sdiv i32 4, i32 2
  51 = add i32 %50, i32 1
  52 = icmp sge i32 %51, i32 2
  br i1 %52, bb %then53, bb %else55
then53:
  57 = icmp sge i32 -1, i32 0
  br i1 %57, bb %select.then58, bb %select.else59
if.exit54:
  br bb %if.exit48
else55:
  ret i32 5
select.then58:
  br bb %select.exit60
select.else59:
  62 = icmp sgt i32 4, i32 4
  63 = icmp ne i1 %62, i1 0
  br bb %select.exit60
select.exit60:
  select61.phi = phi [bb %select.else59, i1 %63, bb %select.then58, i1 1]
  br i1 %select61.phi, bb %then65, bb %else67
then65:
  ret i32 6
if.exit66:
  br bb %if.exit54
else67:
  68 = icmp ne i32 3, i32 6
  br i1 %68, bb %then69, bb %else71
then69:
  74 = icmp sgt i32 22, i32 10
  br i1 %74, bb %then75, bb %else77
if.exit70:
  br bb %if.exit66
else71:
  ret i32 7
then75:
  78 = icmp ne i32 6, i32 0
  79 =  i1 %78, i1 1
  80 = zext i1 %79 to i32
  81 = icmp ne i32 %80, i32 0
  br i1 %81, bb %then82, bb %else84
if.exit76:
  br bb %if.exit70
else77:
  ret i32 8
then82:
  ret i32 9
if.exit83:
  br bb %if.exit76
else84:
  ret i32 10
}

external void putfarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putarray(i32 , ptr )

external void _sysy_stoptime(i32 )

external void putch(i32 )

external void putfloat(float )

external i32 getfarray(ptr )

external i32 getarray(ptr )

external void putint(i32 )

external float getfloat()

external i32 getch()

external i32 getint()


