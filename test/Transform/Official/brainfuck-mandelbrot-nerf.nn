global ptr output_length init with i32 0
global ptr output init with 65536 x i32 zeros
global ptr input_length init with i32 0
global ptr input init with 65536 x i32 zeros
global ptr tape init with 65536 x i32 zeros
global ptr program init with 65536 x i32 zeros
global ptr program_length init with i32 0
void output_() {
entry282:
  br bb %while.cond284
while.cond284:
  304 = phi [bb %entry282, i32 0, bb %while.body285, i32 %297]
  output_length.load288 = load i32 from ptr @output_length
  289 = icmp slt i32 %304, i32 %output_length.load288
  290 = icmp ne i1 %289, i1 0
  br i1 %290, bb %while.body285, bb %while.exit286
while.body285:
  292 = mul i32 %304, i32 4
  293 = ptradd ptr @output, i32 %292
  293.load = load i32 from ptr %293
  call void putch(i32 %293.load)
  297 = add i32 %304, i32 1
  br bb %while.cond284
while.exit286:
  ret 
}

void run_program() {
entry105:
  %return_address = stack 2048
  br bb %init.cond
init.cond:
  308 = phi [bb %entry105, i32 512, bb %init, i32 %cnt.dec]
  115 = icmp ne i32 %308, i32 0
  br i1 %115, bb %init, bb %init.exit
init:
  cnt.dec = sub i32 %308, i32 1
  offset = mul i32 %cnt.dec, i32 4
  arr.index = add i32 0, i32 %offset
  arr.index120 = ptradd ptr %return_address, ptr %arr.index
  store i32 0 to ptr %arr.index120
  br bb %init.cond
init.exit:
  store i32 0 to ptr @output_length
  br bb %while.cond122
while.cond122:
  361 = phi [bb %init.exit, i32 ub, bb %if.exit137, i32 %360]
  352 = phi [bb %init.exit, i32 0, bb %if.exit137, i32 %281]
  343 = phi [bb %init.exit, i32 ub, bb %if.exit137, i32 %342]
  334 = phi [bb %init.exit, i32 ub, bb %if.exit137, i32 %333]
  328 = phi [bb %init.exit, i32 ub, bb %if.exit137, i32 %132.load]
  327 = phi [bb %init.exit, i32 0, bb %if.exit137, i32 %326]
  316 = phi [bb %init.exit, i32 0, bb %if.exit137, i32 %315]
  307 = phi [bb %init.exit, i32 0, bb %if.exit137, i32 %306]
  program_length.load126 = load i32 from ptr @program_length
  127 = icmp slt i32 %352, i32 %program_length.load126
  128 = icmp ne i1 %127, i1 0
  br i1 %128, bb %while.body123, bb %while.exit124
while.body123:
  131 = mul i32 %352, i32 4
  132 = ptradd ptr @program, i32 %131
  132.load = load i32 from ptr %132
  135 = icmp eq i32 %132.load, i32 62
  br i1 %135, bb %then136, bb %else
while.exit124:
  ret 
then136:
  140 = add i32 %307, i32 1
  br bb %if.exit137
if.exit137:
  360 = phi [bb %if.exit144, i32 %359, bb %then136, i32 %361]
  351 = phi [bb %if.exit144, i32 %350, bb %then136, i32 %352]
  342 = phi [bb %if.exit144, i32 %341, bb %then136, i32 %343]
  333 = phi [bb %if.exit144, i32 %332, bb %then136, i32 %334]
  326 = phi [bb %if.exit144, i32 %325, bb %then136, i32 %327]
  315 = phi [bb %if.exit144, i32 %314, bb %then136, i32 %316]
  306 = phi [bb %if.exit144, i32 %305, bb %then136, i32 %140]
  281 = add i32 %351, i32 1
  br bb %while.cond122
else:
  142 = icmp eq i32 %132.load, i32 60
  br i1 %142, bb %then143, bb %else145
then143:
  147 = sub i32 %307, i32 1
  br bb %if.exit144
if.exit144:
  359 = phi [bb %if.exit151, i32 %358, bb %then143, i32 %361]
  350 = phi [bb %if.exit151, i32 %349, bb %then143, i32 %352]
  341 = phi [bb %if.exit151, i32 %340, bb %then143, i32 %343]
  332 = phi [bb %if.exit151, i32 %331, bb %then143, i32 %334]
  325 = phi [bb %if.exit151, i32 %324, bb %then143, i32 %327]
  314 = phi [bb %if.exit151, i32 %313, bb %then143, i32 %316]
  305 = phi [bb %if.exit151, i32 %307, bb %then143, i32 %147]
  br bb %if.exit137
else145:
  149 = icmp eq i32 %132.load, i32 43
  br i1 %149, bb %then150, bb %else152
then150:
  154 = mul i32 %307, i32 4
  155 = ptradd ptr @tape, i32 %154
  157 = mul i32 %307, i32 4
  158 = ptradd ptr @tape, i32 %157
  158.load = load i32 from ptr %158
  160 = add i32 %158.load, i32 1
  store i32 %160 to ptr %155
  br bb %if.exit151
if.exit151:
  358 = phi [bb %if.exit164, i32 %357, bb %then150, i32 %361]
  349 = phi [bb %if.exit164, i32 %348, bb %then150, i32 %352]
  340 = phi [bb %if.exit164, i32 %339, bb %then150, i32 %343]
  331 = phi [bb %if.exit164, i32 %330, bb %then150, i32 %334]
  324 = phi [bb %if.exit164, i32 %323, bb %then150, i32 %327]
  313 = phi [bb %if.exit164, i32 %312, bb %then150, i32 %316]
  br bb %if.exit144
else152:
  162 = icmp eq i32 %132.load, i32 45
  br i1 %162, bb %then163, bb %else165
then163:
  167 = mul i32 %307, i32 4
  168 = ptradd ptr @tape, i32 %167
  170 = mul i32 %307, i32 4
  171 = ptradd ptr @tape, i32 %170
  171.load = load i32 from ptr %171
  173 = sub i32 %171.load, i32 1
  store i32 %173 to ptr %168
  br bb %if.exit164
if.exit164:
  357 = phi [bb %if.exit177, i32 %356, bb %then163, i32 %361]
  348 = phi [bb %if.exit177, i32 %347, bb %then163, i32 %352]
  339 = phi [bb %if.exit177, i32 %338, bb %then163, i32 %343]
  330 = phi [bb %if.exit177, i32 %329, bb %then163, i32 %334]
  323 = phi [bb %if.exit177, i32 %322, bb %then163, i32 %327]
  312 = phi [bb %if.exit177, i32 %311, bb %then163, i32 %316]
  br bb %if.exit151
else165:
  175 = icmp eq i32 %132.load, i32 91
  br i1 %175, bb %then176, bb %else178
then176:
  181 = mul i32 %307, i32 4
  182 = ptradd ptr @tape, i32 %181
  182.load = load i32 from ptr %182
  185 = icmp ne i32 %182.load, i32 0
  br i1 %185, bb %then186, bb %else188
if.exit177:
  356 = phi [bb %if.exit225, i32 %355, bb %if.exit187, i32 %361]
  347 = phi [bb %if.exit225, i32 %346, bb %if.exit187, i32 %354]
  338 = phi [bb %if.exit225, i32 %343, bb %if.exit187, i32 %337]
  329 = phi [bb %if.exit225, i32 %334, bb %if.exit187, i32 %182.load]
  322 = phi [bb %if.exit225, i32 %321, bb %if.exit187, i32 %327]
  311 = phi [bb %if.exit225, i32 %310, bb %if.exit187, i32 %317]
  br bb %if.exit164
else178:
  223 = icmp eq i32 %132.load, i32 93
  br i1 %223, bb %then224, bb %else226
then186:
  190 = mul i32 %316, i32 4
  191 = ptradd ptr %return_address, i32 %190
  store i32 %352 to ptr %191
  194 = add i32 %316, i32 1
  br bb %if.exit187
if.exit187:
  354 = phi [bb %while.exit198, i32 %353, bb %then186, i32 %352]
  337 = phi [bb %while.exit198, i32 %336, bb %then186, i32 %343]
  317 = phi [bb %while.exit198, i32 %316, bb %then186, i32 %194]
  br bb %if.exit177
else188:
  br bb %while.cond196
while.cond196:
  353 = phi [bb %else188, i32 %352, bb %if.exit219, i32 %203]
  336 = phi [bb %else188, i32 1, bb %if.exit219, i32 %335]
  200 = icmp sgt i32 %336, i32 0
  201 = icmp ne i1 %200, i1 0
  br i1 %201, bb %while.body197, bb %while.exit198
while.body197:
  203 = add i32 %353, i32 1
  205 = mul i32 %203, i32 4
  206 = ptradd ptr @program, i32 %205
  206.load = load i32 from ptr %206
  208 = icmp eq i32 %206.load, i32 93
  br i1 %208, bb %then209, bb %if.exit210
while.exit198:
  br bb %if.exit187
then209:
  212 = sub i32 %336, i32 1
  br bb %if.exit210
if.exit210:
  344 = phi [bb %while.body197, i32 %336, bb %then209, i32 %212]
  214 = mul i32 %203, i32 4
  215 = ptradd ptr @program, i32 %214
  215.load = load i32 from ptr %215
  217 = icmp eq i32 %215.load, i32 91
  br i1 %217, bb %then218, bb %if.exit219
then218:
  221 = add i32 %344, i32 1
  br bb %if.exit219
if.exit219:
  335 = phi [bb %if.exit210, i32 %344, bb %then218, i32 %221]
  br bb %while.cond196
then224:
  229 = mul i32 %307, i32 4
  230 = ptradd ptr @tape, i32 %229
  230.load = load i32 from ptr %230
  233 = icmp eq i32 %230.load, i32 0
  br i1 %233, bb %then234, bb %else236
if.exit225:
  355 = phi [bb %if.exit247, i32 %361, bb %if.exit235, i32 %230.load]
  346 = phi [bb %if.exit247, i32 %352, bb %if.exit235, i32 %345]
  321 = phi [bb %if.exit247, i32 %320, bb %if.exit235, i32 %327]
  310 = phi [bb %if.exit247, i32 %316, bb %if.exit235, i32 %309]
  br bb %if.exit177
else226:
  245 = icmp eq i32 %132.load, i32 46
  br i1 %245, bb %then246, bb %else248
then234:
  238 = sub i32 %316, i32 1
  br bb %if.exit235
if.exit235:
  345 = phi [bb %else236, i32 %242.load, bb %then234, i32 %352]
  309 = phi [bb %else236, i32 %316, bb %then234, i32 %238]
  br bb %if.exit225
else236:
  240 = sub i32 %316, i32 1
  241 = mul i32 %240, i32 4
  242 = ptradd ptr %return_address, i32 %241
  242.load = load i32 from ptr %242
  br bb %if.exit235
then246:
  output_length.load = load i32 from ptr @output_length
  250 = mul i32 %output_length.load, i32 4
  251 = ptradd ptr @output, i32 %250
  253 = mul i32 %307, i32 4
  254 = ptradd ptr @tape, i32 %253
  254.load = load i32 from ptr %254
  store i32 %254.load to ptr %251
  output_length.load256 = load i32 from ptr @output_length
  257 = add i32 %output_length.load256, i32 1
  store i32 %257 to ptr @output_length
  br bb %if.exit247
if.exit247:
  320 = phi [bb %if.exit261, i32 %319, bb %then246, i32 %327]
  br bb %if.exit225
else248:
  259 = icmp eq i32 %132.load, i32 44
  br i1 %259, bb %then260, bb %if.exit261
then260:
  input_length.load263 = load i32 from ptr @input_length
  264 = icmp sge i32 %327, i32 %input_length.load263
  br i1 %264, bb %then265, bb %else267
if.exit261:
  319 = phi [bb %else248, i32 %327, bb %if.exit266, i32 %318]
  br bb %if.exit247
then265:
  269 = mul i32 %307, i32 4
  270 = ptradd ptr @tape, i32 %269
  store i32 0 to ptr %270
  br bb %if.exit266
if.exit266:
  318 = phi [bb %else267, i32 %279, bb %then265, i32 %327]
  br bb %if.exit261
else267:
  272 = mul i32 %307, i32 4
  273 = ptradd ptr @tape, i32 %272
  275 = mul i32 %327, i32 4
  276 = ptradd ptr @input, i32 %275
  276.load = load i32 from ptr %276
  store i32 %276.load to ptr %273
  279 = add i32 %327, i32 1
  br bb %if.exit266
}

external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

void read_program() {
entry67:
  69 = call i32 get_bf_char()
  br bb %while.cond70
while.cond70:
  362 = phi [bb %entry67, i32 %69, bb %while.body71, i32 %80]
  74 = icmp ne i32 %362, i32 35
  75 = icmp ne i1 %74, i1 0
  br i1 %75, bb %while.body71, bb %while.exit72
while.body71:
  program_length.load = load i32 from ptr @program_length
  77 = mul i32 %program_length.load, i32 4
  78 = ptradd ptr @program, i32 %77
  store i32 %362 to ptr %78
  80 = call i32 get_bf_char()
  program_length.load81 = load i32 from ptr @program_length
  82 = add i32 %program_length.load81, i32 1
  store i32 %82 to ptr @program_length
  br bb %while.cond70
while.exit72:
  84 = call i32 getch()
  86 = icmp ne i32 %84, i32 105
  br i1 %86, bb %then, bb %if.exit
then:
  ret 
if.exit:
  89 = call i32 getint()
  store i32 %89 to ptr @input_length
  90 = call i32 getch()
  br bb %while.cond92
while.cond92:
  363 = phi [bb %if.exit, i32 0, bb %while.body93, i32 %104]
  input_length.load = load i32 from ptr @input_length
  97 = icmp slt i32 %363, i32 %input_length.load
  98 = icmp ne i1 %97, i1 0
  br i1 %98, bb %while.body93, bb %while.exit94
while.body93:
  100 = mul i32 %363, i32 4
  101 = ptradd ptr @input, i32 %100
  102 = call i32 getch()
  store i32 %102 to ptr %101
  104 = add i32 %363, i32 1
  br bb %while.cond92
while.exit94:
  ret 
}

external void putch(i32 )

external void _sysy_stoptime(i32 )

i32 main() {
entry298:
  call void read_program()
  call void _sysy_starttime(i32 116)
  call void run_program()
  call void _sysy_stoptime(i32 118)
  call void output_()
  ret i32 0
}

external float getfloat()

external void putfloat(float )

i32 get_bf_char() {
entry:
  2 = call i32 getch()
  br bb %while.cond
while.cond:
  380 = phi [bb %entry, i1 ub, bb %while.body, i1 %379]
  378 = phi [bb %entry, i1 ub, bb %while.body, i1 %377]
  376 = phi [bb %entry, i1 ub, bb %while.body, i1 %375]
  374 = phi [bb %entry, i1 ub, bb %while.body, i1 %373]
  372 = phi [bb %entry, i1 ub, bb %while.body, i1 %371]
  370 = phi [bb %entry, i1 ub, bb %while.body, i1 %369]
  368 = phi [bb %entry, i1 ub, bb %while.body, i1 %367]
  366 = phi [bb %entry, i1 ub, bb %while.body, i1 %365]
  364 = phi [bb %entry, i32 %2, bb %while.body, i32 %65]
  7 = icmp ne i32 %364, i32 62
  br i1 %7, bb %select.then, bb %select.else
while.body:
  65 = call i32 getch()
  br bb %while.cond
while.exit:
  ret i32 %364
select.then:
  13 = icmp ne i32 %364, i32 60
  br bb %select.exit
select.else:
  br bb %select.exit
select.exit:
  365 = phi [bb %select.else, i1 0, bb %select.then, i1 %13]
  br i1 %365, bb %select.then15, bb %select.else16
select.then15:
  20 = icmp ne i32 %364, i32 43
  br bb %select.exit17
select.else16:
  br bb %select.exit17
select.exit17:
  367 = phi [bb %select.else16, i1 0, bb %select.then15, i1 %20]
  br i1 %367, bb %select.then22, bb %select.else23
select.then22:
  27 = icmp ne i32 %364, i32 45
  br bb %select.exit24
select.else23:
  br bb %select.exit24
select.exit24:
  369 = phi [bb %select.else23, i1 0, bb %select.then22, i1 %27]
  br i1 %369, bb %select.then29, bb %select.else30
select.then29:
  34 = icmp ne i32 %364, i32 91
  br bb %select.exit31
select.else30:
  br bb %select.exit31
select.exit31:
  371 = phi [bb %select.else30, i1 0, bb %select.then29, i1 %34]
  br i1 %371, bb %select.then36, bb %select.else37
select.then36:
  41 = icmp ne i32 %364, i32 93
  br bb %select.exit38
select.else37:
  br bb %select.exit38
select.exit38:
  373 = phi [bb %select.else37, i1 0, bb %select.then36, i1 %41]
  br i1 %373, bb %select.then43, bb %select.else44
select.then43:
  48 = icmp ne i32 %364, i32 46
  br bb %select.exit45
select.else44:
  br bb %select.exit45
select.exit45:
  375 = phi [bb %select.else44, i1 0, bb %select.then43, i1 %48]
  br i1 %375, bb %select.then50, bb %select.else51
select.then50:
  55 = icmp ne i32 %364, i32 44
  br bb %select.exit52
select.else51:
  br bb %select.exit52
select.exit52:
  377 = phi [bb %select.else51, i1 0, bb %select.then50, i1 %55]
  br i1 %377, bb %select.then57, bb %select.else58
select.then57:
  62 = icmp ne i32 %364, i32 35
  br bb %select.exit59
select.else58:
  br bb %select.exit59
select.exit59:
  379 = phi [bb %select.else58, i1 0, bb %select.then57, i1 %62]
  64 = icmp ne i1 %379, i1 0
  br i1 %64, bb %while.body, bb %while.exit
}

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


