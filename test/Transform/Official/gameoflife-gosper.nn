global ptr steps init with i32 0
global ptr height init with i32 0
global ptr width init with i32 0
global ptr active init with i32 1
global ptr sheet2 init with 250000 x i32 zeros
global ptr sheet1 init with 250000 x i32 zeros
void swap12() {
entry80:
  br bb %while.cond83
while.cond83:
  j82.phi = phi [bb %entry80, i32 1, bb %while.exit92, i32 %113]
  height.load87 = load i32 from ptr @height
  88 = icmp sle i32 %j82.phi, i32 %height.load87
  br i1 %88, bb %while.body84, bb %while.exit85
while.body84:
  br bb %while.cond90
while.exit85:
  ret 
while.cond90:
  i81.phi = phi [bb %while.body84, i32 1, bb %while.body91, i32 %111]
  width.load94 = load i32 from ptr @width
  95 = icmp sle i32 %i81.phi, i32 %width.load94
  br i1 %95, bb %while.body91, bb %while.exit92
while.body91:
  98 = mul i32 %j82.phi, i32 2000
  99 = ptradd ptr @sheet1, i32 %98
  101 = mul i32 %i81.phi, i32 4
  102 = ptradd ptr %99, i32 %101
  105 = ptradd ptr @sheet2, i32 %98
  108 = ptradd ptr %105, i32 %101
  108.load = load i32 from ptr %108
  store i32 %108.load to ptr %102
  111 = add i32 %i81.phi, i32 1
  br bb %while.cond90
while.exit92:
  113 = add i32 %j82.phi, i32 1
  br bb %while.cond83
}

void put_map() {
entry45:
  br bb %while.cond48
while.cond48:
  j47.phi = phi [bb %entry45, i32 1, bb %while.exit57, i32 %79]
  height.load52 = load i32 from ptr @height
  53 = icmp sle i32 %j47.phi, i32 %height.load52
  br i1 %53, bb %while.body49, bb %while.exit50
while.body49:
  br bb %while.cond55
while.exit50:
  ret 
while.cond55:
  i46.phi = phi [bb %while.body49, i32 1, bb %if.exit71, i32 %76]
  width.load59 = load i32 from ptr @width
  60 = icmp sle i32 %i46.phi, i32 %width.load59
  br i1 %60, bb %while.body56, bb %while.exit57
while.body56:
  63 = mul i32 %j47.phi, i32 2000
  64 = ptradd ptr @sheet1, i32 %63
  66 = mul i32 %i46.phi, i32 4
  67 = ptradd ptr %64, i32 %66
  67.load = load i32 from ptr %67
  69 = icmp eq i32 %67.load, i32 1
  br i1 %69, bb %then70, bb %else72
while.exit57:
  call void putch(i32 10)
  79 = add i32 %j47.phi, i32 1
  br bb %while.cond48
then70:
  call void putch(i32 35)
  br bb %if.exit71
if.exit71:
  76 = add i32 %i46.phi, i32 1
  br bb %while.cond55
else72:
  call void putch(i32 46)
  br bb %if.exit71
}

external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

i32 main() {
entry252:
  1553 = call i32 getint()
  store i32 %1553 to ptr @width
  2555 = call i32 getint()
  store i32 %2555 to ptr @height
  3557 = call i32 getint()
  store i32 %3557 to ptr @steps
  4559 = call i32 getch()
  br bb %read_map.while.cond
while.cond255:
  steps.load = load i32 from ptr @steps
  259 = icmp sgt i32 %steps.load, i32 0
  br i1 %259, bb %while.body256, bb %while.exit257
while.body256:
  active.load = load i32 from ptr @active
  262 = icmp eq i32 %active.load, i32 1
  br i1 %262, bb %then263, bb %else265
while.exit257:
  call void _sysy_stoptime(i32 106)
  active.load271 = load i32 from ptr @active
  272 = icmp eq i32 %active.load271, i32 2
  br i1 %272, bb %then273, bb %if.exit274
then263:
  br bb %step.while.cond117
if.exit264:
  steps.load268 = load i32 from ptr @steps
  269 = sub i32 %steps.load268, i32 1
  store i32 %269 to ptr @steps
  br bb %while.cond255
else265:
  br bb %step.while.cond117461
then273:
  br bb %swap12.while.cond83
if.exit274:
  br bb %put_map.while.cond48
swap12.while.cond83:
  j82.phi300 = phi [bb %then273, i32 1, bb %swap12.while.exit92, i32 %113325]
  height.load87301 = load i32 from ptr @height
  88302 = icmp sle i32 %j82.phi300, i32 %height.load87301
  br i1 %88302, bb %swap12.while.body84, bb %if.exit274
swap12.while.body84:
  br bb %swap12.while.cond90
swap12.while.cond90:
  i81.phi309 = phi [bb %swap12.while.body84, i32 1, bb %swap12.while.body91, i32 %111322]
  width.load94310 = load i32 from ptr @width
  95311 = icmp sle i32 %i81.phi309, i32 %width.load94310
  br i1 %95311, bb %swap12.while.body91, bb %swap12.while.exit92
swap12.while.body91:
  98314 = mul i32 %j82.phi300, i32 2000
  99315 = ptradd ptr @sheet1, i32 %98314
  101316 = mul i32 %i81.phi309, i32 4
  102317 = ptradd ptr %99315, i32 %101316
  105318 = ptradd ptr @sheet2, i32 %98314
  108319 = ptradd ptr %105318, i32 %101316
  108.load320 = load i32 from ptr %108319
  store i32 %108.load320 to ptr %102317
  111322 = add i32 %i81.phi309, i32 1
  br bb %swap12.while.cond90
swap12.while.exit92:
  113325 = add i32 %j82.phi300, i32 1
  br bb %swap12.while.cond83
put_map.while.cond48:
  j47.phi331 = phi [bb %if.exit274, i32 1, bb %put_map.while.exit57, i32 %79354]
  height.load52332 = load i32 from ptr @height
  53333 = icmp sle i32 %j47.phi331, i32 %height.load52332
  br i1 %53333, bb %put_map.while.body49, bb %put_map.while.exit50
put_map.while.body49:
  br bb %put_map.while.cond55
put_map.while.exit50:
  ret i32 0
put_map.while.cond55:
  i46.phi340 = phi [bb %put_map.while.body49, i32 1, bb %put_map.if.exit71, i32 %76360]
  width.load59341 = load i32 from ptr @width
  60342 = icmp sle i32 %i46.phi340, i32 %width.load59341
  br i1 %60342, bb %put_map.while.body56, bb %put_map.while.exit57
put_map.while.body56:
  63345 = mul i32 %j47.phi331, i32 2000
  64346 = ptradd ptr @sheet1, i32 %63345
  66347 = mul i32 %i46.phi340, i32 4
  67348 = ptradd ptr %64346, i32 %66347
  67.load349 = load i32 from ptr %67348
  69350 = icmp eq i32 %67.load349, i32 1
  br i1 %69350, bb %put_map.then70, bb %put_map.else72
put_map.while.exit57:
  call void putch(i32 10)
  79354 = add i32 %j47.phi331, i32 1
  br bb %put_map.while.cond48
put_map.then70:
  call void putch(i32 35)
  br bb %put_map.if.exit71
put_map.if.exit71:
  76360 = add i32 %i46.phi340, i32 1
  br bb %put_map.while.cond55
put_map.else72:
  call void putch(i32 46)
  br bb %put_map.if.exit71
step.while.cond117:
  select.phi290369 = phi [bb %then263, i1 ub, bb %step.while.exit126, i1 %select.phi289380]
  alive_count.phi287370 = phi [bb %then263, i32 ub, bb %step.while.exit126, i32 %alive_count.phi381]
  j116.phi371 = phi [bb %then263, i32 1, bb %step.while.exit126, i32 %251428]
  height.load121372 = load i32 from ptr @height
  122373 = icmp sle i32 %j116.phi371, i32 %height.load121372
  br i1 %122373, bb %step.while.body118, bb %step.while.exit119
step.while.body118:
  br bb %step.while.cond124
step.while.exit119:
  store i32 2 to ptr @active
  br bb %if.exit264
step.while.cond124:
  select.phi289380 = phi [bb %step.while.body118, i1 %select.phi290369, bb %step.if.exit223, i1 %select.phi436]
  alive_count.phi381 = phi [bb %step.while.body118, i32 %alive_count.phi287370, bb %step.if.exit223, i32 %206422]
  i115.phi382 = phi [bb %step.while.body118, i32 1, bb %step.if.exit223, i32 %155398]
  width.load128383 = load i32 from ptr @width
  129384 = icmp sle i32 %i115.phi382, i32 %width.load128383
  br i1 %129384, bb %step.while.body125, bb %step.while.exit126
step.while.body125:
  133387 = sub i32 %j116.phi371, i32 1
  134388 = mul i32 %133387, i32 2000
  135389 = ptradd ptr @sheet1, i32 %134388
  137390 = sub i32 %i115.phi382, i32 1
  138391 = mul i32 %137390, i32 4
  139392 = ptradd ptr %135389, i32 %138391
  139.load393 = load i32 from ptr %139392
  146394 = mul i32 %i115.phi382, i32 4
  147395 = ptradd ptr %135389, i32 %146394
  147.load396 = load i32 from ptr %147395
  149397 = add i32 %139.load393, i32 %147.load396
  155398 = add i32 %i115.phi382, i32 1
  156399 = mul i32 %155398, i32 4
  157400 = ptradd ptr %135389, i32 %156399
  157.load401 = load i32 from ptr %157400
  159402 = add i32 %149397, i32 %157.load401
  161403 = mul i32 %j116.phi371, i32 2000
  162404 = ptradd ptr @sheet1, i32 %161403
  166405 = ptradd ptr %162404, i32 %138391
  166.load406 = load i32 from ptr %166405
  168407 = add i32 %159402, i32 %166.load406
  175408 = ptradd ptr %162404, i32 %156399
  175.load409 = load i32 from ptr %175408
  177410 = add i32 %168407, i32 %175.load409
  179411 = add i32 %j116.phi371, i32 1
  180412 = mul i32 %179411, i32 2000
  181413 = ptradd ptr @sheet1, i32 %180412
  185414 = ptradd ptr %181413, i32 %138391
  185.load415 = load i32 from ptr %185414
  187416 = add i32 %177410, i32 %185.load415
  194417 = ptradd ptr %181413, i32 %146394
  194.load418 = load i32 from ptr %194417
  196419 = add i32 %187416, i32 %194.load418
  204420 = ptradd ptr %181413, i32 %156399
  204.load421 = load i32 from ptr %204420
  206422 = add i32 %196419, i32 %204.load421
  212423 = ptradd ptr %162404, i32 %146394
  212.load424 = load i32 from ptr %212423
  214425 = icmp eq i32 %212.load424, i32 1
  br i1 %214425, bb %step.select.then, bb %step.select.else
step.while.exit126:
  251428 = add i32 %j116.phi371, i32 1
  br bb %step.while.cond117
step.select.then:
  220431 = icmp eq i32 %206422, i32 2
  br bb %step.select.exit
step.select.else:
  br bb %step.select.exit
step.select.exit:
  select.phi436 = phi [bb %step.select.else, i1 0, bb %step.select.then, i1 %220431]
  br i1 %select.phi436, bb %step.then222, bb %step.else224
step.then222:
  227439 = ptradd ptr @sheet2, i32 %161403
  230440 = ptradd ptr %227439, i32 %146394
  store i32 1 to ptr %230440
  br bb %step.if.exit223
step.if.exit223:
  br bb %step.while.cond124
step.else224:
  232446 = icmp eq i32 %206422, i32 3
  br i1 %232446, bb %step.then233, bb %step.else235
step.then233:
  238449 = ptradd ptr @sheet2, i32 %161403
  241450 = ptradd ptr %238449, i32 %146394
  store i32 1 to ptr %241450
  br bb %step.if.exit223
step.else235:
  244454 = ptradd ptr @sheet2, i32 %161403
  247455 = ptradd ptr %244454, i32 %146394
  store i32 0 to ptr %247455
  br bb %step.if.exit223
step.while.cond117461:
  select.phi290462 = phi [bb %else265, i1 ub, bb %step.while.exit126520, i1 %select.phi289473]
  alive_count.phi287463 = phi [bb %else265, i32 ub, bb %step.while.exit126520, i32 %alive_count.phi474]
  j116.phi464 = phi [bb %else265, i32 1, bb %step.while.exit126520, i32 %251521]
  height.load121465 = load i32 from ptr @height
  122466 = icmp sle i32 %j116.phi464, i32 %height.load121465
  br i1 %122466, bb %step.while.body118468, bb %step.while.exit119470
step.while.body118468:
  br bb %step.while.cond124472
step.while.exit119470:
  store i32 1 to ptr @active
  br bb %if.exit264
step.while.cond124472:
  select.phi289473 = phi [bb %step.while.body118468, i1 %select.phi290462, bb %step.if.exit223536, i1 %select.phi529]
  alive_count.phi474 = phi [bb %step.while.body118468, i32 %alive_count.phi287463, bb %step.if.exit223536, i32 %206515]
  i115.phi475 = phi [bb %step.while.body118468, i32 1, bb %step.if.exit223536, i32 %155491]
  width.load128476 = load i32 from ptr @width
  129477 = icmp sle i32 %i115.phi475, i32 %width.load128476
  br i1 %129477, bb %step.while.body125479, bb %step.while.exit126520
step.while.body125479:
  133480 = sub i32 %j116.phi464, i32 1
  134481 = mul i32 %133480, i32 2000
  135482 = ptradd ptr @sheet2, i32 %134481
  137483 = sub i32 %i115.phi475, i32 1
  138484 = mul i32 %137483, i32 4
  139485 = ptradd ptr %135482, i32 %138484
  139.load486 = load i32 from ptr %139485
  146487 = mul i32 %i115.phi475, i32 4
  147488 = ptradd ptr %135482, i32 %146487
  147.load489 = load i32 from ptr %147488
  149490 = add i32 %139.load486, i32 %147.load489
  155491 = add i32 %i115.phi475, i32 1
  156492 = mul i32 %155491, i32 4
  157493 = ptradd ptr %135482, i32 %156492
  157.load494 = load i32 from ptr %157493
  159495 = add i32 %149490, i32 %157.load494
  161496 = mul i32 %j116.phi464, i32 2000
  162497 = ptradd ptr @sheet2, i32 %161496
  166498 = ptradd ptr %162497, i32 %138484
  166.load499 = load i32 from ptr %166498
  168500 = add i32 %159495, i32 %166.load499
  175501 = ptradd ptr %162497, i32 %156492
  175.load502 = load i32 from ptr %175501
  177503 = add i32 %168500, i32 %175.load502
  179504 = add i32 %j116.phi464, i32 1
  180505 = mul i32 %179504, i32 2000
  181506 = ptradd ptr @sheet2, i32 %180505
  185507 = ptradd ptr %181506, i32 %138484
  185.load508 = load i32 from ptr %185507
  187509 = add i32 %177503, i32 %185.load508
  194510 = ptradd ptr %181506, i32 %146487
  194.load511 = load i32 from ptr %194510
  196512 = add i32 %187509, i32 %194.load511
  204513 = ptradd ptr %181506, i32 %156492
  204.load514 = load i32 from ptr %204513
  206515 = add i32 %196512, i32 %204.load514
  212516 = ptradd ptr %162497, i32 %146487
  212.load517 = load i32 from ptr %212516
  214518 = icmp eq i32 %212.load517, i32 1
  br i1 %214518, bb %step.select.then523, bb %step.select.else526
step.while.exit126520:
  251521 = add i32 %j116.phi464, i32 1
  br bb %step.while.cond117461
step.select.then523:
  220524 = icmp eq i32 %206515, i32 2
  br bb %step.select.exit528
step.select.else526:
  br bb %step.select.exit528
step.select.exit528:
  select.phi529 = phi [bb %step.select.else526, i1 0, bb %step.select.then523, i1 %220524]
  br i1 %select.phi529, bb %step.then222531, bb %step.else224538
step.then222531:
  227532 = ptradd ptr @sheet1, i32 %161496
  230533 = ptradd ptr %227532, i32 %146487
  store i32 1 to ptr %230533
  br bb %step.if.exit223536
step.if.exit223536:
  br bb %step.while.cond124472
step.else224538:
  232539 = icmp eq i32 %206515, i32 3
  br i1 %232539, bb %step.then233541, bb %step.else235546
step.then233541:
  238542 = ptradd ptr @sheet1, i32 %161496
  241543 = ptradd ptr %238542, i32 %146487
  store i32 1 to ptr %241543
  br bb %step.if.exit223536
step.else235546:
  244547 = ptradd ptr @sheet1, i32 %161496
  247548 = ptradd ptr %244547, i32 %146487
  store i32 0 to ptr %247548
  br bb %step.if.exit223536
read_map.while.cond:
  get.phi295562 = phi [bb %entry252, i32 ub, bb %read_map.while.exit16, i32 %get.phi572]
  j.phi563 = phi [bb %entry252, i32 1, bb %read_map.while.exit16, i32 %44583]
  height.load564 = load i32 from ptr @height
  12565 = icmp sle i32 %j.phi563, i32 %height.load564
  br i1 %12565, bb %read_map.while.body, bb %read_map.while.exit
read_map.while.body:
  br bb %read_map.while.cond14
read_map.while.exit:
  call void _sysy_starttime(i32 95)
  br bb %while.cond255
read_map.while.cond14:
  get.phi572 = phi [bb %read_map.while.body, i32 %get.phi295562, bb %read_map.if.exit, i32 %22578]
  i.phi573 = phi [bb %read_map.while.body, i32 1, bb %read_map.if.exit, i32 %41593]
  width.load574 = load i32 from ptr @width
  19575 = icmp sle i32 %i.phi573, i32 %width.load574
  br i1 %19575, bb %read_map.while.body15, bb %read_map.while.exit16
read_map.while.body15:
  22578 = call i32 getch()
  24579 = icmp eq i32 %22578, i32 35
  br i1 %24579, bb %read_map.then, bb %read_map.else
read_map.while.exit16:
  42582 = call i32 getch()
  44583 = add i32 %j.phi563, i32 1
  br bb %read_map.while.cond
read_map.then:
  29586 = mul i32 %j.phi563, i32 2000
  30587 = ptradd ptr @sheet1, i32 %29586
  32588 = mul i32 %i.phi573, i32 4
  33589 = ptradd ptr %30587, i32 %32588
  store i32 1 to ptr %33589
  br bb %read_map.if.exit
read_map.if.exit:
  41593 = add i32 %i.phi573, i32 1
  br bb %read_map.while.cond14
read_map.else:
  35596 = mul i32 %j.phi563, i32 2000
  36597 = ptradd ptr @sheet1, i32 %35596
  38598 = mul i32 %i.phi573, i32 4
  39599 = ptradd ptr %36597, i32 %38598
  store i32 0 to ptr %39599
  br bb %read_map.if.exit
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

void step(ptr source, ptr target) {
entry114:
  br bb %while.cond117
while.cond117:
  select.phi290 = phi [bb %entry114, i1 ub, bb %while.exit126, i1 %select.phi289]
  alive_count.phi287 = phi [bb %entry114, i32 ub, bb %while.exit126, i32 %alive_count.phi]
  j116.phi = phi [bb %entry114, i32 1, bb %while.exit126, i32 %251]
  height.load121 = load i32 from ptr @height
  122 = icmp sle i32 %j116.phi, i32 %height.load121
  br i1 %122, bb %while.body118, bb %while.exit119
while.body118:
  br bb %while.cond124
while.exit119:
  ret 
while.cond124:
  select.phi289 = phi [bb %while.body118, i1 %select.phi290, bb %if.exit223, i1 %select.phi]
  alive_count.phi = phi [bb %while.body118, i32 %alive_count.phi287, bb %if.exit223, i32 %206]
  i115.phi = phi [bb %while.body118, i32 1, bb %if.exit223, i32 %155]
  width.load128 = load i32 from ptr @width
  129 = icmp sle i32 %i115.phi, i32 %width.load128
  br i1 %129, bb %while.body125, bb %while.exit126
while.body125:
  133 = sub i32 %j116.phi, i32 1
  134 = mul i32 %133, i32 2000
  135 = ptradd ptr %source, i32 %134
  137 = sub i32 %i115.phi, i32 1
  138 = mul i32 %137, i32 4
  139 = ptradd ptr %135, i32 %138
  139.load = load i32 from ptr %139
  146 = mul i32 %i115.phi, i32 4
  147 = ptradd ptr %135, i32 %146
  147.load = load i32 from ptr %147
  149 = add i32 %139.load, i32 %147.load
  155 = add i32 %i115.phi, i32 1
  156 = mul i32 %155, i32 4
  157 = ptradd ptr %135, i32 %156
  157.load = load i32 from ptr %157
  159 = add i32 %149, i32 %157.load
  161 = mul i32 %j116.phi, i32 2000
  162 = ptradd ptr %source, i32 %161
  166 = ptradd ptr %162, i32 %138
  166.load = load i32 from ptr %166
  168 = add i32 %159, i32 %166.load
  175 = ptradd ptr %162, i32 %156
  175.load = load i32 from ptr %175
  177 = add i32 %168, i32 %175.load
  179 = add i32 %j116.phi, i32 1
  180 = mul i32 %179, i32 2000
  181 = ptradd ptr %source, i32 %180
  185 = ptradd ptr %181, i32 %138
  185.load = load i32 from ptr %185
  187 = add i32 %177, i32 %185.load
  194 = ptradd ptr %181, i32 %146
  194.load = load i32 from ptr %194
  196 = add i32 %187, i32 %194.load
  204 = ptradd ptr %181, i32 %156
  204.load = load i32 from ptr %204
  206 = add i32 %196, i32 %204.load
  212 = ptradd ptr %162, i32 %146
  212.load = load i32 from ptr %212
  214 = icmp eq i32 %212.load, i32 1
  br i1 %214, bb %select.then, bb %select.else
while.exit126:
  251 = add i32 %j116.phi, i32 1
  br bb %while.cond117
select.then:
  220 = icmp eq i32 %206, i32 2
  br bb %select.exit
select.else:
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 0, bb %select.then, i1 %220]
  br i1 %select.phi, bb %then222, bb %else224
then222:
  227 = ptradd ptr %target, i32 %161
  230 = ptradd ptr %227, i32 %146
  store i32 1 to ptr %230
  br bb %if.exit223
if.exit223:
  br bb %while.cond124
else224:
  232 = icmp eq i32 %206, i32 3
  br i1 %232, bb %then233, bb %else235
then233:
  238 = ptradd ptr %target, i32 %161
  241 = ptradd ptr %238, i32 %146
  store i32 1 to ptr %241
  br bb %if.exit223
else235:
  244 = ptradd ptr %target, i32 %161
  247 = ptradd ptr %244, i32 %146
  store i32 0 to ptr %247
  br bb %if.exit223
}

external i32 getfarray(ptr )

void read_map() {
entry:
  1 = call i32 getint()
  store i32 %1 to ptr @width
  2 = call i32 getint()
  store i32 %2 to ptr @height
  3 = call i32 getint()
  store i32 %3 to ptr @steps
  4 = call i32 getch()
  br bb %while.cond
while.cond:
  get.phi295 = phi [bb %entry, i32 ub, bb %while.exit16, i32 %get.phi]
  j.phi = phi [bb %entry, i32 1, bb %while.exit16, i32 %44]
  height.load = load i32 from ptr @height
  12 = icmp sle i32 %j.phi, i32 %height.load
  br i1 %12, bb %while.body, bb %while.exit
while.body:
  br bb %while.cond14
while.exit:
  ret 
while.cond14:
  get.phi = phi [bb %while.body, i32 %get.phi295, bb %if.exit, i32 %22]
  i.phi = phi [bb %while.body, i32 1, bb %if.exit, i32 %41]
  width.load = load i32 from ptr @width
  19 = icmp sle i32 %i.phi, i32 %width.load
  br i1 %19, bb %while.body15, bb %while.exit16
while.body15:
  22 = call i32 getch()
  24 = icmp eq i32 %22, i32 35
  br i1 %24, bb %then, bb %else
while.exit16:
  42 = call i32 getch()
  44 = add i32 %j.phi, i32 1
  br bb %while.cond
then:
  29 = mul i32 %j.phi, i32 2000
  30 = ptradd ptr @sheet1, i32 %29
  32 = mul i32 %i.phi, i32 4
  33 = ptradd ptr %30, i32 %32
  store i32 1 to ptr %33
  br bb %if.exit
if.exit:
  41 = add i32 %i.phi, i32 1
  br bb %while.cond14
else:
  35 = mul i32 %j.phi, i32 2000
  36 = ptradd ptr @sheet1, i32 %35
  38 = mul i32 %i.phi, i32 4
  39 = ptradd ptr %36, i32 %38
  store i32 0 to ptr %39
  br bb %if.exit
}


