global ptr image_out init with 524288 x i32 zeros
global ptr image_in init with 524288 x i32 zeros
immutable global ptr height init with i32 1024
immutable global ptr width init with i32 512
external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry12:
  16 = call i32 getarray(ptr @image_in)
  call void _sysy_starttime(i32 23)
  br bb %while.cond
while.cond:
  val.phi259 = phi [bb %entry12, i32 ub, bb %while.exit28, i32 %val.phi]
  ip1jp1.phi257 = phi [bb %entry12, i32 ub, bb %while.exit28, i32 %ip1jp1.phi]
  im1jp1.phi255 = phi [bb %entry12, i32 ub, bb %while.exit28, i32 %im1jp1.phi]
  ip1j.phi253 = phi [bb %entry12, i32 ub, bb %while.exit28, i32 %ip1j.phi]
  im1j.phi251 = phi [bb %entry12, i32 ub, bb %while.exit28, i32 %im1j.phi]
  im1jm1.phi249 = phi [bb %entry12, i32 ub, bb %while.exit28, i32 %im1jm1.phi]
  ip1jm1.phi244 = phi [bb %entry12, i32 ub, bb %while.exit28, i32 %ip1jm1.phi]
  ijp1.phi242 = phi [bb %entry12, i32 ub, bb %while.exit28, i32 %ijp1.phi]
  ij.phi240 = phi [bb %entry12, i32 ub, bb %while.exit28, i32 %ij.phi]
  ijm1.phi238 = phi [bb %entry12, i32 ub, bb %while.exit28, i32 %ijm1.phi]
  j.phi236 = phi [bb %entry12, i32 1, bb %while.exit28, i32 %158]
  24 = icmp slt i32 %j.phi236, i32 511
  br i1 %24, bb %while.body, bb %while.exit
while.body:
  br bb %while.cond26
while.exit:
  br bb %while.cond159
while.cond26:
  val.phi = phi [bb %while.body, i32 %val.phi259, bb %cutout.if.exit, i32 %145]
  ip1jp1.phi = phi [bb %while.body, i32 %ip1jp1.phi257, bb %cutout.if.exit, i32 %99]
  im1jp1.phi = phi [bb %while.body, i32 %im1jp1.phi255, bb %cutout.if.exit, i32 %56]
  ip1j.phi = phi [bb %while.body, i32 %ip1j.phi253, bb %cutout.if.exit, i32 %83]
  im1j.phi = phi [bb %while.body, i32 %im1j.phi251, bb %cutout.if.exit, i32 %40]
  im1jm1.phi = phi [bb %while.body, i32 %im1jm1.phi249, bb %cutout.if.exit, i32 %41]
  i.phi246 = phi [bb %while.body, i32 1, bb %cutout.if.exit, i32 %79]
  ip1jm1.phi = phi [bb %while.body, i32 %ip1jm1.phi244, bb %cutout.if.exit, i32 %84]
  ijp1.phi = phi [bb %while.body, i32 %ijp1.phi242, bb %cutout.if.exit, i32 %76]
  ij.phi = phi [bb %while.body, i32 %ij.phi240, bb %cutout.if.exit, i32 %62]
  ijm1.phi = phi [bb %while.body, i32 %ijm1.phi238, bb %cutout.if.exit, i32 %63]
  32 = icmp slt i32 %i.phi246, i32 1023
  br i1 %32, bb %while.body27, bb %while.exit28
while.body27:
  36 = sub i32 %i.phi246, i32 1
  262 = shl i32 %36, i32 9
  40 = add i32 %262, i32 %j.phi236
  41 = sub i32 %40, i32 1
  56 = add i32 %40, i32 1
  265 = shl i32 %i.phi246, i32 9
  62 = add i32 %265, i32 %j.phi236
  63 = sub i32 %62, i32 1
  76 = add i32 %62, i32 1
  79 = add i32 %i.phi246, i32 1
  268 = shl i32 %79, i32 9
  83 = add i32 %268, i32 %j.phi236
  84 = sub i32 %83, i32 1
  99 = add i32 %83, i32 1
  271 = shl i32 %62, i32 2
  103 = ptradd ptr @image_in, i32 %271
  103.load = load i32 from ptr %103
  105 = mul i32 8, i32 %103.load
  272 = shl i32 %41, i32 2
  108 = ptradd ptr @image_in, i32 %272
  108.load = load i32 from ptr %108
  110 = sub i32 %105, i32 %108.load
  273 = shl i32 %40, i32 2
  113 = ptradd ptr @image_in, i32 %273
  113.load = load i32 from ptr %113
  115 = sub i32 %110, i32 %113.load
  274 = shl i32 %56, i32 2
  118 = ptradd ptr @image_in, i32 %274
  118.load = load i32 from ptr %118
  120 = sub i32 %115, i32 %118.load
  275 = shl i32 %63, i32 2
  123 = ptradd ptr @image_in, i32 %275
  123.load = load i32 from ptr %123
  125 = sub i32 %120, i32 %123.load
  276 = shl i32 %76, i32 2
  128 = ptradd ptr @image_in, i32 %276
  128.load = load i32 from ptr %128
  130 = sub i32 %125, i32 %128.load
  277 = shl i32 %84, i32 2
  133 = ptradd ptr @image_in, i32 %277
  133.load = load i32 from ptr %133
  135 = sub i32 %130, i32 %133.load
  278 = shl i32 %83, i32 2
  138 = ptradd ptr @image_in, i32 %278
  138.load = load i32 from ptr %138
  140 = sub i32 %135, i32 %138.load
  279 = shl i32 %99, i32 2
  143 = ptradd ptr @image_in, i32 %279
  143.load = load i32 from ptr %143
  145 = sub i32 %140, i32 %143.load
  152 = ptradd ptr @image_out, i32 %271
  3302 = icmp slt i32 %145, i32 0
  br i1 %3302, bb %cutout.then, bb %cutout.else
while.exit28:
  158 = add i32 %j.phi236, i32 1
  br bb %while.cond
while.cond159:
  i.phi = phi [bb %while.exit, i32 0, bb %while.body160, i32 %195]
  164 = icmp slt i32 %i.phi, i32 1024
  br i1 %164, bb %while.body160, bb %while.exit161
while.body160:
  282 = shl i32 %i.phi, i32 9
  283 = shl i32 %282, i32 2
  170 = ptradd ptr @image_out, i32 %283
  175 = ptradd ptr @image_in, i32 %283
  175.load = load i32 from ptr %175
  store i32 %175.load to ptr %170
  288 = add i32 %282, i32 511
  289 = shl i32 %288, i32 2
  184 = ptradd ptr @image_out, i32 %289
  192 = ptradd ptr @image_in, i32 %289
  192.load = load i32 from ptr %192
  store i32 %192.load to ptr %184
  195 = add i32 %i.phi, i32 1
  br bb %while.cond159
while.exit161:
  br bb %while.cond196
while.cond196:
  j.phi = phi [bb %while.exit161, i32 0, bb %while.body197, i32 %228]
  201 = icmp slt i32 %j.phi, i32 512
  br i1 %201, bb %while.body197, bb %while.exit198
while.body197:
  294 = shl i32 %j.phi, i32 2
  205 = ptradd ptr @image_out, i32 %294
  208 = ptradd ptr @image_in, i32 %294
  208.load = load i32 from ptr %208
  store i32 %208.load to ptr %205
  296 = add i32 %j.phi, i32 523776
  297 = shl i32 %296, i32 2
  217 = ptradd ptr @image_out, i32 %297
  225 = ptradd ptr @image_in, i32 %297
  225.load = load i32 from ptr %225
  store i32 %225.load to ptr %217
  228 = add i32 %j.phi, i32 1
  br bb %while.cond196
while.exit198:
  call void _sysy_stoptime(i32 59)
  call void putarray(i32 524288, ptr @image_out)
  ret i32 %16
cutout.then:
  br bb %cutout.if.exit
cutout.if.exit:
  val.stack.phi261307 = phi [bb %cutout.if.exit10, i32 %val.stack.phi315, bb %cutout.then, i32 0]
  store i32 %val.stack.phi261307 to ptr %152
  br bb %while.cond26
cutout.else:
  8310 = icmp sgt i32 %145, i32 255
  br i1 %8310, bb %cutout.then9, bb %cutout.if.exit10
cutout.then9:
  br bb %cutout.if.exit10
cutout.if.exit10:
  val.stack.phi315 = phi [bb %cutout.else, i32 %145, bb %cutout.then9, i32 255]
  br bb %cutout.if.exit
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

pure i32 cutout(i32 val) {
entry:
  3 = icmp slt i32 %val, i32 0
  br i1 %3, bb %then, bb %else
then:
  br bb %if.exit
if.exit:
  val.stack.phi261 = phi [bb %if.exit10, i32 %val.stack.phi, bb %then, i32 0]
  ret i32 %val.stack.phi261
else:
  8 = icmp sgt i32 %val, i32 255
  br i1 %8, bb %then9, bb %if.exit10
then9:
  br bb %if.exit10
if.exit10:
  val.stack.phi = phi [bb %else, i32 %val, bb %then9, i32 255]
  br bb %if.exit
}


