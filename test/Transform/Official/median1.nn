global ptr a init with 10000000 x i32 zeros
global ptr n init with i32 0
i32 median(ptr arr, i32 begin, i32 end, i32 pos) {
entry50:
  177 = shl i32 %begin, i32 2
  57 = ptradd ptr %arr, i32 %177
  57.load = load i32 from ptr %57
  63 = add i32 %end, i32 1
  br bb %while.cond65
while.cond65:
  xx.phi171 = phi [bb %entry50, i32 0, bb %meanless_calculation.while.exit249, i32 %xx.phi]
  r.phi168 = phi [bb %entry50, i32 %63, bb %meanless_calculation.while.exit249, i32 %r.phi]
  l.phi164 = phi [bb %entry50, i32 %begin, bb %meanless_calculation.while.exit249, i32 %l.phi]
  br bb %while.cond70
while.cond70:
  xx.phi172 = phi [bb %while.cond65, i32 %xx.phi171, bb %if.exit, i32 %88]
  r.phi166 = phi [bb %while.cond65, i32 %r.phi168, bb %if.exit, i32 %78]
  75 = icmp slt i32 %l.phi164, i32 %r.phi166
  br i1 %75, bb %while.body71, bb %while.exit72
while.body71:
  78 = sub i32 %r.phi166, i32 1
  179 = shl i32 %78, i32 2
  81 = ptradd ptr %arr, i32 %179
  81.load = load i32 from ptr %81
  84 = icmp slt i32 %81.load, i32 %57.load
  br i1 %84, bb %then, bb %if.exit
while.exit72:
  r.phi = phi [bb %while.cond70, i32 %r.phi166, bb %then, i32 %78]
  br bb %while.cond89
then:
  br bb %while.exit72
if.exit:
  88 = add i32 %xx.phi172, i32 1
  br bb %while.cond70
while.cond89:
  xx.phi = phi [bb %while.exit72, i32 %xx.phi172, bb %if.exit105, i32 %107]
  l.phi162 = phi [bb %while.exit72, i32 %l.phi164, bb %if.exit105, i32 %97]
  94 = icmp slt i32 %l.phi162, i32 %r.phi
  br i1 %94, bb %while.body90, bb %while.exit91
while.body90:
  97 = add i32 %l.phi162, i32 1
  180 = shl i32 %97, i32 2
  100 = ptradd ptr %arr, i32 %180
  100.load = load i32 from ptr %100
  103 = icmp sge i32 %100.load, i32 %57.load
  br i1 %103, bb %then104, bb %if.exit105
while.exit91:
  l.phi = phi [bb %while.cond89, i32 %l.phi162, bb %then104, i32 %97]
  110 = icmp eq i32 %l.phi, i32 %r.phi
  br i1 %110, bb %then111, bb %else
then104:
  br bb %while.exit91
if.exit105:
  107 = sub i32 %xx.phi, i32 1
  br bb %while.cond89
then111:
  store i32 %57.load to ptr %57
  34.load203 = load i32 from ptr %57
  183204 = shl i32 %l.phi, i32 2
  41205 = ptradd ptr %arr, i32 %183204
  41.load206 = load i32 from ptr %41205
  store i32 %41.load206 to ptr %57
  store i32 %34.load203 to ptr %41205
  br bb %meanless_calculation.while.cond263
else:
  181188 = shl i32 %l.phi, i32 2
  34189 = ptradd ptr %arr, i32 %181188
  34.load190 = load i32 from ptr %34189
  183191 = shl i32 %r.phi, i32 2
  41192 = ptradd ptr %arr, i32 %183191
  41.load193 = load i32 from ptr %41192
  store i32 %41.load193 to ptr %34189
  store i32 %34.load190 to ptr %41192
  br bb %meanless_calculation.while.cond239
then127:
  132 = call i32 median(ptr %arr, i32 %begin, i32 %l.phi, i32 %pos)
  ret i32 %132
if.exit128:
  135 = icmp slt i32 %l.phi, i32 %pos
  br i1 %135, bb %then136, bb %if.exit137
then136:
  139 = add i32 %l.phi, i32 1
  142 = call i32 median(ptr %arr, i32 %139, i32 %end, i32 %pos)
  ret i32 %142
if.exit137:
  ret i32 %xx.phi
meanless_calculation.while.cond239:
  ret.phi240 = phi [bb %else, i32 0, bb %meanless_calculation.while.body244, i32 %26247]
  i.phi241 = phi [bb %else, i32 0, bb %meanless_calculation.while.body244, i32 %21245]
  10242 = icmp slt i32 %i.phi241, i32 %l.phi
  br i1 %10242, bb %meanless_calculation.select.then251, bb %meanless_calculation.select.else254
meanless_calculation.while.body244:
  21245 = add i32 %i.phi241, i32 1
  24246 = add i32 %ret.phi240, i32 %l.phi
  26247 = add i32 %24246, i32 %21245
  br bb %meanless_calculation.while.cond239
meanless_calculation.while.exit249:
  br bb %while.cond65
meanless_calculation.select.then251:
  17252 = icmp slt i32 %i.phi241, i32 %r.phi
  br bb %meanless_calculation.select.exit256
meanless_calculation.select.else254:
  br bb %meanless_calculation.select.exit256
meanless_calculation.select.exit256:
  select.phi257 = phi [bb %meanless_calculation.select.else254, i1 0, bb %meanless_calculation.select.then251, i1 %17252]
  br i1 %select.phi257, bb %meanless_calculation.while.body244, bb %meanless_calculation.while.exit249
meanless_calculation.while.cond263:
  ret.phi264 = phi [bb %then111, i32 0, bb %meanless_calculation.while.body268, i32 %26271]
  i.phi265 = phi [bb %then111, i32 0, bb %meanless_calculation.while.body268, i32 %21269]
  10266 = icmp slt i32 %i.phi265, i32 %begin
  br i1 %10266, bb %meanless_calculation.select.then275, bb %meanless_calculation.select.else278
meanless_calculation.while.body268:
  21269 = add i32 %i.phi265, i32 1
  24270 = add i32 %ret.phi264, i32 %begin
  26271 = add i32 %24270, i32 %21269
  br bb %meanless_calculation.while.cond263
meanless_calculation.while.exit273:
  126 = icmp sgt i32 %l.phi, i32 %pos
  br i1 %126, bb %then127, bb %if.exit128
meanless_calculation.select.then275:
  17276 = icmp slt i32 %i.phi265, i32 %l.phi
  br bb %meanless_calculation.select.exit280
meanless_calculation.select.else278:
  br bb %meanless_calculation.select.exit280
meanless_calculation.select.exit280:
  select.phi281 = phi [bb %meanless_calculation.select.else278, i1 0, bb %meanless_calculation.select.then275, i1 %17276]
  br i1 %select.phi281, bb %meanless_calculation.while.body268, bb %meanless_calculation.while.exit273
}

i32 swap(ptr arr, i32 l, i32 r) {
entry28:
  181 = shl i32 %l, i32 2
  34 = ptradd ptr %arr, i32 %181
  34.load = load i32 from ptr %34
  183 = shl i32 %r, i32 2
  41 = ptradd ptr %arr, i32 %183
  41.load = load i32 from ptr %41
  store i32 %41.load to ptr %34
  store i32 %34.load to ptr %41
  br bb %meanless_calculation.while.cond
meanless_calculation.while.cond:
  ret.phi216 = phi [bb %entry28, i32 0, bb %meanless_calculation.while.body, i32 %26223]
  i.phi217 = phi [bb %entry28, i32 0, bb %meanless_calculation.while.body, i32 %21221]
  10218 = icmp slt i32 %i.phi217, i32 %l
  br i1 %10218, bb %meanless_calculation.select.then, bb %meanless_calculation.select.else
meanless_calculation.while.body:
  21221 = add i32 %i.phi217, i32 1
  24222 = add i32 %ret.phi216, i32 %l
  26223 = add i32 %24222, i32 %21221
  br bb %meanless_calculation.while.cond
meanless_calculation.while.exit:
  ret i32 %ret.phi216
meanless_calculation.select.then:
  17228 = icmp slt i32 %i.phi217, i32 %r
  br bb %meanless_calculation.select.exit
meanless_calculation.select.else:
  br bb %meanless_calculation.select.exit
meanless_calculation.select.exit:
  select.phi233 = phi [bb %meanless_calculation.select.else, i1 0, bb %meanless_calculation.select.then, i1 %17228]
  br i1 %select.phi233, bb %meanless_calculation.while.body, bb %meanless_calculation.while.exit
}

external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry144:
  145 = call i32 getarray(ptr @a)
  store i32 %145 to ptr @n
  call void _sysy_starttime(i32 59)
  n.load = load i32 from ptr @n
  148 = sub i32 %n.load, i32 1
  150 = sdiv i32 %n.load, i32 2
  151 = call i32 median(ptr @a, i32 0, i32 %148, i32 %150)
  call void _sysy_stoptime(i32 61)
  n.load153 = load i32 from ptr @n
  call void putarray(i32 %n.load153, ptr @a)
  n.load155 = load i32 from ptr @n
  156 = sdiv i32 %n.load155, i32 2
  185 = shl i32 %156, i32 2
  158 = ptradd ptr @a, i32 %185
  158.load = load i32 from ptr %158
  160 = srem i32 %158.load, i32 256
  ret i32 %160
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

pure i32 meanless_calculation(i32 x, i32 y) {
entry:
  br bb %while.cond
while.cond:
  ret.phi = phi [bb %entry, i32 0, bb %while.body, i32 %26]
  i.phi = phi [bb %entry, i32 0, bb %while.body, i32 %21]
  10 = icmp slt i32 %i.phi, i32 %x
  br i1 %10, bb %select.then, bb %select.else
while.body:
  21 = add i32 %i.phi, i32 1
  24 = add i32 %ret.phi, i32 %x
  26 = add i32 %24, i32 %21
  br bb %while.cond
while.exit:
  ret i32 %ret.phi
select.then:
  17 = icmp slt i32 %i.phi, i32 %y
  br bb %select.exit
select.else:
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 0, bb %select.then, i1 %17]
  br i1 %select.phi, bb %while.body, bb %while.exit
}

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


