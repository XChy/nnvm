global ptr ans init with i32 0
internal global ptr a init with 30000010 x i32 zeros
external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry351:  pred()
  353 = call i32 getarray(ptr @a)
  call void _sysy_starttime(i32 90)
  call void radixSort(i32 8, ptr @a, i32 0, i32 %353)
  363503 = icmp slt i32 0, i32 %353
  br i1 %363503, bb %while.body359_preheader, bb %while.exit360
while.body359_preheader:  pred(entry351)
  br bb %while.body359
while.body359:  pred(while.body359, while.body359_preheader)
  i357.phi504 = phi [bb %while.body359, i32 %379, bb %while.body359_preheader, i32 0]
  ans.load366 = load i32 from ptr @ans
  490 = shl i32 %i357.phi504, i32 2
  370 = ptradd ptr @a, i32 %490
  370.load = load i32 from ptr %370
  409 = add i32 %i357.phi504, i32 2
  374 = srem i32 %370.load, i32 %409
  375 = mul i32 %i357.phi504, i32 %374
  376 = add i32 %ans.load366, i32 %375
  store i32 %376 to ptr @ans
  379 = add i32 %i357.phi504, i32 1
  363 = icmp slt i32 %379, i32 %353
  br i1 %363, bb %while.body359, bb %while.exit360
while.exit360:  pred(while.body359, entry351)
  ans.load380 = load i32 from ptr @ans
  381 = icmp slt i32 %ans.load380, i32 0
  br i1 %381, bb %then382, bb %if.exit383
then382:  pred(while.exit360)
  ans.load385 = load i32 from ptr @ans
  386 = sub i32 0, i32 %ans.load385
  store i32 %386 to ptr @ans
  br bb %if.exit383
if.exit383:  pred(while.exit360, then382)
  call void _sysy_stoptime(i32 102)
  ans.load388 = load i32 from ptr @ans
  call void putint(i32 %ans.load388)
  call void putch(i32 10)
  ret i32 0
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

internal void radixSort(i32 bitround, ptr a, i32 l, i32 r) {
entry50:  pred()
  %cnt = stack 64
  %tail = stack 64
  %head = stack 64
  arr.index56 = ptradd ptr %head, i32 4
  arr.index57 = ptradd ptr %head, i32 8
  arr.index58 = ptradd ptr %head, i32 12
  arr.index59 = ptradd ptr %head, i32 16
  arr.index60 = ptradd ptr %head, i32 20
  arr.index61 = ptradd ptr %head, i32 24
  arr.index62 = ptradd ptr %head, i32 28
  arr.index63 = ptradd ptr %head, i32 32
  arr.index64 = ptradd ptr %head, i32 36
  arr.index65 = ptradd ptr %head, i32 40
  arr.index66 = ptradd ptr %head, i32 44
  arr.index67 = ptradd ptr %head, i32 48
  arr.index68 = ptradd ptr %head, i32 52
  arr.index69 = ptradd ptr %head, i32 56
  arr.index70 = ptradd ptr %head, i32 60
  arr.index73 = ptradd ptr %tail, i32 4
  arr.index74 = ptradd ptr %tail, i32 8
  arr.index75 = ptradd ptr %tail, i32 12
  arr.index76 = ptradd ptr %tail, i32 16
  arr.index77 = ptradd ptr %tail, i32 20
  arr.index78 = ptradd ptr %tail, i32 24
  arr.index79 = ptradd ptr %tail, i32 28
  arr.index80 = ptradd ptr %tail, i32 32
  arr.index81 = ptradd ptr %tail, i32 36
  arr.index82 = ptradd ptr %tail, i32 40
  arr.index83 = ptradd ptr %tail, i32 44
  arr.index84 = ptradd ptr %tail, i32 48
  arr.index85 = ptradd ptr %tail, i32 52
  arr.index86 = ptradd ptr %tail, i32 56
  arr.index87 = ptradd ptr %tail, i32 60
  store i32 0 to ptr %cnt
  arr.index90 = ptradd ptr %cnt, i32 4
  store i32 0 to ptr %arr.index90
  arr.index91 = ptradd ptr %cnt, i32 8
  store i32 0 to ptr %arr.index91
  arr.index92 = ptradd ptr %cnt, i32 12
  store i32 0 to ptr %arr.index92
  arr.index93 = ptradd ptr %cnt, i32 16
  store i32 0 to ptr %arr.index93
  arr.index94 = ptradd ptr %cnt, i32 20
  store i32 0 to ptr %arr.index94
  arr.index95 = ptradd ptr %cnt, i32 24
  store i32 0 to ptr %arr.index95
  arr.index96 = ptradd ptr %cnt, i32 28
  store i32 0 to ptr %arr.index96
  arr.index97 = ptradd ptr %cnt, i32 32
  store i32 0 to ptr %arr.index97
  arr.index98 = ptradd ptr %cnt, i32 36
  store i32 0 to ptr %arr.index98
  arr.index99 = ptradd ptr %cnt, i32 40
  store i32 0 to ptr %arr.index99
  arr.index100 = ptradd ptr %cnt, i32 44
  store i32 0 to ptr %arr.index100
  arr.index101 = ptradd ptr %cnt, i32 48
  store i32 0 to ptr %arr.index101
  arr.index102 = ptradd ptr %cnt, i32 52
  store i32 0 to ptr %arr.index102
  arr.index103 = ptradd ptr %cnt, i32 56
  store i32 0 to ptr %arr.index103
  arr.index104 = ptradd ptr %cnt, i32 60
  store i32 0 to ptr %arr.index104
  107 = icmp eq i32 %bitround, i32 -1
  br i1 %107, bb %select.then, bb %select.else
select.then:  pred(entry50)
  br bb %select.exit
select.else:  pred(entry50)
  113 = add i32 %l, i32 1
  115 = icmp sge i32 %113, i32 %r
  br bb %select.exit
select.exit:  pred(select.then, select.else)
  select.phi = phi [bb %select.else, i1 %115, bb %select.then, i1 -1]
  br i1 %select.phi, bb %then118, bb %if.exit119
then118:  pred(select.exit)
  ret 
if.exit119:  pred(select.exit)
  127533 = icmp slt i32 %l, i32 %r
  br i1 %127533, bb %while.body123_preheader, bb %while.exit124
while.body123_preheader:  pred(if.exit119)
  38451505 = icmp slt i32 0, i32 %bitround
  br bb %while.body123
while.body123:  pred(getNumPos.while.exit35, while.body123_preheader)
  i120.phi397534 = phi [bb %getNumPos.while.exit35, i32 %150, bb %while.body123_preheader, i32 %l]
  491 = shl i32 %i120.phi397534, i32 2
  131 = ptradd ptr %a, i32 %491
  131.load = load i32 from ptr %131
  br i1 %38451505, bb %getNumPos.while.body34_preheader, bb %getNumPos.while.exit35
while.exit124:  pred(getNumPos.while.exit35, if.exit119)
  store i32 %l to ptr %head
  160.load = load i32 from ptr %cnt
  162 = add i32 %l, i32 %160.load
  store i32 %162 to ptr %tail
  store i32 %162 to ptr %arr.index56
  190.load = load i32 from ptr %arr.index90
  192 = add i32 %162, i32 %190.load
  store i32 %192 to ptr %arr.index73
  store i32 %192 to ptr %arr.index57
  190.load974 = load i32 from ptr %arr.index91
  192975 = add i32 %192, i32 %190.load974
  store i32 %192975 to ptr %arr.index74
  store i32 %192975 to ptr %arr.index58
  190.load991 = load i32 from ptr %arr.index92
  192992 = add i32 %192975, i32 %190.load991
  store i32 %192992 to ptr %arr.index75
  store i32 %192992 to ptr %arr.index59
  190.load1008 = load i32 from ptr %arr.index93
  1921009 = add i32 %192992, i32 %190.load1008
  store i32 %1921009 to ptr %arr.index76
  store i32 %1921009 to ptr %arr.index60
  190.load1025 = load i32 from ptr %arr.index94
  1921026 = add i32 %1921009, i32 %190.load1025
  store i32 %1921026 to ptr %arr.index77
  store i32 %1921026 to ptr %arr.index61
  190.load1042 = load i32 from ptr %arr.index95
  1921043 = add i32 %1921026, i32 %190.load1042
  store i32 %1921043 to ptr %arr.index78
  store i32 %1921043 to ptr %arr.index62
  190.load1059 = load i32 from ptr %arr.index96
  1921060 = add i32 %1921043, i32 %190.load1059
  store i32 %1921060 to ptr %arr.index79
  store i32 %1921060 to ptr %arr.index63
  190.load1076 = load i32 from ptr %arr.index97
  1921077 = add i32 %1921060, i32 %190.load1076
  store i32 %1921077 to ptr %arr.index80
  store i32 %1921077 to ptr %arr.index64
  190.load1093 = load i32 from ptr %arr.index98
  1921094 = add i32 %1921077, i32 %190.load1093
  store i32 %1921094 to ptr %arr.index81
  store i32 %1921094 to ptr %arr.index65
  190.load1110 = load i32 from ptr %arr.index99
  1921111 = add i32 %1921094, i32 %190.load1110
  store i32 %1921111 to ptr %arr.index82
  store i32 %1921111 to ptr %arr.index66
  190.load1127 = load i32 from ptr %arr.index100
  1921128 = add i32 %1921111, i32 %190.load1127
  store i32 %1921128 to ptr %arr.index83
  store i32 %1921128 to ptr %arr.index67
  190.load1144 = load i32 from ptr %arr.index101
  1921145 = add i32 %1921128, i32 %190.load1144
  store i32 %1921145 to ptr %arr.index84
  store i32 %1921145 to ptr %arr.index68
  190.load1161 = load i32 from ptr %arr.index102
  1921162 = add i32 %1921145, i32 %190.load1161
  store i32 %1921162 to ptr %arr.index85
  store i32 %1921162 to ptr %arr.index69
  190.load1178 = load i32 from ptr %arr.index103
  1921179 = add i32 %1921162, i32 %190.load1178
  store i32 %1921179 to ptr %arr.index86
  store i32 %1921179 to ptr %arr.index70
  190.load1195 = load i32 from ptr %arr.index104
  1921196 = add i32 %1921179, i32 %190.load1195
  store i32 %1921196 to ptr %arr.index87
  br bb %while.body198
while.body198:  pred(while.exit206, while.exit124)
  i120.phi530 = phi [bb %while.exit206, i32 %288, bb %while.exit124, i32 0]
  t.phi400529 = phi [bb %while.exit206, i32 %t.phi400520, bb %while.exit124, i32 0]
  v.phi403528 = phi [bb %while.exit206, i32 %v.phi403519, bb %while.exit124, i32 0]
  494513 = shl i32 %i120.phi530, i32 2
  209514 = ptradd ptr %head, i32 %494513
  209.load515 = load i32 from ptr %209514
  213516 = ptradd ptr %tail, i32 %494513
  213.load517 = load i32 from ptr %213516
  215518 = icmp slt i32 %209.load515, i32 %213.load517
  br i1 %215518, bb %while.body205_preheader, bb %while.exit206
while.exit199:  pred(while.exit206)
  300.load = load i32 from ptr %cnt
  302 = add i32 %l, i32 %300.load
  440 = add i32 %bitround, i32 -1
  call void radixSort(i32 %440, ptr %a, i32 %l, i32 %302)
  334.load572 = load i32 from ptr %arr.index90
  336573 = add i32 %302, i32 %334.load572
  call void radixSort(i32 %440, ptr %a, i32 %302, i32 %336573)
  334.load599 = load i32 from ptr %arr.index91
  336600 = add i32 %336573, i32 %334.load599
  call void radixSort(i32 %440, ptr %a, i32 %336573, i32 %336600)
  334.load626 = load i32 from ptr %arr.index92
  336627 = add i32 %336600, i32 %334.load626
  call void radixSort(i32 %440, ptr %a, i32 %336600, i32 %336627)
  334.load653 = load i32 from ptr %arr.index93
  336654 = add i32 %336627, i32 %334.load653
  call void radixSort(i32 %440, ptr %a, i32 %336627, i32 %336654)
  334.load680 = load i32 from ptr %arr.index94
  336681 = add i32 %336654, i32 %334.load680
  call void radixSort(i32 %440, ptr %a, i32 %336654, i32 %336681)
  334.load707 = load i32 from ptr %arr.index95
  336708 = add i32 %336681, i32 %334.load707
  call void radixSort(i32 %440, ptr %a, i32 %336681, i32 %336708)
  334.load734 = load i32 from ptr %arr.index96
  336735 = add i32 %336708, i32 %334.load734
  call void radixSort(i32 %440, ptr %a, i32 %336708, i32 %336735)
  334.load761 = load i32 from ptr %arr.index97
  336762 = add i32 %336735, i32 %334.load761
  call void radixSort(i32 %440, ptr %a, i32 %336735, i32 %336762)
  334.load788 = load i32 from ptr %arr.index98
  336789 = add i32 %336762, i32 %334.load788
  call void radixSort(i32 %440, ptr %a, i32 %336762, i32 %336789)
  334.load815 = load i32 from ptr %arr.index99
  336816 = add i32 %336789, i32 %334.load815
  call void radixSort(i32 %440, ptr %a, i32 %336789, i32 %336816)
  334.load842 = load i32 from ptr %arr.index100
  336843 = add i32 %336816, i32 %334.load842
  call void radixSort(i32 %440, ptr %a, i32 %336816, i32 %336843)
  334.load869 = load i32 from ptr %arr.index101
  336870 = add i32 %336843, i32 %334.load869
  call void radixSort(i32 %440, ptr %a, i32 %336843, i32 %336870)
  334.load896 = load i32 from ptr %arr.index102
  336897 = add i32 %336870, i32 %334.load896
  call void radixSort(i32 %440, ptr %a, i32 %336870, i32 %336897)
  334.load923 = load i32 from ptr %arr.index103
  336924 = add i32 %336897, i32 %334.load923
  call void radixSort(i32 %440, ptr %a, i32 %336897, i32 %336924)
  334.load950 = load i32 from ptr %arr.index104
  336951 = add i32 %336924, i32 %334.load950
  call void radixSort(i32 %440, ptr %a, i32 %336924, i32 %336951)
  ret 
while.body205_preheader:  pred(while.body198)
  38467509 = icmp slt i32 0, i32 %bitround
  br bb %while.body205
while.body205:  pred(while.exit227, while.body205_preheader)
  209.load515524 = phi [bb %while.exit227, i32 %209.load, bb %while.body205_preheader, i32 %209.load515]
  t.phi399522 = phi [bb %while.exit227, i32 %t.phi, bb %while.body205_preheader, i32 %t.phi400529]
  495 = shl i32 %209.load515524, i32 2
  223 = ptradd ptr %a, i32 %495
  223.load = load i32 from ptr %223
  br bb %while.cond225
while.exit206:  pred(while.exit227, while.body198)
  t.phi400520 = phi [bb %while.exit227, i32 %t.phi, bb %while.body198, i32 %t.phi400529]
  v.phi403519 = phi [bb %while.exit227, i32 %v.phi, bb %while.body198, i32 %v.phi403528]
  288 = add i32 %i120.phi530, i32 1
  202 = icmp slt i32 %288, i32 16
  br i1 %202, bb %while.body198, bb %while.exit199
while.cond225:  pred(while.body205, while.body226)
  v.phi = phi [bb %while.body205, i32 %223.load, bb %while.body226, i32 %244.load]
  t.phi = phi [bb %while.body205, i32 %t.phi399522, bb %while.body226, i32 %v.phi]
  br i1 %38467509, bb %getNumPos.while.body34469_preheader, bb %getNumPos.while.exit35473
while.body226:  pred(getNumPos.while.exit35473)
  496 = shl i32 %49474, i32 2
  241 = ptradd ptr %head, i32 %496
  241.load = load i32 from ptr %241
  497 = shl i32 %241.load, i32 2
  244 = ptradd ptr %a, i32 %497
  244.load = load i32 from ptr %244
  store i32 %v.phi to ptr %244
  268 = add i32 %241.load, i32 1
  store i32 %268 to ptr %241
  br bb %while.cond225
while.exit227:  pred(getNumPos.while.exit35473)
  271.load = load i32 from ptr %209514
  498 = shl i32 %271.load, i32 2
  274 = ptradd ptr %a, i32 %498
  store i32 %v.phi to ptr %274
  285 = add i32 %271.load, i32 1
  store i32 %285 to ptr %209514
  209.load = load i32 from ptr %209514
  213.load = load i32 from ptr %213516
  215 = icmp slt i32 %209.load, i32 %213.load
  br i1 %215, bb %while.body205, bb %while.exit206
getNumPos.while.body34_preheader:  pred(while.body123)
  br bb %getNumPos.while.body34
getNumPos.while.body34:  pred(getNumPos.while.body34, getNumPos.while.body34_preheader)
  num.stack.phi450508 = phi [bb %getNumPos.while.body34, i32 %43454, bb %getNumPos.while.body34_preheader, i32 %131.load]
  i32.phi449507 = phi [bb %getNumPos.while.body34, i32 %46455, bb %getNumPos.while.body34_preheader, i32 0]
  43454 = sdiv i32 %num.stack.phi450508, i32 16
  46455 = add i32 %i32.phi449507, i32 1
  38451 = icmp slt i32 %46455, i32 %bitround
  br i1 %38451, bb %getNumPos.while.body34, bb %getNumPos.while.exit35
getNumPos.while.exit35:  pred(getNumPos.while.body34, while.body123)
  131.load506 = phi [bb %getNumPos.while.body34, i32 %43454, bb %while.body123, i32 %131.load]
  49458 = srem i32 %131.load506, i32 16
  502 = shl i32 %49458, i32 2
  136 = ptradd ptr %cnt, i32 %502
  145.load = load i32 from ptr %136
  147 = add i32 %145.load, i32 1
  store i32 %147 to ptr %136
  150 = add i32 %i120.phi397534, i32 1
  127 = icmp slt i32 %150, i32 %r
  br i1 %127, bb %while.body123, bb %while.exit124
getNumPos.while.body34469_preheader:  pred(while.cond225)
  br bb %getNumPos.while.body34469
getNumPos.while.body34469:  pred(getNumPos.while.body34469, getNumPos.while.body34469_preheader)
  num.stack.phi466512 = phi [bb %getNumPos.while.body34469, i32 %43470, bb %getNumPos.while.body34469_preheader, i32 %v.phi]
  i32.phi465511 = phi [bb %getNumPos.while.body34469, i32 %46471, bb %getNumPos.while.body34469_preheader, i32 0]
  43470 = sdiv i32 %num.stack.phi466512, i32 16
  46471 = add i32 %i32.phi465511, i32 1
  38467 = icmp slt i32 %46471, i32 %bitround
  br i1 %38467, bb %getNumPos.while.body34469, bb %getNumPos.while.exit35473
getNumPos.while.exit35473:  pred(getNumPos.while.body34469, while.cond225)
  v.phi510 = phi [bb %getNumPos.while.body34469, i32 %43470, bb %while.cond225, i32 %v.phi]
  49474 = srem i32 %v.phi510, i32 16
  232 = icmp ne i32 %49474, i32 %i120.phi530
  br i1 %232, bb %while.body226, bb %while.exit227
}

external void putfarray(i32 , ptr )


