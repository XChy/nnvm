global ptr staticvalue init with i32 0
global ptr a init with 10000 x i32 zeros
global ptr seed init with 3 x i32 [19971231, 19981013, 1000000007]
i32 rand() {
entry178:
  staticvalue.load = load i32 from ptr @staticvalue
  181.load = load i32 from ptr @seed
  183 = mul i32 %staticvalue.load, i32 %181.load
  185 = ptradd ptr @seed, i32 4
  185.load = load i32 from ptr %185
  187 = add i32 %183, i32 %185.load
  store i32 %187 to ptr @staticvalue
  190 = ptradd ptr @seed, i32 8
  190.load = load i32 from ptr %190
  192 = srem i32 %187, i32 %190.load
  store i32 %192 to ptr @staticvalue
  194 = icmp slt i32 %192, i32 0
  br i1 %194, bb %then195, bb %if.exit196
then195:
  198.load = load i32 from ptr %190
  staticvalue.load200 = load i32 from ptr @staticvalue
  201 = add i32 %198.load, i32 %staticvalue.load200
  store i32 %201 to ptr @staticvalue
  br bb %if.exit196
if.exit196:
  staticvalue.load202 = load i32 from ptr @staticvalue
  ret i32 %staticvalue.load202
}

external i32 getint()

i32 set(ptr a, i32 pos, i32 d) {
entry:
  %x = stack 124
  br bb %init.cond
init.cond:
  cnt_ptr.phi = phi [bb %entry, i32 31, bb %init, i32 %cnt.dec]
  9 = icmp ne i32 %cnt_ptr.phi, i32 0
  br i1 %9, bb %init, bb %init.exit
init:
  cnt.dec = sub i32 %cnt_ptr.phi, i32 1
  offset = mul i32 %cnt.dec, i32 4
  arr.index14 = ptradd ptr %x, i32 %offset
  store i32 0 to ptr %arr.index14
  br bb %init.cond
init.exit:
  store i32 1 to ptr %x
  18 = ptradd ptr %x, i32 4
  store i32 2 to ptr %18
  24 = ptradd ptr %x, i32 8
  store i32 4 to ptr %24
  30 = ptradd ptr %x, i32 12
  store i32 8 to ptr %30
  36 = ptradd ptr %x, i32 16
  store i32 16 to ptr %36
  42 = ptradd ptr %x, i32 20
  store i32 32 to ptr %42
  48 = ptradd ptr %x, i32 24
  store i32 64 to ptr %48
  54 = ptradd ptr %x, i32 28
  store i32 128 to ptr %54
  60 = ptradd ptr %x, i32 32
  store i32 256 to ptr %60
  66 = ptradd ptr %x, i32 36
  store i32 512 to ptr %66
  72 = ptradd ptr %x, i32 40
  store i32 1024 to ptr %72
  br bb %while.cond
while.cond:
  i.phi = phi [bb %init.exit, i32 10, bb %while.body, i32 %85]
  82 = icmp slt i32 %i.phi, i32 30
  br i1 %82, bb %while.body, bb %while.exit
while.body:
  85 = add i32 %i.phi, i32 1
  87 = mul i32 %85, i32 4
  88 = ptradd ptr %x, i32 %87
  91 = mul i32 %i.phi, i32 4
  92 = ptradd ptr %x, i32 %91
  92.load = load i32 from ptr %92
  94 = mul i32 %92.load, i32 2
  store i32 %94 to ptr %88
  br bb %while.cond
while.exit:
  97 = sdiv i32 %pos, i32 30
  98 = icmp sge i32 %97, i32 10000
  br i1 %98, bb %then, bb %if.exit
then:
  ret i32 0
if.exit:
  103 = mul i32 %97, i32 4
  104 = ptradd ptr %a, i32 %103
  104.load = load i32 from ptr %104
  107 = srem i32 %pos, i32 30
  108 = mul i32 %107, i32 4
  109 = ptradd ptr %x, i32 %108
  109.load = load i32 from ptr %109
  111 = sdiv i32 %104.load, i32 %109.load
  112 = srem i32 %111, i32 2
  114 = icmp ne i32 %112, i32 %d
  br i1 %114, bb %then115, bb %if.exit116
then115:
  120.load = load i32 from ptr %104
  125.load = load i32 from ptr %109
  127 = sdiv i32 %120.load, i32 %125.load
  128 = srem i32 %127, i32 2
  129 = icmp eq i32 %128, i32 0
  br i1 %129, bb %then130, bb %if.exit131
if.exit116:
  v.phi231 = phi [bb %if.exit, i32 0, bb %if.exit155, i32 %v.phi230]
  174.load = load i32 from ptr %104
  177 = add i32 %174.load, i32 %v.phi231
  store i32 %177 to ptr %104
  ret i32 0
then130:
  133 = icmp eq i32 %d, i32 1
  br i1 %133, bb %then134, bb %if.exit135
if.exit131:
  v.phi233 = phi [bb %then115, i32 0, bb %if.exit135, i32 %v.phi232]
  144.load = load i32 from ptr %104
  149.load = load i32 from ptr %109
  151 = sdiv i32 %144.load, i32 %149.load
  152 = srem i32 %151, i32 2
  153 = icmp eq i32 %152, i32 1
  br i1 %153, bb %then154, bb %if.exit155
then134:
  139.load = load i32 from ptr %109
  br bb %if.exit135
if.exit135:
  v.phi232 = phi [bb %then130, i32 0, bb %then134, i32 %139.load]
  br bb %if.exit131
then154:
  157 = icmp eq i32 %d, i32 0
  br i1 %157, bb %then158, bb %if.exit159
if.exit155:
  v.phi230 = phi [bb %if.exit131, i32 %v.phi233, bb %if.exit159, i32 %v.phi]
  br bb %if.exit116
then158:
  164.load = load i32 from ptr %109
  166 = sub i32 %v.phi233, i32 %164.load
  br bb %if.exit159
if.exit159:
  v.phi = phi [bb %then154, i32 %v.phi233, bb %then158, i32 %166]
  br bb %if.exit155
}

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry203:
  %x292 = stack 124
  205 = call i32 getint()
  206 = call i32 getint()
  store i32 %206 to ptr @staticvalue
  call void _sysy_starttime(i32 56)
  br bb %while.cond210
while.cond210:
  n.phi = phi [bb %entry203, i32 %205, bb %while.body211.split.split.split, i32 %217]
  214 = icmp sgt i32 %n.phi, i32 0
  br i1 %214, bb %while.body211, bb %while.exit212
while.body211:
  217 = sub i32 %n.phi, i32 1
  staticvalue.load242 = load i32 from ptr @staticvalue
  181.load243 = load i32 from ptr @seed
  183244 = mul i32 %staticvalue.load242, i32 %181.load243
  185245 = ptradd ptr @seed, i32 4
  185.load246 = load i32 from ptr %185245
  187247 = add i32 %183244, i32 %185.load246
  store i32 %187247 to ptr @staticvalue
  190249 = ptradd ptr @seed, i32 8
  190.load250 = load i32 from ptr %190249
  192251 = srem i32 %187247, i32 %190.load250
  store i32 %192251 to ptr @staticvalue
  194253 = icmp slt i32 %192251, i32 0
  br i1 %194253, bb %rand.then195, bb %rand.if.exit196
while.body211.split.split.split:
  br bb %while.cond210
while.exit212:
  call void _sysy_stoptime(i32 64)
  call void putarray(i32 10000, ptr @a)
  ret i32 0
rand.then195:
  198.load256 = load i32 from ptr %190249
  staticvalue.load200257 = load i32 from ptr @staticvalue
  201258 = add i32 %198.load256, i32 %staticvalue.load200257
  store i32 %201258 to ptr @staticvalue
  br bb %rand.if.exit196
rand.if.exit196:
  staticvalue.load202262 = load i32 from ptr @staticvalue
  219 = srem i32 %staticvalue.load202262, i32 300000
  181.load268 = load i32 from ptr @seed
  183269 = mul i32 %staticvalue.load202262, i32 %181.load268
  185.load271 = load i32 from ptr %185245
  187272 = add i32 %183269, i32 %185.load271
  store i32 %187272 to ptr @staticvalue
  190.load275 = load i32 from ptr %190249
  192276 = srem i32 %187272, i32 %190.load275
  store i32 %192276 to ptr @staticvalue
  194278 = icmp slt i32 %192276, i32 0
  br i1 %194278, bb %rand.then195280, bb %rand.if.exit196286
rand.then195280:
  198.load281 = load i32 from ptr %190249
  staticvalue.load200282 = load i32 from ptr @staticvalue
  201283 = add i32 %198.load281, i32 %staticvalue.load200282
  store i32 %201283 to ptr @staticvalue
  br bb %rand.if.exit196286
rand.if.exit196286:
  staticvalue.load202287 = load i32 from ptr @staticvalue
  221 = srem i32 %staticvalue.load202287, i32 2
  br bb %set.init.cond
set.init.cond:
  cnt_ptr.phi295 = phi [bb %rand.if.exit196286, i32 31, bb %set.init, i32 %cnt.dec299]
  9296 = icmp ne i32 %cnt_ptr.phi295, i32 0
  br i1 %9296, bb %set.init, bb %set.init.exit
set.init:
  cnt.dec299 = sub i32 %cnt_ptr.phi295, i32 1
  offset300 = mul i32 %cnt.dec299, i32 4
  arr.index14301 = ptradd ptr %x292, i32 %offset300
  store i32 0 to ptr %arr.index14301
  br bb %set.init.cond
set.init.exit:
  store i32 1 to ptr %x292
  18306 = ptradd ptr %x292, i32 4
  store i32 2 to ptr %18306
  24309 = ptradd ptr %x292, i32 8
  store i32 4 to ptr %24309
  30312 = ptradd ptr %x292, i32 12
  store i32 8 to ptr %30312
  36315 = ptradd ptr %x292, i32 16
  store i32 16 to ptr %36315
  42318 = ptradd ptr %x292, i32 20
  store i32 32 to ptr %42318
  48321 = ptradd ptr %x292, i32 24
  store i32 64 to ptr %48321
  54324 = ptradd ptr %x292, i32 28
  store i32 128 to ptr %54324
  60327 = ptradd ptr %x292, i32 32
  store i32 256 to ptr %60327
  66330 = ptradd ptr %x292, i32 36
  store i32 512 to ptr %66330
  72333 = ptradd ptr %x292, i32 40
  store i32 1024 to ptr %72333
  br bb %set.while.cond
set.while.cond:
  i.phi338 = phi [bb %set.init.exit, i32 10, bb %set.while.body, i32 %85342]
  82339 = icmp slt i32 %i.phi338, i32 30
  br i1 %82339, bb %set.while.body, bb %set.while.exit
set.while.body:
  85342 = add i32 %i.phi338, i32 1
  87343 = mul i32 %85342, i32 4
  88344 = ptradd ptr %x292, i32 %87343
  91345 = mul i32 %i.phi338, i32 4
  92346 = ptradd ptr %x292, i32 %91345
  92.load347 = load i32 from ptr %92346
  94348 = mul i32 %92.load347, i32 2
  store i32 %94348 to ptr %88344
  br bb %set.while.cond
set.while.exit:
  97352 = sdiv i32 %219, i32 30
  98353 = icmp sge i32 %97352, i32 10000
  br i1 %98353, bb %while.body211.split.split.split, bb %set.if.exit
set.if.exit:
  103358 = mul i32 %97352, i32 4
  104359 = ptradd ptr @a, i32 %103358
  104.load360 = load i32 from ptr %104359
  107361 = srem i32 %219, i32 30
  108362 = mul i32 %107361, i32 4
  109363 = ptradd ptr %x292, i32 %108362
  109.load364 = load i32 from ptr %109363
  111365 = sdiv i32 %104.load360, i32 %109.load364
  112366 = srem i32 %111365, i32 2
  114367 = icmp ne i32 %112366, i32 %221
  br i1 %114367, bb %set.then115, bb %set.if.exit116
set.then115:
  120.load370 = load i32 from ptr %104359
  125.load371 = load i32 from ptr %109363
  127372 = sdiv i32 %120.load370, i32 %125.load371
  128373 = srem i32 %127372, i32 2
  129374 = icmp eq i32 %128373, i32 0
  br i1 %129374, bb %set.then130, bb %set.if.exit131
set.if.exit116:
  v.phi231377 = phi [bb %set.if.exit, i32 0, bb %set.if.exit155, i32 %v.phi230403]
  174.load378 = load i32 from ptr %104359
  177379 = add i32 %174.load378, i32 %v.phi231377
  store i32 %177379 to ptr %104359
  br bb %while.body211.split.split.split
set.then130:
  133383 = icmp eq i32 %221, i32 1
  br i1 %133383, bb %set.then134, bb %set.if.exit135
set.if.exit131:
  v.phi233386 = phi [bb %set.then115, i32 0, bb %set.if.exit135, i32 %v.phi232397]
  144.load387 = load i32 from ptr %104359
  149.load388 = load i32 from ptr %109363
  151389 = sdiv i32 %144.load387, i32 %149.load388
  152390 = srem i32 %151389, i32 2
  153391 = icmp eq i32 %152390, i32 1
  br i1 %153391, bb %set.then154, bb %set.if.exit155
set.then134:
  139.load394 = load i32 from ptr %109363
  br bb %set.if.exit135
set.if.exit135:
  v.phi232397 = phi [bb %set.then130, i32 0, bb %set.then134, i32 %139.load394]
  br bb %set.if.exit131
set.then154:
  157400 = icmp eq i32 %221, i32 0
  br i1 %157400, bb %set.then158, bb %set.if.exit159
set.if.exit155:
  v.phi230403 = phi [bb %set.if.exit131, i32 %v.phi233386, bb %set.if.exit159, i32 %v.phi410]
  br bb %set.if.exit116
set.then158:
  164.load406 = load i32 from ptr %109363
  166407 = sub i32 %v.phi233386, i32 %164.load406
  br bb %set.if.exit159
set.if.exit159:
  v.phi410 = phi [bb %set.then154, i32 %v.phi233386, bb %set.then158, i32 %166407]
  br bb %set.if.exit155
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )


