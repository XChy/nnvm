global ptr temp init with float 1.000000
void mult_combin(ptr v, ptr out, i32 n, ptr tmp) {
entry119:
  46250 = si2f i32 0 to float
  br bb %mult1.while.cond47
mult1.while.cond47:
  sum45.phi224253 = phi [bb %entry119, float %46250, bb %mult1.while.exit56, float %sum45.phi263]
  j.phi222254 = phi [bb %entry119, i32 0, bb %mult1.while.exit56, i32 %j.phi264]
  i43.phi255 = phi [bb %entry119, i32 0, bb %mult1.while.exit56, i32 %79281]
  52256 = icmp slt i32 %i43.phi255, i32 %n
  br i1 %52256, bb %mult1.while.body48, bb %mult1.while.exit49
mult1.while.body48:
  br bb %mult1.while.cond54
mult1.while.exit49:
  br bb %mult2.while.cond86
mult1.while.cond54:
  sum45.phi263 = phi [bb %mult1.while.body48, float %sum45.phi224253, bb %mult1.while.body55, float %71274]
  j.phi264 = phi [bb %mult1.while.body48, i32 %j.phi222254, bb %mult1.while.body55, i32 %73275]
  59265 = icmp slt i32 %j.phi264, i32 %n
  br i1 %59265, bb %mult1.while.body55, bb %mult1.while.exit56
mult1.while.body55:
  63268 = mul i32 %j.phi264, i32 4
  64269 = ptradd ptr %v, i32 %63268
  64.load270 = load float from ptr %64269
  5557 = add i32 %i43.phi255, i32 %j.phi264
  9558 = add i32 %5557, i32 1
  10559 = mul i32 %5557, i32 %9558
  11560 = sdiv i32 %10559, i32 2
  13561 = add i32 %11560, i32 %i43.phi255
  14562 = add i32 %13561, i32 1
  69272 = si2f i32 %14562 to float
  70273 = fdiv float %64.load270, float %69272
  71274 = fadd float %sum45.phi263, float %70273
  73275 = add i32 %j.phi264, i32 1
  br bb %mult1.while.cond54
mult1.while.exit56:
  75278 = mul i32 %i43.phi255, i32 4
  76279 = ptradd ptr %tmp, i32 %75278
  store float %sum45.phi263 to ptr %76279
  79281 = add i32 %i43.phi255, i32 1
  br bb %mult1.while.cond47
mult2.while.cond86:
  sum84.phi233435 = phi [bb %mult1.while.exit49, float %46250, bb %mult2.while.exit95, float %sum84.phi445]
  j83.phi231436 = phi [bb %mult1.while.exit49, i32 0, bb %mult2.while.exit95, i32 %j83.phi446]
  i82.phi437 = phi [bb %mult1.while.exit49, i32 0, bb %mult2.while.exit95, i32 %118463]
  91438 = icmp slt i32 %i82.phi437, i32 %n
  br i1 %91438, bb %mult2.while.body87, bb %mult2.while.exit88
mult2.while.body87:
  br bb %mult2.while.cond93
mult2.while.exit88:
  ret 
mult2.while.cond93:
  sum84.phi445 = phi [bb %mult2.while.body87, float %sum84.phi233435, bb %mult2.while.body94, float %110456]
  j83.phi446 = phi [bb %mult2.while.body87, i32 %j83.phi231436, bb %mult2.while.body94, i32 %112457]
  98447 = icmp slt i32 %j83.phi446, i32 %n
  br i1 %98447, bb %mult2.while.body94, bb %mult2.while.exit95
mult2.while.body94:
  102450 = mul i32 %j83.phi446, i32 4
  103451 = ptradd ptr %tmp, i32 %102450
  103.load452 = load float from ptr %103451
  5587 = add i32 %j83.phi446, i32 %i82.phi437
  9588 = add i32 %5587, i32 1
  10589 = mul i32 %5587, i32 %9588
  11590 = sdiv i32 %10589, i32 2
  13591 = add i32 %11590, i32 %j83.phi446
  14592 = add i32 %13591, i32 1
  108454 = si2f i32 %14592 to float
  109455 = fdiv float %103.load452, float %108454
  110456 = fadd float %sum84.phi445, float %109455
  112457 = add i32 %j83.phi446, i32 1
  br bb %mult2.while.cond93
mult2.while.exit95:
  114460 = mul i32 %i82.phi437, i32 4
  115461 = ptradd ptr %out, i32 %114460
  store float %sum84.phi445 to ptr %115461
  118463 = add i32 %i82.phi437, i32 1
  br bb %mult2.while.cond86
}

void mult1(ptr v, ptr out, i32 n) {
entry41:
  46 = si2f i32 0 to float
  br bb %while.cond47
while.cond47:
  sum45.phi224 = phi [bb %entry41, float %46, bb %while.exit56, float %sum45.phi]
  j.phi222 = phi [bb %entry41, i32 0, bb %while.exit56, i32 %j.phi]
  i43.phi = phi [bb %entry41, i32 0, bb %while.exit56, i32 %79]
  52 = icmp slt i32 %i43.phi, i32 %n
  br i1 %52, bb %while.body48, bb %while.exit49
while.body48:
  br bb %while.cond54
while.exit49:
  ret 
while.cond54:
  sum45.phi = phi [bb %while.body48, float %sum45.phi224, bb %while.body55, float %71]
  j.phi = phi [bb %while.body48, i32 %j.phi222, bb %while.body55, i32 %73]
  59 = icmp slt i32 %j.phi, i32 %n
  br i1 %59, bb %while.body55, bb %while.exit56
while.body55:
  63 = mul i32 %j.phi, i32 4
  64 = ptradd ptr %v, i32 %63
  64.load = load float from ptr %64
  5537 = add i32 %i43.phi, i32 %j.phi
  9538 = add i32 %5537, i32 1
  10539 = mul i32 %5537, i32 %9538
  11540 = sdiv i32 %10539, i32 2
  13541 = add i32 %11540, i32 %i43.phi
  14542 = add i32 %13541, i32 1
  69 = si2f i32 %14542 to float
  70 = fdiv float %64.load, float %69
  71 = fadd float %sum45.phi, float %70
  73 = add i32 %j.phi, i32 1
  br bb %while.cond54
while.exit56:
  75 = mul i32 %i43.phi, i32 4
  76 = ptradd ptr %out, i32 %75
  store float %sum45.phi to ptr %76
  79 = add i32 %i43.phi, i32 1
  br bb %while.cond47
}

float my_sqrt(float input) {
entry125:
  br bb %while.cond127
while.cond127:
  temp.load = load float from ptr @temp
  133 = fdiv float %input, float %temp.load
  134 = fsub float %temp.load, float %133
  135 = fcmp ogt float %134, float 0.000001
  br i1 %135, bb %select.then, bb %select.else
while.body128:
  temp.load150 = load float from ptr @temp
  153 = fdiv float %input, float %temp.load150
  154 = fadd float %temp.load150, float %153
  155 = si2f i32 2 to float
  156 = fdiv float %154, float %155
  store float %156 to ptr @temp
  br bb %while.cond127
while.exit129:
  temp.load157 = load float from ptr @temp
  ret float %temp.load157
select.then:
  br bb %select.exit
select.else:
  temp.load140 = load float from ptr @temp
  143 = fdiv float %input, float %temp.load140
  144 = fsub float %temp.load140, float %143
  145 = fneg float 0.000001
  146 = fcmp olt float %144, float %145
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 %146, bb %select.then, i1 1]
  br i1 %select.phi, bb %while.body128, bb %while.exit129
}

pure float Vectordot(ptr v, ptr u, i32 n) {
entry15:
  19 = si2f i32 0 to float
  br bb %while.cond
while.cond:
  sum.phi = phi [bb %entry15, float %19, bb %while.body, float %37]
  i.phi = phi [bb %entry15, i32 0, bb %while.body, i32 %39]
  25 = icmp slt i32 %i.phi, i32 %n
  br i1 %25, bb %while.body, bb %while.exit
while.body:
  29 = mul i32 %i.phi, i32 4
  30 = ptradd ptr %v, i32 %29
  30.load = load float from ptr %30
  34 = ptradd ptr %u, i32 %29
  34.load = load float from ptr %34
  36 = fmul float %30.load, float %34.load
  37 = fadd float %sum.phi, float %36
  39 = add i32 %i.phi, i32 1
  br bb %while.cond
while.exit:
  ret float %sum.phi
}

external i32 getint()

external i32 getch()

void mult2(ptr v, ptr out, i32 n) {
entry80:
  85 = si2f i32 0 to float
  br bb %while.cond86
while.cond86:
  sum84.phi233 = phi [bb %entry80, float %85, bb %while.exit95, float %sum84.phi]
  j83.phi231 = phi [bb %entry80, i32 0, bb %while.exit95, i32 %j83.phi]
  i82.phi = phi [bb %entry80, i32 0, bb %while.exit95, i32 %118]
  91 = icmp slt i32 %i82.phi, i32 %n
  br i1 %91, bb %while.body87, bb %while.exit88
while.body87:
  br bb %while.cond93
while.exit88:
  ret 
while.cond93:
  sum84.phi = phi [bb %while.body87, float %sum84.phi233, bb %while.body94, float %110]
  j83.phi = phi [bb %while.body87, i32 %j83.phi231, bb %while.body94, i32 %112]
  98 = icmp slt i32 %j83.phi, i32 %n
  br i1 %98, bb %while.body94, bb %while.exit95
while.body94:
  102 = mul i32 %j83.phi, i32 4
  103 = ptradd ptr %v, i32 %102
  103.load = load float from ptr %103
  5547 = add i32 %j83.phi, i32 %i82.phi
  9548 = add i32 %5547, i32 1
  10549 = mul i32 %5547, i32 %9548
  11550 = sdiv i32 %10549, i32 2
  13551 = add i32 %11550, i32 %j83.phi
  14552 = add i32 %13551, i32 1
  108 = si2f i32 %14552 to float
  109 = fdiv float %103.load, float %108
  110 = fadd float %sum84.phi, float %109
  112 = add i32 %j83.phi, i32 1
  br bb %while.cond93
while.exit95:
  114 = mul i32 %i82.phi, i32 4
  115 = ptradd ptr %out, i32 %114
  store float %sum84.phi to ptr %115
  118 = add i32 %i82.phi, i32 1
  br bb %while.cond86
}

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry158:
  %Vectortmp = stack 400000
  %vectorB = stack 400000
  %vectorA = stack 400000
  161 = icmp sle i32 100000, i32 0
  br i1 %161, bb %then, bb %if.exit
then:
  br bb %if.exit
if.exit:
  n.phi = phi [bb %entry158, i32 100000, bb %then, i32 2000]
  call void _sysy_starttime(i32 62)
  br bb %while.cond169
while.cond169:
  i168.phi235 = phi [bb %if.exit, i32 ub, bb %while.body170, i32 %181]
  174 = icmp slt i32 %i168.phi235, i32 %n.phi
  br i1 %174, bb %while.body170, bb %while.exit171
while.body170:
  177 = mul i32 %i168.phi235, i32 4
  178 = ptradd ptr %vectorA, i32 %177
  179 = si2f i32 1 to float
  store float %179 to ptr %178
  181 = add i32 %i168.phi235, i32 1
  br bb %while.cond169
while.exit171:
  br bb %while.cond182
while.cond182:
  i168.phi = phi [bb %while.exit171, i32 0, bb %mult2.while.exit88512, i32 %193]
  186 = icmp slt i32 %i168.phi, i32 1000
  br i1 %186, bb %while.body183, bb %while.exit184
while.body183:
  46285 = si2f i32 0 to float
  br bb %mult1.while.cond47287
while.exit184:
  call void _sysy_stoptime(i32 76)
  19388 = si2f i32 0 to float
  br bb %Vectordot.while.cond
select.then205:
  211 = fneg float 0.000001
  212 = fcmp oge float %203, float %211
  br bb %select.exit207
select.else206:
  br bb %select.exit207
select.exit207:
  select208.phi = phi [bb %select.else206, i1 0, bb %select.then205, i1 %212]
  br i1 %select208.phi, bb %then214, bb %else
then214:
  call void putint(i32 1)
  br bb %if.exit215
if.exit215:
  call void putch(i32 10)
  ret i32 0
else:
  call void putint(i32 0)
  br bb %if.exit215
mult1.while.cond47287:
  sum45.phi224288 = phi [bb %while.body183, float %46285, bb %mult1.while.exit56312, float %sum45.phi298]
  j.phi222289 = phi [bb %while.body183, i32 0, bb %mult1.while.exit56312, i32 %j.phi299]
  i43.phi290 = phi [bb %while.body183, i32 0, bb %mult1.while.exit56312, i32 %79316]
  52291 = icmp slt i32 %i43.phi290, i32 %n.phi
  br i1 %52291, bb %mult1.while.body48293, bb %mult1.while.exit49295
mult1.while.body48293:
  br bb %mult1.while.cond54297
mult1.while.exit49295:
  br bb %mult2.while.cond86469
mult1.while.cond54297:
  sum45.phi298 = phi [bb %mult1.while.body48293, float %sum45.phi224288, bb %mult1.while.body55302, float %71309]
  j.phi299 = phi [bb %mult1.while.body48293, i32 %j.phi222289, bb %mult1.while.body55302, i32 %73310]
  59300 = icmp slt i32 %j.phi299, i32 %n.phi
  br i1 %59300, bb %mult1.while.body55302, bb %mult1.while.exit56312
mult1.while.body55302:
  63303 = mul i32 %j.phi299, i32 4
  64304 = ptradd ptr %vectorA, i32 %63303
  64.load305 = load float from ptr %64304
  5567 = add i32 %i43.phi290, i32 %j.phi299
  9568 = add i32 %5567, i32 1
  10569 = mul i32 %5567, i32 %9568
  11570 = sdiv i32 %10569, i32 2
  13571 = add i32 %11570, i32 %i43.phi290
  14572 = add i32 %13571, i32 1
  69307 = si2f i32 %14572 to float
  70308 = fdiv float %64.load305, float %69307
  71309 = fadd float %sum45.phi298, float %70308
  73310 = add i32 %j.phi299, i32 1
  br bb %mult1.while.cond54297
mult1.while.exit56312:
  75313 = mul i32 %i43.phi290, i32 4
  76314 = ptradd ptr %Vectortmp, i32 %75313
  store float %sum45.phi298 to ptr %76314
  79316 = add i32 %i43.phi290, i32 1
  br bb %mult1.while.cond47287
mult1.while.cond47322:
  sum45.phi224323 = phi [bb %mult2.while.exit88477, float %46285, bb %mult1.while.exit56347, float %sum45.phi333]
  j.phi222324 = phi [bb %mult2.while.exit88477, i32 0, bb %mult1.while.exit56347, i32 %j.phi334]
  i43.phi325 = phi [bb %mult2.while.exit88477, i32 0, bb %mult1.while.exit56347, i32 %79351]
  52326 = icmp slt i32 %i43.phi325, i32 %n.phi
  br i1 %52326, bb %mult1.while.body48328, bb %mult1.while.exit49330
mult1.while.body48328:
  br bb %mult1.while.cond54332
mult1.while.exit49330:
  br bb %mult2.while.cond86504
mult1.while.cond54332:
  sum45.phi333 = phi [bb %mult1.while.body48328, float %sum45.phi224323, bb %mult1.while.body55337, float %71344]
  j.phi334 = phi [bb %mult1.while.body48328, i32 %j.phi222324, bb %mult1.while.body55337, i32 %73345]
  59335 = icmp slt i32 %j.phi334, i32 %n.phi
  br i1 %59335, bb %mult1.while.body55337, bb %mult1.while.exit56347
mult1.while.body55337:
  63338 = mul i32 %j.phi334, i32 4
  64339 = ptradd ptr %vectorB, i32 %63338
  64.load340 = load float from ptr %64339
  5577 = add i32 %i43.phi325, i32 %j.phi334
  9578 = add i32 %5577, i32 1
  10579 = mul i32 %5577, i32 %9578
  11580 = sdiv i32 %10579, i32 2
  13581 = add i32 %11580, i32 %i43.phi325
  14582 = add i32 %13581, i32 1
  69342 = si2f i32 %14582 to float
  70343 = fdiv float %64.load340, float %69342
  71344 = fadd float %sum45.phi333, float %70343
  73345 = add i32 %j.phi334, i32 1
  br bb %mult1.while.cond54332
mult1.while.exit56347:
  75348 = mul i32 %i43.phi325, i32 4
  76349 = ptradd ptr %Vectortmp, i32 %75348
  store float %sum45.phi333 to ptr %76349
  79351 = add i32 %i43.phi325, i32 1
  br bb %mult1.while.cond47322
my_sqrt.while.cond127:
  temp.load357 = load float from ptr @temp
  133358 = fdiv float %200, float %temp.load357
  134359 = fsub float %temp.load357, float %133358
  135360 = fcmp ogt float %134359, float 0.000001
  br i1 %135360, bb %my_sqrt.select.then, bb %my_sqrt.select.else
my_sqrt.while.body128:
  temp.load150363 = load float from ptr @temp
  153364 = fdiv float %200, float %temp.load150363
  154365 = fadd float %temp.load150363, float %153364
  155366 = si2f i32 2 to float
  156367 = fdiv float %154365, float %155366
  store float %156367 to ptr @temp
  br bb %my_sqrt.while.cond127
my_sqrt.while.exit129:
  temp.load157371 = load float from ptr @temp
  203 = fsub float %temp.load157371, float 1.000000
  204 = fcmp ole float %203, float 0.000001
  br i1 %204, bb %select.then205, bb %select.else206
my_sqrt.select.then:
  br bb %my_sqrt.select.exit
my_sqrt.select.else:
  temp.load140376 = load float from ptr @temp
  143377 = fdiv float %200, float %temp.load140376
  144378 = fsub float %temp.load140376, float %143377
  145379 = fneg float 0.000001
  146380 = fcmp olt float %144378, float %145379
  br bb %my_sqrt.select.exit
my_sqrt.select.exit:
  select.phi383 = phi [bb %my_sqrt.select.else, i1 %146380, bb %my_sqrt.select.then, i1 1]
  br i1 %select.phi383, bb %my_sqrt.while.body128, bb %my_sqrt.while.exit129
Vectordot.while.cond:
  sum.phi391 = phi [bb %while.exit184, float %19388, bb %Vectordot.while.body, float %37402]
  i.phi392 = phi [bb %while.exit184, i32 0, bb %Vectordot.while.body, i32 %39403]
  25393 = icmp slt i32 %i.phi392, i32 %n.phi
  br i1 %25393, bb %Vectordot.while.body, bb %Vectordot.while.exit
Vectordot.while.body:
  29396 = mul i32 %i.phi392, i32 4
  30397 = ptradd ptr %vectorA, i32 %29396
  30.load398 = load float from ptr %30397
  34399 = ptradd ptr %vectorB, i32 %29396
  34.load400 = load float from ptr %34399
  36401 = fmul float %30.load398, float %34.load400
  37402 = fadd float %sum.phi391, float %36401
  39403 = add i32 %i.phi392, i32 1
  br bb %Vectordot.while.cond
Vectordot.while.exit:
  br bb %Vectordot.while.cond412
Vectordot.while.cond412:
  sum.phi413 = phi [bb %Vectordot.while.exit, float %19388, bb %Vectordot.while.body417, float %37424]
  i.phi414 = phi [bb %Vectordot.while.exit, i32 0, bb %Vectordot.while.body417, i32 %39425]
  25415 = icmp slt i32 %i.phi414, i32 %n.phi
  br i1 %25415, bb %Vectordot.while.body417, bb %Vectordot.while.exit427
Vectordot.while.body417:
  29418 = mul i32 %i.phi414, i32 4
  30419 = ptradd ptr %vectorB, i32 %29418
  30.load420 = load float from ptr %30419
  36423 = fmul float %30.load420, float %30.load420
  37424 = fadd float %sum.phi413, float %36423
  39425 = add i32 %i.phi414, i32 1
  br bb %Vectordot.while.cond412
Vectordot.while.exit427:
  200 = fdiv float %sum.phi391, float %sum.phi413
  br bb %my_sqrt.while.cond127
mult2.while.cond86469:
  sum84.phi233470 = phi [bb %mult1.while.exit49295, float %46285, bb %mult2.while.exit95494, float %sum84.phi480]
  j83.phi231471 = phi [bb %mult1.while.exit49295, i32 0, bb %mult2.while.exit95494, i32 %j83.phi481]
  i82.phi472 = phi [bb %mult1.while.exit49295, i32 0, bb %mult2.while.exit95494, i32 %118498]
  91473 = icmp slt i32 %i82.phi472, i32 %n.phi
  br i1 %91473, bb %mult2.while.body87475, bb %mult2.while.exit88477
mult2.while.body87475:
  br bb %mult2.while.cond93479
mult2.while.exit88477:
  br bb %mult1.while.cond47322
mult2.while.cond93479:
  sum84.phi480 = phi [bb %mult2.while.body87475, float %sum84.phi233470, bb %mult2.while.body94484, float %110491]
  j83.phi481 = phi [bb %mult2.while.body87475, i32 %j83.phi231471, bb %mult2.while.body94484, i32 %112492]
  98482 = icmp slt i32 %j83.phi481, i32 %n.phi
  br i1 %98482, bb %mult2.while.body94484, bb %mult2.while.exit95494
mult2.while.body94484:
  102485 = mul i32 %j83.phi481, i32 4
  103486 = ptradd ptr %Vectortmp, i32 %102485
  103.load487 = load float from ptr %103486
  5597 = add i32 %j83.phi481, i32 %i82.phi472
  9598 = add i32 %5597, i32 1
  10599 = mul i32 %5597, i32 %9598
  11600 = sdiv i32 %10599, i32 2
  13601 = add i32 %11600, i32 %j83.phi481
  14602 = add i32 %13601, i32 1
  108489 = si2f i32 %14602 to float
  109490 = fdiv float %103.load487, float %108489
  110491 = fadd float %sum84.phi480, float %109490
  112492 = add i32 %j83.phi481, i32 1
  br bb %mult2.while.cond93479
mult2.while.exit95494:
  114495 = mul i32 %i82.phi472, i32 4
  115496 = ptradd ptr %vectorB, i32 %114495
  store float %sum84.phi480 to ptr %115496
  118498 = add i32 %i82.phi472, i32 1
  br bb %mult2.while.cond86469
mult2.while.cond86504:
  sum84.phi233505 = phi [bb %mult1.while.exit49330, float %46285, bb %mult2.while.exit95529, float %sum84.phi515]
  j83.phi231506 = phi [bb %mult1.while.exit49330, i32 0, bb %mult2.while.exit95529, i32 %j83.phi516]
  i82.phi507 = phi [bb %mult1.while.exit49330, i32 0, bb %mult2.while.exit95529, i32 %118533]
  91508 = icmp slt i32 %i82.phi507, i32 %n.phi
  br i1 %91508, bb %mult2.while.body87510, bb %mult2.while.exit88512
mult2.while.body87510:
  br bb %mult2.while.cond93514
mult2.while.exit88512:
  193 = add i32 %i168.phi, i32 1
  br bb %while.cond182
mult2.while.cond93514:
  sum84.phi515 = phi [bb %mult2.while.body87510, float %sum84.phi233505, bb %mult2.while.body94519, float %110526]
  j83.phi516 = phi [bb %mult2.while.body87510, i32 %j83.phi231506, bb %mult2.while.body94519, i32 %112527]
  98517 = icmp slt i32 %j83.phi516, i32 %n.phi
  br i1 %98517, bb %mult2.while.body94519, bb %mult2.while.exit95529
mult2.while.body94519:
  102520 = mul i32 %j83.phi516, i32 4
  103521 = ptradd ptr %Vectortmp, i32 %102520
  103.load522 = load float from ptr %103521
  5607 = add i32 %j83.phi516, i32 %i82.phi507
  9608 = add i32 %5607, i32 1
  10609 = mul i32 %5607, i32 %9608
  11610 = sdiv i32 %10609, i32 2
  13611 = add i32 %11610, i32 %j83.phi516
  14612 = add i32 %13611, i32 1
  108524 = si2f i32 %14612 to float
  109525 = fdiv float %103.load522, float %108524
  110526 = fadd float %sum84.phi515, float %109525
  112527 = add i32 %j83.phi516, i32 1
  br bb %mult2.while.cond93514
mult2.while.exit95529:
  114530 = mul i32 %i82.phi507, i32 4
  115531 = ptradd ptr %vectorA, i32 %114530
  store float %sum84.phi515 to ptr %115531
  118533 = add i32 %i82.phi507, i32 1
  br bb %mult2.while.cond86504
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

pure i32 func(i32 i, i32 j) {
entry:
  5 = add i32 %i, i32 %j
  9 = add i32 %5, i32 1
  10 = mul i32 %5, i32 %9
  11 = sdiv i32 %10, i32 2
  13 = add i32 %11, i32 %i
  14 = add i32 %13, i32 1
  ret i32 %14
}


