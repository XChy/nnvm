global ptr temp init with float 1.000000
void mult_combin(ptr v, ptr out, i32 n, ptr tmp) {
entry119:
  46258 = si2f i32 0 to float
  br bb %mult1.while.cond47
mult1.while.cond47:
  sum45.phi224261 = phi [bb %entry119, float %46258, bb %mult1.while.exit56, float %sum45.phi271]
  j.phi222262 = phi [bb %entry119, i32 0, bb %mult1.while.exit56, i32 %j.phi272]
  i43.phi263 = phi [bb %entry119, i32 0, bb %mult1.while.exit56, i32 %79289]
  52264 = icmp slt i32 %i43.phi263, i32 %n
  br i1 %52264, bb %mult1.while.body48, bb %mult1.while.exit49
mult1.while.body48:
  br bb %mult1.while.cond54
mult1.while.exit49:
  br bb %mult2.while.cond86
mult1.while.cond54:
  sum45.phi271 = phi [bb %mult1.while.body48, float %sum45.phi224261, bb %mult1.while.body55, float %71282]
  j.phi272 = phi [bb %mult1.while.body48, i32 %j.phi222262, bb %mult1.while.body55, i32 %73283]
  59273 = icmp slt i32 %j.phi272, i32 %n
  br i1 %59273, bb %mult1.while.body55, bb %mult1.while.exit56
mult1.while.body55:
  238276 = shl i32 %j.phi272, i32 2
  64277 = ptradd ptr %v, i32 %238276
  64.load278 = load float from ptr %64277
  5565 = add i32 %i43.phi263, i32 %j.phi272
  9566 = add i32 %5565, i32 1
  10567 = mul i32 %5565, i32 %9566
  245568 = ashr i32 %10567, i32 1
  13569 = add i32 %245568, i32 %i43.phi263
  14570 = add i32 %13569, i32 1
  69280 = si2f i32 %14570 to float
  70281 = fdiv float %64.load278, float %69280
  71282 = fadd float %sum45.phi271, float %70281
  73283 = add i32 %j.phi272, i32 1
  br bb %mult1.while.cond54
mult1.while.exit56:
  239286 = shl i32 %i43.phi263, i32 2
  76287 = ptradd ptr %tmp, i32 %239286
  store float %sum45.phi271 to ptr %76287
  79289 = add i32 %i43.phi263, i32 1
  br bb %mult1.while.cond47
mult2.while.cond86:
  sum84.phi233443 = phi [bb %mult1.while.exit49, float %46258, bb %mult2.while.exit95, float %sum84.phi453]
  j83.phi231444 = phi [bb %mult1.while.exit49, i32 0, bb %mult2.while.exit95, i32 %j83.phi454]
  i82.phi445 = phi [bb %mult1.while.exit49, i32 0, bb %mult2.while.exit95, i32 %118471]
  91446 = icmp slt i32 %i82.phi445, i32 %n
  br i1 %91446, bb %mult2.while.body87, bb %mult2.while.exit88
mult2.while.body87:
  br bb %mult2.while.cond93
mult2.while.exit88:
  ret 
mult2.while.cond93:
  sum84.phi453 = phi [bb %mult2.while.body87, float %sum84.phi233443, bb %mult2.while.body94, float %110464]
  j83.phi454 = phi [bb %mult2.while.body87, i32 %j83.phi231444, bb %mult2.while.body94, i32 %112465]
  98455 = icmp slt i32 %j83.phi454, i32 %n
  br i1 %98455, bb %mult2.while.body94, bb %mult2.while.exit95
mult2.while.body94:
  242458 = shl i32 %j83.phi454, i32 2
  103459 = ptradd ptr %tmp, i32 %242458
  103.load460 = load float from ptr %103459
  5595 = add i32 %j83.phi454, i32 %i82.phi445
  9596 = add i32 %5595, i32 1
  10597 = mul i32 %5595, i32 %9596
  245598 = ashr i32 %10597, i32 1
  13599 = add i32 %245598, i32 %j83.phi454
  14600 = add i32 %13599, i32 1
  108462 = si2f i32 %14600 to float
  109463 = fdiv float %103.load460, float %108462
  110464 = fadd float %sum84.phi453, float %109463
  112465 = add i32 %j83.phi454, i32 1
  br bb %mult2.while.cond93
mult2.while.exit95:
  243468 = shl i32 %i82.phi445, i32 2
  115469 = ptradd ptr %out, i32 %243468
  store float %sum84.phi453 to ptr %115469
  118471 = add i32 %i82.phi445, i32 1
  br bb %mult2.while.cond86
}

void mult1(ptr v, ptr out, i32 n) {
entry41:
  46 = si2f i32 0 to float
  br bb %while.cond47
while.cond47:
  sum45.phi224 = phi [bb %entry41, float %46, bb %while.exit56, float %sum45.phi]
  j.phi222 = phi [bb %entry41, i32 0, bb %while.exit56, i32 %j.phi]
  i43.phi = phi [bb %entry41, i32 0, bb %while.exit56, i32 %79]
  52 = icmp slt i32 %i43.phi, i32 %n
  br i1 %52, bb %while.body48, bb %while.exit49
while.body48:
  br bb %while.cond54
while.exit49:
  ret 
while.cond54:
  sum45.phi = phi [bb %while.body48, float %sum45.phi224, bb %while.body55, float %71]
  j.phi = phi [bb %while.body48, i32 %j.phi222, bb %while.body55, i32 %73]
  59 = icmp slt i32 %j.phi, i32 %n
  br i1 %59, bb %while.body55, bb %while.exit56
while.body55:
  238 = shl i32 %j.phi, i32 2
  64 = ptradd ptr %v, i32 %238
  64.load = load float from ptr %64
  5545 = add i32 %i43.phi, i32 %j.phi
  9546 = add i32 %5545, i32 1
  10547 = mul i32 %5545, i32 %9546
  245548 = ashr i32 %10547, i32 1
  13549 = add i32 %245548, i32 %i43.phi
  14550 = add i32 %13549, i32 1
  69 = si2f i32 %14550 to float
  70 = fdiv float %64.load, float %69
  71 = fadd float %sum45.phi, float %70
  73 = add i32 %j.phi, i32 1
  br bb %while.cond54
while.exit56:
  239 = shl i32 %i43.phi, i32 2
  76 = ptradd ptr %out, i32 %239
  store float %sum45.phi to ptr %76
  79 = add i32 %i43.phi, i32 1
  br bb %while.cond47
}

float my_sqrt(float input) {
entry125:
  br bb %while.cond127
while.cond127:
  temp.load = load float from ptr @temp
  133 = fdiv float %input, float %temp.load
  134 = fsub float %temp.load, float %133
  135 = fcmp ogt float %134, float 0.000001
  br i1 %135, bb %select.then, bb %select.else
while.body128:
  temp.load150 = load float from ptr @temp
  153 = fdiv float %input, float %temp.load150
  154 = fadd float %temp.load150, float %153
  155 = si2f i32 2 to float
  156 = fdiv float %154, float %155
  store float %156 to ptr @temp
  br bb %while.cond127
while.exit129:
  temp.load157 = load float from ptr @temp
  ret float %temp.load157
select.then:
  br bb %select.exit
select.else:
  temp.load140 = load float from ptr @temp
  143 = fdiv float %input, float %temp.load140
  144 = fsub float %temp.load140, float %143
  145 = fneg float 0.000001
  146 = fcmp olt float %144, float %145
  br bb %select.exit
select.exit:
  select.phi = phi [bb %select.else, i1 %146, bb %select.then, i1 -1]
  br i1 %select.phi, bb %while.body128, bb %while.exit129
}

pure float Vectordot(ptr v, ptr u, i32 n) {
entry15:
  19 = si2f i32 0 to float
  br bb %while.cond
while.cond:
  sum.phi = phi [bb %entry15, float %19, bb %while.body, float %37]
  i.phi = phi [bb %entry15, i32 0, bb %while.body, i32 %39]
  25 = icmp slt i32 %i.phi, i32 %n
  br i1 %25, bb %while.body, bb %while.exit
while.body:
  240 = shl i32 %i.phi, i32 2
  30 = ptradd ptr %v, i32 %240
  30.load = load float from ptr %30
  34 = ptradd ptr %u, i32 %240
  34.load = load float from ptr %34
  36 = fmul float %30.load, float %34.load
  37 = fadd float %sum.phi, float %36
  39 = add i32 %i.phi, i32 1
  br bb %while.cond
while.exit:
  ret float %sum.phi
}

external i32 getint()

external i32 getch()

void mult2(ptr v, ptr out, i32 n) {
entry80:
  85 = si2f i32 0 to float
  br bb %while.cond86
while.cond86:
  sum84.phi233 = phi [bb %entry80, float %85, bb %while.exit95, float %sum84.phi]
  j83.phi231 = phi [bb %entry80, i32 0, bb %while.exit95, i32 %j83.phi]
  i82.phi = phi [bb %entry80, i32 0, bb %while.exit95, i32 %118]
  91 = icmp slt i32 %i82.phi, i32 %n
  br i1 %91, bb %while.body87, bb %while.exit88
while.body87:
  br bb %while.cond93
while.exit88:
  ret 
while.cond93:
  sum84.phi = phi [bb %while.body87, float %sum84.phi233, bb %while.body94, float %110]
  j83.phi = phi [bb %while.body87, i32 %j83.phi231, bb %while.body94, i32 %112]
  98 = icmp slt i32 %j83.phi, i32 %n
  br i1 %98, bb %while.body94, bb %while.exit95
while.body94:
  242 = shl i32 %j83.phi, i32 2
  103 = ptradd ptr %v, i32 %242
  103.load = load float from ptr %103
  5555 = add i32 %j83.phi, i32 %i82.phi
  9556 = add i32 %5555, i32 1
  10557 = mul i32 %5555, i32 %9556
  245558 = ashr i32 %10557, i32 1
  13559 = add i32 %245558, i32 %j83.phi
  14560 = add i32 %13559, i32 1
  108 = si2f i32 %14560 to float
  109 = fdiv float %103.load, float %108
  110 = fadd float %sum84.phi, float %109
  112 = add i32 %j83.phi, i32 1
  br bb %while.cond93
while.exit95:
  243 = shl i32 %i82.phi, i32 2
  115 = ptradd ptr %out, i32 %243
  store float %sum84.phi to ptr %115
  118 = add i32 %i82.phi, i32 1
  br bb %while.cond86
}

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry158:
  %Vectortmp = stack 400000
  %vectorB = stack 400000
  %vectorA = stack 400000
  161 = icmp sle i32 100000, i32 0
  br i1 %161, bb %then, bb %if.exit
then:
  br bb %if.exit
if.exit:
  n.phi = phi [bb %entry158, i32 100000, bb %then, i32 2000]
  call void _sysy_starttime(i32 62)
  br bb %while.cond169
while.cond169:
  i168.phi235 = phi [bb %if.exit, i32 ub, bb %while.body170, i32 %181]
  174 = icmp slt i32 %i168.phi235, i32 %n.phi
  br i1 %174, bb %while.body170, bb %while.exit171
while.body170:
  244 = shl i32 %i168.phi235, i32 2
  178 = ptradd ptr %vectorA, i32 %244
  179 = si2f i32 1 to float
  store float %179 to ptr %178
  181 = add i32 %i168.phi235, i32 1
  br bb %while.cond169
while.exit171:
  br bb %while.cond182
while.cond182:
  i168.phi = phi [bb %while.exit171, i32 0, bb %mult2.while.exit88520, i32 %193]
  186 = icmp slt i32 %i168.phi, i32 1000
  br i1 %186, bb %while.body183, bb %while.exit184
while.body183:
  46293 = si2f i32 0 to float
  br bb %mult1.while.cond47295
while.exit184:
  call void _sysy_stoptime(i32 76)
  19396 = si2f i32 0 to float
  br bb %Vectordot.while.cond
select.then205:
  211 = fneg float 0.000001
  212 = fcmp oge float %203, float %211
  br bb %select.exit207
select.else206:
  br bb %select.exit207
select.exit207:
  select208.phi = phi [bb %select.else206, i1 0, bb %select.then205, i1 %212]
  br i1 %select208.phi, bb %then214, bb %else
then214:
  call void putint(i32 1)
  br bb %if.exit215
if.exit215:
  call void putch(i32 10)
  ret i32 0
else:
  call void putint(i32 0)
  br bb %if.exit215
mult1.while.cond47295:
  sum45.phi224296 = phi [bb %while.body183, float %46293, bb %mult1.while.exit56320, float %sum45.phi306]
  j.phi222297 = phi [bb %while.body183, i32 0, bb %mult1.while.exit56320, i32 %j.phi307]
  i43.phi298 = phi [bb %while.body183, i32 0, bb %mult1.while.exit56320, i32 %79324]
  52299 = icmp slt i32 %i43.phi298, i32 %n.phi
  br i1 %52299, bb %mult1.while.body48301, bb %mult1.while.exit49303
mult1.while.body48301:
  br bb %mult1.while.cond54305
mult1.while.exit49303:
  br bb %mult2.while.cond86477
mult1.while.cond54305:
  sum45.phi306 = phi [bb %mult1.while.body48301, float %sum45.phi224296, bb %mult1.while.body55310, float %71317]
  j.phi307 = phi [bb %mult1.while.body48301, i32 %j.phi222297, bb %mult1.while.body55310, i32 %73318]
  59308 = icmp slt i32 %j.phi307, i32 %n.phi
  br i1 %59308, bb %mult1.while.body55310, bb %mult1.while.exit56320
mult1.while.body55310:
  238311 = shl i32 %j.phi307, i32 2
  64312 = ptradd ptr %vectorA, i32 %238311
  64.load313 = load float from ptr %64312
  5575 = add i32 %i43.phi298, i32 %j.phi307
  9576 = add i32 %5575, i32 1
  10577 = mul i32 %5575, i32 %9576
  245578 = ashr i32 %10577, i32 1
  13579 = add i32 %245578, i32 %i43.phi298
  14580 = add i32 %13579, i32 1
  69315 = si2f i32 %14580 to float
  70316 = fdiv float %64.load313, float %69315
  71317 = fadd float %sum45.phi306, float %70316
  73318 = add i32 %j.phi307, i32 1
  br bb %mult1.while.cond54305
mult1.while.exit56320:
  239321 = shl i32 %i43.phi298, i32 2
  76322 = ptradd ptr %Vectortmp, i32 %239321
  store float %sum45.phi306 to ptr %76322
  79324 = add i32 %i43.phi298, i32 1
  br bb %mult1.while.cond47295
mult1.while.cond47330:
  sum45.phi224331 = phi [bb %mult2.while.exit88485, float %46293, bb %mult1.while.exit56355, float %sum45.phi341]
  j.phi222332 = phi [bb %mult2.while.exit88485, i32 0, bb %mult1.while.exit56355, i32 %j.phi342]
  i43.phi333 = phi [bb %mult2.while.exit88485, i32 0, bb %mult1.while.exit56355, i32 %79359]
  52334 = icmp slt i32 %i43.phi333, i32 %n.phi
  br i1 %52334, bb %mult1.while.body48336, bb %mult1.while.exit49338
mult1.while.body48336:
  br bb %mult1.while.cond54340
mult1.while.exit49338:
  br bb %mult2.while.cond86512
mult1.while.cond54340:
  sum45.phi341 = phi [bb %mult1.while.body48336, float %sum45.phi224331, bb %mult1.while.body55345, float %71352]
  j.phi342 = phi [bb %mult1.while.body48336, i32 %j.phi222332, bb %mult1.while.body55345, i32 %73353]
  59343 = icmp slt i32 %j.phi342, i32 %n.phi
  br i1 %59343, bb %mult1.while.body55345, bb %mult1.while.exit56355
mult1.while.body55345:
  238346 = shl i32 %j.phi342, i32 2
  64347 = ptradd ptr %vectorB, i32 %238346
  64.load348 = load float from ptr %64347
  5585 = add i32 %i43.phi333, i32 %j.phi342
  9586 = add i32 %5585, i32 1
  10587 = mul i32 %5585, i32 %9586
  245588 = ashr i32 %10587, i32 1
  13589 = add i32 %245588, i32 %i43.phi333
  14590 = add i32 %13589, i32 1
  69350 = si2f i32 %14590 to float
  70351 = fdiv float %64.load348, float %69350
  71352 = fadd float %sum45.phi341, float %70351
  73353 = add i32 %j.phi342, i32 1
  br bb %mult1.while.cond54340
mult1.while.exit56355:
  239356 = shl i32 %i43.phi333, i32 2
  76357 = ptradd ptr %Vectortmp, i32 %239356
  store float %sum45.phi341 to ptr %76357
  79359 = add i32 %i43.phi333, i32 1
  br bb %mult1.while.cond47330
my_sqrt.while.cond127:
  temp.load365 = load float from ptr @temp
  133366 = fdiv float %200, float %temp.load365
  134367 = fsub float %temp.load365, float %133366
  135368 = fcmp ogt float %134367, float 0.000001
  br i1 %135368, bb %my_sqrt.select.then, bb %my_sqrt.select.else
my_sqrt.while.body128:
  temp.load150371 = load float from ptr @temp
  153372 = fdiv float %200, float %temp.load150371
  154373 = fadd float %temp.load150371, float %153372
  155374 = si2f i32 2 to float
  156375 = fdiv float %154373, float %155374
  store float %156375 to ptr @temp
  br bb %my_sqrt.while.cond127
my_sqrt.while.exit129:
  temp.load157379 = load float from ptr @temp
  203 = fsub float %temp.load157379, float 1.000000
  204 = fcmp ole float %203, float 0.000001
  br i1 %204, bb %select.then205, bb %select.else206
my_sqrt.select.then:
  br bb %my_sqrt.select.exit
my_sqrt.select.else:
  temp.load140384 = load float from ptr @temp
  143385 = fdiv float %200, float %temp.load140384
  144386 = fsub float %temp.load140384, float %143385
  145387 = fneg float 0.000001
  146388 = fcmp olt float %144386, float %145387
  br bb %my_sqrt.select.exit
my_sqrt.select.exit:
  select.phi391 = phi [bb %my_sqrt.select.else, i1 %146388, bb %my_sqrt.select.then, i1 -1]
  br i1 %select.phi391, bb %my_sqrt.while.body128, bb %my_sqrt.while.exit129
Vectordot.while.cond:
  sum.phi399 = phi [bb %while.exit184, float %19396, bb %Vectordot.while.body, float %37410]
  i.phi400 = phi [bb %while.exit184, i32 0, bb %Vectordot.while.body, i32 %39411]
  25401 = icmp slt i32 %i.phi400, i32 %n.phi
  br i1 %25401, bb %Vectordot.while.body, bb %Vectordot.while.exit
Vectordot.while.body:
  240404 = shl i32 %i.phi400, i32 2
  30405 = ptradd ptr %vectorA, i32 %240404
  30.load406 = load float from ptr %30405
  34407 = ptradd ptr %vectorB, i32 %240404
  34.load408 = load float from ptr %34407
  36409 = fmul float %30.load406, float %34.load408
  37410 = fadd float %sum.phi399, float %36409
  39411 = add i32 %i.phi400, i32 1
  br bb %Vectordot.while.cond
Vectordot.while.exit:
  br bb %Vectordot.while.cond420
Vectordot.while.cond420:
  sum.phi421 = phi [bb %Vectordot.while.exit, float %19396, bb %Vectordot.while.body425, float %37432]
  i.phi422 = phi [bb %Vectordot.while.exit, i32 0, bb %Vectordot.while.body425, i32 %39433]
  25423 = icmp slt i32 %i.phi422, i32 %n.phi
  br i1 %25423, bb %Vectordot.while.body425, bb %Vectordot.while.exit435
Vectordot.while.body425:
  240426 = shl i32 %i.phi422, i32 2
  30427 = ptradd ptr %vectorB, i32 %240426
  30.load428 = load float from ptr %30427
  36431 = fmul float %30.load428, float %30.load428
  37432 = fadd float %sum.phi421, float %36431
  39433 = add i32 %i.phi422, i32 1
  br bb %Vectordot.while.cond420
Vectordot.while.exit435:
  200 = fdiv float %sum.phi399, float %sum.phi421
  br bb %my_sqrt.while.cond127
mult2.while.cond86477:
  sum84.phi233478 = phi [bb %mult1.while.exit49303, float %46293, bb %mult2.while.exit95502, float %sum84.phi488]
  j83.phi231479 = phi [bb %mult1.while.exit49303, i32 0, bb %mult2.while.exit95502, i32 %j83.phi489]
  i82.phi480 = phi [bb %mult1.while.exit49303, i32 0, bb %mult2.while.exit95502, i32 %118506]
  91481 = icmp slt i32 %i82.phi480, i32 %n.phi
  br i1 %91481, bb %mult2.while.body87483, bb %mult2.while.exit88485
mult2.while.body87483:
  br bb %mult2.while.cond93487
mult2.while.exit88485:
  br bb %mult1.while.cond47330
mult2.while.cond93487:
  sum84.phi488 = phi [bb %mult2.while.body87483, float %sum84.phi233478, bb %mult2.while.body94492, float %110499]
  j83.phi489 = phi [bb %mult2.while.body87483, i32 %j83.phi231479, bb %mult2.while.body94492, i32 %112500]
  98490 = icmp slt i32 %j83.phi489, i32 %n.phi
  br i1 %98490, bb %mult2.while.body94492, bb %mult2.while.exit95502
mult2.while.body94492:
  242493 = shl i32 %j83.phi489, i32 2
  103494 = ptradd ptr %Vectortmp, i32 %242493
  103.load495 = load float from ptr %103494
  5605 = add i32 %j83.phi489, i32 %i82.phi480
  9606 = add i32 %5605, i32 1
  10607 = mul i32 %5605, i32 %9606
  245608 = ashr i32 %10607, i32 1
  13609 = add i32 %245608, i32 %j83.phi489
  14610 = add i32 %13609, i32 1
  108497 = si2f i32 %14610 to float
  109498 = fdiv float %103.load495, float %108497
  110499 = fadd float %sum84.phi488, float %109498
  112500 = add i32 %j83.phi489, i32 1
  br bb %mult2.while.cond93487
mult2.while.exit95502:
  243503 = shl i32 %i82.phi480, i32 2
  115504 = ptradd ptr %vectorB, i32 %243503
  store float %sum84.phi488 to ptr %115504
  118506 = add i32 %i82.phi480, i32 1
  br bb %mult2.while.cond86477
mult2.while.cond86512:
  sum84.phi233513 = phi [bb %mult1.while.exit49338, float %46293, bb %mult2.while.exit95537, float %sum84.phi523]
  j83.phi231514 = phi [bb %mult1.while.exit49338, i32 0, bb %mult2.while.exit95537, i32 %j83.phi524]
  i82.phi515 = phi [bb %mult1.while.exit49338, i32 0, bb %mult2.while.exit95537, i32 %118541]
  91516 = icmp slt i32 %i82.phi515, i32 %n.phi
  br i1 %91516, bb %mult2.while.body87518, bb %mult2.while.exit88520
mult2.while.body87518:
  br bb %mult2.while.cond93522
mult2.while.exit88520:
  193 = add i32 %i168.phi, i32 1
  br bb %while.cond182
mult2.while.cond93522:
  sum84.phi523 = phi [bb %mult2.while.body87518, float %sum84.phi233513, bb %mult2.while.body94527, float %110534]
  j83.phi524 = phi [bb %mult2.while.body87518, i32 %j83.phi231514, bb %mult2.while.body94527, i32 %112535]
  98525 = icmp slt i32 %j83.phi524, i32 %n.phi
  br i1 %98525, bb %mult2.while.body94527, bb %mult2.while.exit95537
mult2.while.body94527:
  242528 = shl i32 %j83.phi524, i32 2
  103529 = ptradd ptr %Vectortmp, i32 %242528
  103.load530 = load float from ptr %103529
  5615 = add i32 %j83.phi524, i32 %i82.phi515
  9616 = add i32 %5615, i32 1
  10617 = mul i32 %5615, i32 %9616
  245618 = ashr i32 %10617, i32 1
  13619 = add i32 %245618, i32 %j83.phi524
  14620 = add i32 %13619, i32 1
  108532 = si2f i32 %14620 to float
  109533 = fdiv float %103.load530, float %108532
  110534 = fadd float %sum84.phi523, float %109533
  112535 = add i32 %j83.phi524, i32 1
  br bb %mult2.while.cond93522
mult2.while.exit95537:
  243538 = shl i32 %i82.phi515, i32 2
  115539 = ptradd ptr %vectorA, i32 %243538
  store float %sum84.phi523 to ptr %115539
  118541 = add i32 %i82.phi515, i32 1
  br bb %mult2.while.cond86512
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

pure i32 func(i32 i, i32 j) {
entry:
  5 = add i32 %i, i32 %j
  9 = add i32 %5, i32 1
  10 = mul i32 %5, i32 %9
  245 = ashr i32 %10, i32 1
  13 = add i32 %245, i32 %i
  14 = add i32 %13, i32 1
  ret i32 %14
}


