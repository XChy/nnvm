global ptr B init with 2010 x i32 zeros
global ptr C init with 2010 x i32 zeros
global ptr A init with 4040100 x i32 zeros
immutable global ptr N init with i32 2010
global ptr x init with i32 0
external i32 getint()

external i32 getch()

external void putint(i32 )

external i32 getarray(ptr )

external i32 getfarray(ptr )

i32 main() {
entry81:
  83 = call i32 getint()
  br bb %while.cond86
while.cond86:
  i84.phi142 = phi [bb %entry81, i32 0, bb %while.exit95, i32 %110]
  91 = icmp slt i32 %i84.phi142, i32 %83
  br i1 %91, bb %while.body87, bb %while.exit88
while.body87:
  br bb %while.cond93
while.exit88:
  br bb %while.cond111
while.cond93:
  j85.phi = phi [bb %while.body87, i32 0, bb %while.body94, i32 %108]
  98 = icmp slt i32 %j85.phi, i32 %83
  br i1 %98, bb %while.body94, bb %while.exit95
while.body94:
  101 = mul i32 %i84.phi142, i32 8040
  102 = ptradd ptr @A, i32 %101
  104 = mul i32 %j85.phi, i32 4
  105 = ptradd ptr %102, i32 %104
  106 = call i32 getint()
  store i32 %106 to ptr %105
  108 = add i32 %j85.phi, i32 1
  br bb %while.cond93
while.exit95:
  110 = add i32 %i84.phi142, i32 1
  br bb %while.cond86
while.cond111:
  i84.phi141 = phi [bb %while.exit88, i32 0, bb %while.body112, i32 %123]
  116 = icmp slt i32 %i84.phi141, i32 %83
  br i1 %116, bb %while.body112, bb %while.exit113
while.body112:
  119 = mul i32 %i84.phi141, i32 4
  120 = ptradd ptr @B, i32 %119
  121 = call i32 getint()
  store i32 %121 to ptr %120
  123 = add i32 %i84.phi141, i32 1
  br bb %while.cond111
while.exit113:
  call void _sysy_starttime(i32 59)
  br bb %while.cond125
while.cond125:
  i84.phi = phi [bb %while.exit113, i32 0, bb %mv.while.exit20246, i32 %136]
  129 = icmp slt i32 %i84.phi, i32 50
  br i1 %129, bb %while.body126, bb %while.exit127
while.body126:
  br bb %mv.entry
while.exit127:
  call void _sysy_stoptime(i32 67)
  call void putarray(i32 %83, ptr @C)
  ret i32 0
mv.entry:
  br bb %mv.while.cond
mv.while.cond:
  i.phi152159 = phi [bb %mv.entry, i32 0, bb %mv.while.body, i32 %17166]
  11160 = icmp slt i32 %i.phi152159, i32 %83
  br i1 %11160, bb %mv.while.body, bb %mv.while.exit
mv.while.body:
  14163 = mul i32 %i.phi152159, i32 4
  15164 = ptradd ptr @C, i32 %14163
  store i32 0 to ptr %15164
  17166 = add i32 %i.phi152159, i32 1
  br bb %mv.while.cond
mv.while.exit:
  br bb %mv.while.cond18
mv.while.cond18:
  i.phi171 = phi [bb %mv.while.exit, i32 0, bb %mv.while.exit27, i32 %80195]
  y.phi150172 = phi [bb %mv.while.exit, i32 0, bb %mv.while.exit27, i32 %y.phi149182]
  x.phi147173 = phi [bb %mv.while.exit, i32 11, bb %mv.while.exit27, i32 %x.phi146183]
  23174 = icmp slt i32 %i.phi171, i32 %83
  br i1 %23174, bb %mv.while.body19, bb %mv.while.exit20
mv.while.body19:
  br bb %mv.while.cond25
mv.while.exit20:
  br bb %mv.entry224
mv.while.cond25:
  j.phi181 = phi [bb %mv.while.body19, i32 0, bb %mv.if.exit, i32 %78210]
  y.phi149182 = phi [bb %mv.while.body19, i32 %y.phi150172, bb %mv.if.exit, i32 %y.phi208]
  x.phi146183 = phi [bb %mv.while.body19, i32 %x.phi147173, bb %mv.if.exit, i32 %x.phi209]
  30184 = icmp slt i32 %j.phi181, i32 %83
  br i1 %30184, bb %mv.while.body26, bb %mv.while.exit27
mv.while.body26:
  33187 = mul i32 %i.phi171, i32 8040
  34188 = ptradd ptr @A, i32 %33187
  36189 = mul i32 %j.phi181, i32 4
  37190 = ptradd ptr %34188, i32 %36189
  37.load191 = load i32 from ptr %37190
  39192 = icmp eq i32 %37.load191, i32 0
  br i1 %39192, bb %mv.then, bb %mv.else
mv.while.exit27:
  80195 = add i32 %i.phi171, i32 1
  br bb %mv.while.cond18
mv.then:
  45198 = mul i32 %i.phi171, i32 4
  46199 = ptradd ptr @B, i32 %45198
  46.load200 = load i32 from ptr %46199
  48201 = mul i32 %x.phi146183, i32 %46.load200
  51202 = ptradd ptr @B, i32 %36189
  51.load203 = load i32 from ptr %51202
  53204 = add i32 %48201, i32 %51.load203
  56205 = sub i32 %y.phi149182, i32 %53204
  br bb %mv.if.exit
mv.if.exit:
  y.phi208 = phi [bb %mv.else, i32 %y.phi149182, bb %mv.then, i32 %56205]
  x.phi209 = phi [bb %mv.else, i32 %x.phi146183, bb %mv.then, i32 %53204]
  78210 = add i32 %j.phi181, i32 1
  br bb %mv.while.cond25
mv.else:
  58213 = mul i32 %i.phi171, i32 4
  59214 = ptradd ptr @C, i32 %58213
  62.load215 = load i32 from ptr %59214
  69.load216 = load i32 from ptr %37190
  73217 = ptradd ptr @B, i32 %36189
  73.load218 = load i32 from ptr %73217
  75219 = mul i32 %69.load216, i32 %73.load218
  76220 = add i32 %62.load215, i32 %75219
  store i32 %76220 to ptr %59214
  br bb %mv.if.exit
mv.entry224:
  br bb %mv.while.cond226
mv.while.cond226:
  i.phi152227 = phi [bb %mv.entry224, i32 0, bb %mv.while.body230, i32 %17234]
  11228 = icmp slt i32 %i.phi152227, i32 %83
  br i1 %11228, bb %mv.while.body230, bb %mv.while.exit236
mv.while.body230:
  14231 = mul i32 %i.phi152227, i32 4
  15232 = ptradd ptr @B, i32 %14231
  store i32 0 to ptr %15232
  17234 = add i32 %i.phi152227, i32 1
  br bb %mv.while.cond226
mv.while.exit236:
  br bb %mv.while.cond18238
mv.while.cond18238:
  i.phi239 = phi [bb %mv.while.exit236, i32 0, bb %mv.while.exit27262, i32 %80263]
  y.phi150240 = phi [bb %mv.while.exit236, i32 0, bb %mv.while.exit27262, i32 %y.phi149250]
  x.phi147241 = phi [bb %mv.while.exit236, i32 11, bb %mv.while.exit27262, i32 %x.phi146251]
  23242 = icmp slt i32 %i.phi239, i32 %83
  br i1 %23242, bb %mv.while.body19244, bb %mv.while.exit20246
mv.while.body19244:
  br bb %mv.while.cond25248
mv.while.exit20246:
  136 = add i32 %i84.phi, i32 1
  br bb %while.cond125
mv.while.cond25248:
  j.phi249 = phi [bb %mv.while.body19244, i32 0, bb %mv.if.exit275, i32 %78278]
  y.phi149250 = phi [bb %mv.while.body19244, i32 %y.phi150240, bb %mv.if.exit275, i32 %y.phi276]
  x.phi146251 = phi [bb %mv.while.body19244, i32 %x.phi147241, bb %mv.if.exit275, i32 %x.phi277]
  30252 = icmp slt i32 %j.phi249, i32 %83
  br i1 %30252, bb %mv.while.body26254, bb %mv.while.exit27262
mv.while.body26254:
  33255 = mul i32 %i.phi239, i32 8040
  34256 = ptradd ptr @A, i32 %33255
  36257 = mul i32 %j.phi249, i32 4
  37258 = ptradd ptr %34256, i32 %36257
  37.load259 = load i32 from ptr %37258
  39260 = icmp eq i32 %37.load259, i32 0
  br i1 %39260, bb %mv.then265, bb %mv.else280
mv.while.exit27262:
  80263 = add i32 %i.phi239, i32 1
  br bb %mv.while.cond18238
mv.then265:
  45266 = mul i32 %i.phi239, i32 4
  46267 = ptradd ptr @C, i32 %45266
  46.load268 = load i32 from ptr %46267
  48269 = mul i32 %x.phi146251, i32 %46.load268
  51270 = ptradd ptr @C, i32 %36257
  51.load271 = load i32 from ptr %51270
  53272 = add i32 %48269, i32 %51.load271
  56273 = sub i32 %y.phi149250, i32 %53272
  br bb %mv.if.exit275
mv.if.exit275:
  y.phi276 = phi [bb %mv.else280, i32 %y.phi149250, bb %mv.then265, i32 %56273]
  x.phi277 = phi [bb %mv.else280, i32 %x.phi146251, bb %mv.then265, i32 %53272]
  78278 = add i32 %j.phi249, i32 1
  br bb %mv.while.cond25248
mv.else280:
  58281 = mul i32 %i.phi239, i32 4
  59282 = ptradd ptr @B, i32 %58281
  62.load283 = load i32 from ptr %59282
  69.load284 = load i32 from ptr %37258
  73285 = ptradd ptr @C, i32 %36257
  73.load286 = load i32 from ptr %73285
  75287 = mul i32 %69.load284, i32 %73.load286
  76288 = add i32 %62.load283, i32 %75287
  store i32 %76288 to ptr %59282
  br bb %mv.if.exit275
}

external float getfloat()

external void putfloat(float )

external void putch(i32 )

external void _sysy_stoptime(i32 )

external void putarray(i32 , ptr )

external void _sysy_starttime(i32 )

external void putfarray(i32 , ptr )

void mv(i32 n, ptr A, ptr b, ptr res) {
entry:
  br bb %while.cond
while.cond:
  i.phi152 = phi [bb %entry, i32 0, bb %while.body, i32 %17]
  11 = icmp slt i32 %i.phi152, i32 %n
  br i1 %11, bb %while.body, bb %while.exit
while.body:
  14 = mul i32 %i.phi152, i32 4
  15 = ptradd ptr %res, i32 %14
  store i32 0 to ptr %15
  17 = add i32 %i.phi152, i32 1
  br bb %while.cond
while.exit:
  br bb %while.cond18
while.cond18:
  i.phi = phi [bb %while.exit, i32 0, bb %while.exit27, i32 %80]
  y.phi150 = phi [bb %while.exit, i32 0, bb %while.exit27, i32 %y.phi149]
  x.phi147 = phi [bb %while.exit, i32 11, bb %while.exit27, i32 %x.phi146]
  23 = icmp slt i32 %i.phi, i32 %n
  br i1 %23, bb %while.body19, bb %while.exit20
while.body19:
  br bb %while.cond25
while.exit20:
  ret 
while.cond25:
  j.phi = phi [bb %while.body19, i32 0, bb %if.exit, i32 %78]
  y.phi149 = phi [bb %while.body19, i32 %y.phi150, bb %if.exit, i32 %y.phi]
  x.phi146 = phi [bb %while.body19, i32 %x.phi147, bb %if.exit, i32 %x.phi]
  30 = icmp slt i32 %j.phi, i32 %n
  br i1 %30, bb %while.body26, bb %while.exit27
while.body26:
  33 = mul i32 %i.phi, i32 8040
  34 = ptradd ptr %A, i32 %33
  36 = mul i32 %j.phi, i32 4
  37 = ptradd ptr %34, i32 %36
  37.load = load i32 from ptr %37
  39 = icmp eq i32 %37.load, i32 0
  br i1 %39, bb %then, bb %else
while.exit27:
  80 = add i32 %i.phi, i32 1
  br bb %while.cond18
then:
  45 = mul i32 %i.phi, i32 4
  46 = ptradd ptr %b, i32 %45
  46.load = load i32 from ptr %46
  48 = mul i32 %x.phi146, i32 %46.load
  51 = ptradd ptr %b, i32 %36
  51.load = load i32 from ptr %51
  53 = add i32 %48, i32 %51.load
  56 = sub i32 %y.phi149, i32 %53
  br bb %if.exit
if.exit:
  y.phi = phi [bb %else, i32 %y.phi149, bb %then, i32 %56]
  x.phi = phi [bb %else, i32 %x.phi146, bb %then, i32 %53]
  78 = add i32 %j.phi, i32 1
  br bb %while.cond25
else:
  58 = mul i32 %i.phi, i32 4
  59 = ptradd ptr %res, i32 %58
  62.load = load i32 from ptr %59
  69.load = load i32 from ptr %37
  73 = ptradd ptr %b, i32 %36
  73.load = load i32 from ptr %73
  75 = mul i32 %69.load, i32 %73.load
  76 = add i32 %62.load, i32 %75
  store i32 %76 to ptr %59
  br bb %if.exit
}


